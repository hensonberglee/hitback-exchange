





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-KDZfnHRZjn4xEe2VuPe5iA8c+O1aNoowrYTe3DQQR97UQDzf5HZ15My/ytImCLmX5X6kBM8kwtuUVj5H+DOZbA==" rel="stylesheet" href="https://assets-cdn.github.com/assets/frameworks-7d09971c51977b60c6626362003ef38a.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-nkwPHAvF0KUAjMRlbfAuqMYIhK92MQ4AsAxiGgSNIoh8SFr/wP6Lvqfg9BU5grk2seNj9/gSztwTPHoZOXS++A==" rel="stylesheet" href="https://assets-cdn.github.com/assets/github-663b4850723bde10bd219ca7e1e5c1d4.css" />
  
  
  
  

  <meta name="viewport" content="width=device-width">
  
  <title>highstock/highstock.js at master Â· nesbert/highstock</title>
    <meta name="description" content="GitHub is where people build software. More than 27 million people use GitHub to discover, fork, and contribute to over 80 million projects.">
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta property="og:image" content="https://avatars3.githubusercontent.com/u/303779?s=400&amp;v=4" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="nesbert/highstock" /><meta property="og:url" content="https://github.com/nesbert/highstock" /><meta property="og:description" content="highstock - Shim repository for Highstock. https://github.com/highslide-software/highcharts.com" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6MjUyNTIxODEyOjk2Y2YxNDdhNTc2YmQzMDFjMGI1MTViZmNkODNiYzM3MzRlZDQ0ZDBlYmY3OTY0NmNmMmVjODQ3NjM1MTUwYjk=--e397ce3607fc293c6851782ba4eb70a64f1fab26">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="5004:1218:905A83:10B6D8F:5ABB88D0" data-pjax-transient>


  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
  <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
  <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">
    <meta name="google-analytics" content="UA-3769691-2">

<meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="github" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="5004:1218:905A83:10B6D8F:5ABB88D0" /><meta name="octolytics-dimension-region_edge" content="iad" /><meta name="octolytics-dimension-region_render" content="iad" /><meta name="octolytics-actor-id" content="16344621" /><meta name="octolytics-actor-login" content="hensonberglee" /><meta name="octolytics-actor-hash" content="fe0382eff24da1b5ff023fa39fc581ba1b35881621e4d86947303a1477735961" />
<meta name="hydro-events-url" content="https://github.com/hydro_browser_events" />
<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />




  <meta class="js-ga-set" name="dimension1" content="Logged In">


  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="hensonberglee">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="NTc2NmY5ZDE2N2Q2MTI4YWQzNTJhZTE2NjZiZGQ4NzY0ZGY4OTg2MTFmNDZlYmNlYzBhOWNiYWI3OTAwN2U4MXx7InJlbW90ZV9hZGRyZXNzIjoiMTE0LjkyLjEyNi4xNzciLCJyZXF1ZXN0X2lkIjoiNTAwNDoxMjE4OjkwNUE4MzoxMEI2RDhGOjVBQkI4OEQwIiwidGltZXN0YW1wIjoxNTIyMjM5Njk4LCJob3N0IjoiZ2l0aHViLmNvbSJ9">

    <meta name="enabled-features" content="UNIVERSE_BANNER,FREE_TRIALS,MARKETPLACE_INSIGHTS,MARKETPLACE_INSIGHTS_CONVERSION_PERCENTAGES">

  <meta name="html-safe-nonce" content="357c83772e2ecf884a15cf7818b2cb4066975bad">

  <meta http-equiv="x-pjax-version" content="a353c12c93109a5f7788c92c4c303821">
  

      <link href="https://github.com/nesbert/highstock/commits/master.atom" rel="alternate" title="Recent Commits to highstock:master" type="application/atom+xml">

  <meta name="description" content="highstock - Shim repository for Highstock. https://github.com/highslide-software/highcharts.com">
  <meta name="go-import" content="github.com/nesbert/highstock git https://github.com/nesbert/highstock.git">

  <meta name="octolytics-dimension-user_id" content="303779" /><meta name="octolytics-dimension-user_login" content="nesbert" /><meta name="octolytics-dimension-repository_id" content="11261619" /><meta name="octolytics-dimension-repository_nwo" content="nesbert/highstock" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="11261619" /><meta name="octolytics-dimension-repository_network_root_nwo" content="nesbert/highstock" /><meta name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" content="false" />


    <link rel="canonical" href="https://github.com/nesbert/highstock/blob/master/highstock.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

<link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-in env-production page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="bg-black text-white p-3 show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        
<header class="Header  f5" role="banner">
  <div class="d-flex flex-justify-between px-3 container-lg">
    <div class="d-flex flex-justify-between ">
      <div class="">
        <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg height="32" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>

      </div>

    </div>

    <div class="HeaderMenu d-flex flex-justify-between flex-auto">
      <div class="d-flex">
            <div class="">
              <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" data-scoped-search-url="/nesbert/highstock/search" data-unscoped-search-url="/search" action="/nesbert/highstock/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
    <label class="form-control header-search-wrapper  js-chromeless-input-container">
        <a class="header-search-scope no-underline" href="/nesbert/highstock/blob/master/highstock.js">This repository</a>
      <input type="text"
        class="form-control header-search-input  js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s,/"
        name="q"
        value=""
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off"
        >
        <input type="hidden" class="js-site-search-type-field" name="type" >
    </label>
</form></div>

            </div>

          <ul class="d-flex pl-2 flex-items-center text-bold list-style-none" role="navigation">
            <li>
              <a class="js-selected-navigation-item HeaderNavlink px-2" data-hotkey="g p" data-ga-click="Header, click, Nav menu - item:pulls context:user" aria-label="Pull requests you created" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls" href="/pulls">
                Pull requests
</a>            </li>
            <li>
              <a class="js-selected-navigation-item HeaderNavlink px-2" data-hotkey="g i" data-ga-click="Header, click, Nav menu - item:issues context:user" aria-label="Issues you created" data-selected-links="/issues /issues/assigned /issues/mentioned /issues" href="/issues">
                Issues
</a>            </li>
                <li>
                  <a class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-selected-links=" /marketplace" href="/marketplace">
                    Marketplace
</a>                </li>
            <li>
              <a class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore" href="/explore">
                Explore
</a>            </li>
          </ul>
      </div>

      <div class="d-flex">
        
<ul class="user-nav d-flex flex-items-center list-style-none" id="user-links">
  <li class="dropdown js-menu-container">
    <span class="d-inline-block  px-2">
      
    <a aria-label="You have unread notifications" class="notification-indicator tooltipped tooltipped-s  js-socket-channel js-notification-indicator" data-hotkey="g n" data-ga-click="Header, go to notifications, icon:unread" data-channel="notification-changed:16344621" href="/notifications">
        <span class="mail-status unread"></span>
        <svg class="octicon octicon-bell" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z"/></svg>
</a>
    </span>
  </li>

  <li class="dropdown js-menu-container">
    <details class="dropdown-details details-reset js-dropdown-details d-flex px-2 flex-items-center">
      <summary class="HeaderNavlink"
         aria-label="Create newâ¦"
         data-ga-click="Header, create new, icon:add">
        <svg class="octicon octicon-plus float-left mr-1 mt-1" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"/></svg>
        <span class="dropdown-caret mt-1"></span>
      </summary>

      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="nesbert/highstock">This repository</span>
  </div>
    <a class="dropdown-item" href="/nesbert/highstock/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </details>
  </li>

  <li class="dropdown js-menu-container">

    <details class="dropdown-details details-reset js-dropdown-details d-flex pl-2 flex-items-center">
      <summary class="HeaderNavlink name mt-1"
        aria-label="View profile and more"
        data-ga-click="Header, show menu, icon:avatar">
        <img alt="@hensonberglee" class="avatar float-left mr-1" src="https://avatars1.githubusercontent.com/u/16344621?s=40&amp;v=4" height="20" width="20">
        <span class="dropdown-caret"></span>
      </summary>

      <ul class="dropdown-menu dropdown-menu-sw">
        <li class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">hensonberglee</strong>
        </li>

        <li class="dropdown-divider"></li>

        <li><a class="dropdown-item" href="/hensonberglee" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a></li>
        <li><a class="dropdown-item" href="/hensonberglee?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a></li>
          <li><a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, your gists, text:your gists">Your gists</a></li>

        <li class="dropdown-divider"></li>

        <li><a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a></li>

        <li><a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a></li>

        <li><!-- '"` --><!-- </textarea></xmp> --></option></form><form class="logout-form" action="/logout" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="m/XLHRRNdK37yWQNx0YwGgVSmHrr8cwGzlTD12SDo0d084GH8KwbMj6o1yZc0J//iSDdjLIYuMjWMX8KMIbHkw==" />
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
        </form></li>
      </ul>
    </details>
  </li>
</ul>



        <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="sr-only right-0" action="/logout" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="4IrQcq7YFNnpRpnDwlgNvksH7w2GjjUoap8rTy8EL2IPjJroSjl7RiwnKuhZzqJbx3Wq+99nQeZy+peSewFLtg==" />
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </div>
</header>

      

  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main" class="application-main ">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <div id="js-repo-pjax-container" data-pjax-container >
      







  <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav  ">
    <div class="repohead-details-container clearfix container">

      <ul class="pagehead-actions">
  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form data-autosubmit="true" data-remote="true" class="js-social-container" action="/notifications/subscribe" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="Res4b86zPJwvKDiH9AqOn2+5VxLqCNlzct6rKHRAsQuq9Z7RjjQ/e6BQ20kaw99Vngnsmks62kivq6TV5R8yjQ==" />      <input type="hidden" name="repository_id" id="repository_id" value="11261619" class="form-control" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/nesbert/highstock/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target"
            role="button"
            aria-haspopup="true"
            aria-expanded="false"
            aria-label="Toggle repository notifications menu"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
                <svg class="octicon octicon-eye" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                Watch
            </span>
          </a>
          <a class="social-count js-social-count"
            href="/nesbert/highstock/watchers"
            aria-label="2 users are watching this repository">
            2
          </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg class="octicon octicon-x js-menu-close" role="img" aria-label="Close" viewBox="0 0 12 16" version="1.1" width="12" height="16"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input type="radio" name="do" id="do_included" value="included" checked="checked" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg class="octicon octicon-eye" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input type="radio" name="do" id="do_subscribed" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg class="octicon octicon-eye" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                        Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input type="radio" name="do" id="do_ignore" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg class="octicon octicon-mute" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                        Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="starred js-social-form" action="/nesbert/highstock/unstar" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="DPj8mou1Wd6qqTq3HiIEWgq55BfaUT4M+Lb/pfl6myn2Qtp4kEDofsYYbihiOq5Cic1dDccmLHix7mcAxjUpGQ==" />
      <input type="hidden" name="context" value="repository"></input>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar nesbert/highstock"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg class="octicon octicon-star" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/nesbert/highstock/stargazers"
           aria-label="10 users starred this repository">
          10
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="unstarred js-social-form" action="/nesbert/highstock/star" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="DGcnIcBmDPBqLMUG14KcfhXR+RXWfiZukr0nHZLhMhaJQqifUUri8NrueHEvgiAt6xd+DVmwuLC1DlklT60AwA==" />
      <input type="hidden" name="context" value="repository"></input>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star nesbert/highstock"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg class="octicon octicon-star" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/nesbert/highstock/stargazers"
           aria-label="10 users starred this repository">
          10
        </a>
</form>  </div>

  </li>

  <li>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="btn-with-count" action="/nesbert/highstock/fork" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="wzi25Ex8FHEoAgTmfQOOsKaJrb7SHHrGLaVl/VMJR25phjRwgPZu+3LjMk/9nDF/fHU8TUU7vEA54wNjB6FiXw==" />
            <button
                type="submit"
                class="btn btn-sm btn-with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of nesbert/highstock to your account"
                aria-label="Fork your own copy of nesbert/highstock to your account">
              <svg class="octicon octicon-repo-forked" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
            </button>
</form>
    <a href="/nesbert/highstock/network" class="social-count"
       aria-label="9 users forked this repository">
      9
    </a>
  </li>
</ul>

      <h1 class="public ">
  <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a class="url fn" rel="author" href="/nesbert">nesbert</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a data-pjax="#js-repo-pjax-container" href="/nesbert/highstock">highstock</a></strong>

</h1>

    </div>
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax container"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a class="js-selected-navigation-item selected reponav-item" itemprop="url" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /nesbert/highstock" href="/nesbert/highstock">
      <svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" data-hotkey="g i" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /nesbert/highstock/issues" href="/nesbert/highstock/issues">
        <svg class="octicon octicon-issue-opened" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">0</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a data-hotkey="g p" itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /nesbert/highstock/pulls" href="/nesbert/highstock/pulls">
      <svg class="octicon octicon-git-pull-request" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">0</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a data-hotkey="g b" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /nesbert/highstock/projects" href="/nesbert/highstock/projects">
      <svg class="octicon octicon-project" viewBox="0 0 15 16" version="1.1" width="15" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>
    <a class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /nesbert/highstock/wiki" href="/nesbert/highstock/wiki">
      <svg class="octicon octicon-book" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

  <a class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse /nesbert/highstock/pulse" href="/nesbert/highstock/pulse">
    <svg class="octicon octicon-graph" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Insights
</a>

</nav>


  </div>

<div class="container new-discussion-timeline experiment-repo-nav  ">
  <div class="repository-content ">

    
  <a class="d-none js-permalink-shortcut" data-hotkey="y" href="/nesbert/highstock/blob/10835f6172383c28553f1a1527b0b4da13489985/highstock.js">Permalink</a>

  <!-- blob contrib key: blob_contributors:v21:8b500a624bef7c60ad97f5e33a661c89 -->

  <div class="file-navigation">
    
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg class="octicon octicon-x js-menu-close" role="img" aria-label="Close" viewBox="0 0 12 16" version="1.1" width="12" height="16"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/nesbert/highstock/blob/master/highstock.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/nesbert/highstock/tree/1.3.10/highstock.js"
              data-name="1.3.10"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.10">
                1.3.10
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/nesbert/highstock/tree/1.3.9/highstock.js"
              data-name="1.3.9"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.9">
                1.3.9
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/nesbert/highstock/tree/1.3.8/highstock.js"
              data-name="1.3.8"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.8">
                1.3.8
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/nesbert/highstock/tree/1.3.7/highstock.js"
              data-name="1.3.7"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.7">
                1.3.7
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/nesbert/highstock/tree/1.3.6/highstock.js"
              data-name="1.3.6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.6">
                1.3.6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/nesbert/highstock/tree/1.3.5/highstock.js"
              data-name="1.3.5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.5">
                1.3.5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/nesbert/highstock/tree/1.3.4/highstock.js"
              data-name="1.3.4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.4">
                1.3.4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/nesbert/highstock/tree/1.3.3/highstock.js"
              data-name="1.3.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.3">
                1.3.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/nesbert/highstock/tree/1.3.2/highstock.js"
              data-name="1.3.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3.2">
                1.3.2
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="BtnGroup float-right">
      <a href="/nesbert/highstock/find/master"
            class="js-pjax-capture-input btn btn-sm BtnGroup-item"
            data-pjax
            data-hotkey="t">
        Find file
      </a>
      <clipboard-copy
            for="blob-path"
            aria-label="Copy file path to clipboard"
            class="btn btn-sm BtnGroup-item tooltipped tooltipped-s"
            copied-label="Copied!">
        Copy path
      </clipboard-copy>
    </div>
    <div id="blob-path" class="breadcrumb">
      <span class="repo-root js-repo-root"><span class="js-path-segment"><a data-pjax="true" href="/nesbert/highstock"><span>highstock</span></a></span></span><span class="separator">/</span><strong class="final-path">highstock.js</strong>
    </div>
  </div>


  <include-fragment src="/nesbert/highstock/contributors/master/highstock.js" class="commit-tease">
    <div>
      Fetching contributors&hellip;
    </div>

    <div class="commit-tease-contributors">
      <img alt="" class="loader-loading float-left" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" height="16" />
      <span class="loader-error">Cannot retrieve contributors at this time</span>
    </div>
</include-fragment>

  <div class="file">
    <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a id="raw-url" class="btn btn-sm BtnGroup-item" href="/nesbert/highstock/raw/master/highstock.js">Raw</a>
        <a class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b" href="/nesbert/highstock/blame/master/highstock.js">Blame</a>
      <a rel="nofollow" class="btn btn-sm BtnGroup-item" href="/nesbert/highstock/commits/master/highstock.js">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="https://desktop.github.com"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg class="octicon octicon-device-desktop" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form js-update-url-with-hash" action="/nesbert/highstock/edit/master/highstock.js" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="ywCxyVu8P9Id8mmE62ikPfrx+5TQYFOPt64aR1jC0yI9AyKz7Q6tH0mPpoptuwaQozvnmtnmM/KRvAZdbzHZ+g==" />
            <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
              aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
              <svg class="octicon octicon-pencil" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
            </button>
</form>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form" action="/nesbert/highstock/delete/master/highstock.js" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="VYKL2yXsWz/J3Ybd3kUPlT7ySVhUuKTKk9N4a2AzXBU7wb+VnXJsqNzg8sxuOuKF04P3O3SkTZe5VE1vrc+scQ==" />
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg class="octicon octicon-trashcan" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      376 lines (373 sloc)
      <span class="file-info-divider"></span>
    183 KB
  </div>
</div>

    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Highstock JS v1.3.10 (2014-03-10)</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> (c) 2009-2014 Torstein Honsi</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> License: www.highcharts.com/license</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">u</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;a<span class="pl-k">||</span>(a<span class="pl-k">=</span>{});<span class="pl-k">for</span>(c <span class="pl-k">in</span> b)a[c]<span class="pl-k">=</span>b[c];<span class="pl-k">return</span> a}function w(){var a,b=arguments,c,d={},e=function(a,b){var c,d;typeof a!==&quot;object&quot;&amp;&amp;(a={});for(d in b)b.hasOwnProperty(d)&amp;&amp;(c=b[d],a[d]=c&amp;&amp;typeof c===&quot;object&quot;&amp;&amp;Object.prototype.toString.call(c)!==&quot;[object Array]&quot;&amp;&amp;d!==&quot;renderTo&quot;&amp;&amp;typeof c.nodeType!==&quot;number&quot;?e(a[d]||{},c):b[d]);return a};b[0]===!0&amp;&amp;(d=b[1],b=Array.prototype.slice.call(b,2));c=b.length;for(a=0;a&lt;c;a++)d=e(d,b[a]);return d}function Jb(){for(var a=0,b=arguments,</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,d<span class="pl-k">=</span>{};a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)d[b[a<span class="pl-k">++</span>]]<span class="pl-k">=</span>b[a];<span class="pl-k">return</span> d}function y(a,b){return parseInt(a,b||10)}function ka(a){return typeof a===&quot;string&quot;}function ba(a){return typeof a===&quot;object&quot;}function Qa(a){return Object.prototype.toString.call(a)===&quot;[object Array]&quot;}function za(a){return typeof a===&quot;number&quot;}function Ga(a){return W.log(a)/W.LN10}function la(a){return W.pow(10,a)}function ma(a,b){for(var c=a.length;c--;)if(a[c]===b){a.splice(c,1);break}}function r(a){return a!==s&amp;&amp;a!==null}function I(a,b,c){var d,e;if(ka(b))r(c)?</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">setAttribute</span>(b,c)<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">getAttribute</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">getAttribute</span>(b));<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">r</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-en">ba</span>(b))<span class="pl-k">for</span>(d <span class="pl-k">in</span> b)<span class="pl-smi">a</span>.<span class="pl-c1">setAttribute</span>(d,b[d]);<span class="pl-k">return</span> e}function ia(a){return Qa(a)?a:[a]}function n(){var a=arguments,b,c,d=a.length;for(b=0;b&lt;d;b++)if(c=a[b],typeof c!==&quot;undefined&quot;&amp;&amp;c!==null)return c}function J(a,b){if(Ha&amp;&amp;!$&amp;&amp;b&amp;&amp;b.opacity!==s)b.filter=&quot;alpha(opacity=&quot;+b.opacity*100+&quot;)&quot;;u(a.style,b)}function Y(a,b,c,d,e){a=C.createElement(a);b&amp;&amp;u(a,b);e&amp;&amp;J(a,{padding:0,border:X,margin:0});c&amp;&amp;J(a,c);d&amp;&amp;d.appendChild(a);return a}</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ca</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> <span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">c</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a</span>;<span class="pl-en">u</span>(<span class="pl-smi">c</span>.<span class="pl-c1">prototype</span>,b);<span class="pl-k">return</span> c}function Ia(a,b,c,d){var e=G.lang,a=+a||0,f=b===-1?(a.toString().split(&quot;.&quot;)[1]||&quot;&quot;).length:isNaN(b=O(b))?2:b,b=c===void 0?e.decimalPoint:c,d=d===void 0?e.thousandsSep:d,e=a&lt;0?&quot;-&quot;:&quot;&quot;,c=String(y(a=O(a).toFixed(f))),g=c.length&gt;3?c.length%3:0;return e+(g?c.substr(0,g)+d:&quot;&quot;)+c.substr(g).replace(/(\d{3})(?=\d)/g,&quot;$1&quot;+d)+(f?b+O(a-c).toFixed(f).slice(2):&quot;&quot;)}function Ra(a,b){return Array((b||2)+1-String(a).length).join(0)+a}function R(a,</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">b,c){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[b];a[b]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>);<span class="pl-smi">a</span>.<span class="pl-c1">unshift</span>(d);<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,a)}}function Ja(a,b){for(var c=&quot;{&quot;,d=!1,e,f,g,h,i,k=[];(c=a.indexOf(c))!==-1;){e=a.slice(0,c);if(d){f=e.split(&quot;:&quot;);g=f.shift().split(&quot;.&quot;);i=g.length;e=b;for(h=0;h&lt;i;h++)e=e[g[h]];if(f.length)f=f.join(&quot;:&quot;),g=/\.([0-9])/,h=G.lang,i=void 0,/f$/.test(f)?(i=(i=f.match(g))?i[1]:-1,e=Ia(e,i,h.decimalPoint,f.indexOf(&quot;,&quot;)&gt;-1?h.thousandsSep:&quot;&quot;)):e=ra(f,e)}k.push(e);a=a.slice(c+1);c=(d=!d)?&quot;}&quot;:&quot;{&quot;}k.push(a);</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}function rb(a){return W.pow(10,T(W.log(a)/W.LN10))}function sb(a,b,c,d){var e,c=n(c,1);e=a/c;b||(b=[1,2,2.5,5,10],d&amp;&amp;d.allowDecimals===!1&amp;&amp;(c===1?b=[1,2,5,10]:c&lt;=0.1&amp;&amp;(b=[1/c])));for(d=0;d&lt;b.length;d++)if(a=b[d],e&lt;=(b[d]+(b[d+1]||b[d]))/2)break;a*=c;return a}function Kb(){this.symbol=this.color=0}function tb(a,b){var c=a.length,d,e;for(e=0;e&lt;c;e++)a[e].ss_i=e;a.sort(function(a,c){d=b(a,c);return d===0?a.ss_i-c.ss_i:d});for(e=0;e&lt;c;e++)delete a[e].ss_i}function Sa(a){for(var b=a.length,</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];b<span class="pl-k">--</span>;)a[b]<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>a[b]);<span class="pl-k">return</span> c}function Aa(a){for(var b=a.length,c=a[0];b--;)a[b]&gt;c&amp;&amp;(c=a[b]);return c}function Ka(a,b){for(var c in a)a[c]&amp;&amp;a[c]!==b&amp;&amp;a[c].destroy&amp;&amp;a[c].destroy(),delete a[c]}function Ta(a){hb||(hb=Y(Ua));a&amp;&amp;hb.appendChild(a);hb.innerHTML=&quot;&quot;}function na(a,b){var c=&quot;Highcharts error #&quot;+a+&quot;: www.highcharts.com/errors/&quot;+a;if(b)throw c;else U.console&amp;&amp;console.log(c)}function ea(a){return parseFloat(a.toPrecision(14))}function Za(a,b){Ba=n(a,b.animation)}function Lb(){var a=G.global.useUTC,</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>getUTC<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>setUTC<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>set<span class="pl-pds">&quot;</span></span>;La<span class="pl-k">=</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span>.<span class="pl-smi">global</span>.<span class="pl-smi">timezoneOffset</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">*</span><span class="pl-c1">6E4</span>;ib<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-c1">Date</span>.<span class="pl-c1">UTC</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">i</span>){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>(a,b,<span class="pl-en">n</span>(c,<span class="pl-c1">1</span>),<span class="pl-en">n</span>(g,<span class="pl-c1">0</span>),<span class="pl-en">n</span>(h,<span class="pl-c1">0</span>),<span class="pl-en">n</span>(i,<span class="pl-c1">0</span>))).<span class="pl-c1">getTime</span>()};ub<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Minutes<span class="pl-pds">&quot;</span></span>;vb<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Hours<span class="pl-pds">&quot;</span></span>;wb<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Day<span class="pl-pds">&quot;</span></span>;Va<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Date<span class="pl-pds">&quot;</span></span>;jb<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Month<span class="pl-pds">&quot;</span></span>;kb<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>FullYear<span class="pl-pds">&quot;</span></span>;Mb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Minutes<span class="pl-pds">&quot;</span></span>;Nb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Hours<span class="pl-pds">&quot;</span></span>;xb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Date<span class="pl-pds">&quot;</span></span>;Ob<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Month<span class="pl-pds">&quot;</span></span>;Pb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>FullYear<span class="pl-pds">&quot;</span></span>}function Ca(){}function $a(a,b,c,d){this.axis=a;this.pos=b;this.type=c||&quot;&quot;;this.isNew=!0;!c&amp;&amp;!d&amp;&amp;this.addLabel()}function N(){this.init.apply(this,arguments)}function sa(){this.init.apply(this,</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)}function Qb(a,b,c,d,e,f){var g=a.chart.inverted;this.axis=a;this.isNegative=c;this.options=b;this.x=d;this.total=null;this.points={};this.stack=e;this.percent=f===&quot;percent&quot;;this.alignOptions={align:b.align||(g?c?&quot;left&quot;:&quot;right&quot;:&quot;center&quot;),verticalAlign:b.verticalAlign||(g?&quot;middle&quot;:c?&quot;bottom&quot;:&quot;top&quot;),y:n(b.y,g?4:c?14:-6),x:n(b.x,g?c?-6:6:0)};this.textAlign=b.textAlign||(g?c?&quot;right&quot;:&quot;left&quot;:&quot;center&quot;)}function yb(a){var b=a.options,c=b.navigator,d=c.enabled,b=b.scrollbar,e=b.enabled,f=d?c.height:</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,g<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">handles</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarButtons</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">elementsToDestroy</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">setBaseSeries</span>();<span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>f;<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarHeight</span><span class="pl-k">=</span>g;<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarEnabled</span><span class="pl-k">=</span>e;<span class="pl-c1">this</span>.<span class="pl-smi">navigatorEnabled</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">navigatorOptions</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarOptions</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">outlineHeight</span><span class="pl-k">=</span>f<span class="pl-k">+</span>g;<span class="pl-c1">this</span>.<span class="pl-en">init</span>()}function zb(a){this.init(a)}var s,C=document,U=window,W=Math,t=W.round,T=W.floor,Wa=W.ceil,v=W.max,x=W.min,O=W.abs,aa=W.cos,fa=W.sin,oa=W.PI,Ma=oa*2/360,Da=navigator.userAgent,Rb=U.opera,Ha=/msie/i.test(Da)&amp;&amp;!Rb,lb=</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">C</span>.<span class="pl-smi">documentMode</span><span class="pl-k">===</span><span class="pl-c1">8</span>,mb<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>AppleWebKit<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(Da),ab<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>Firefox<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(Da),db<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(Mobile<span class="pl-k">|</span>Android<span class="pl-k">|</span>Windows Phone)<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(Da),Na<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/2000/svg<span class="pl-pds">&quot;</span></span>,$<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-c1">C</span>.<span class="pl-smi">createElementNS</span><span class="pl-k">&amp;&amp;!!</span><span class="pl-c1">C</span>.<span class="pl-c1">createElementNS</span>(Na,<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">createSVGRect</span>,Yb<span class="pl-k">=</span>ab<span class="pl-k">&amp;&amp;</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">Da</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Firefox/<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">1</span>],<span class="pl-c1">10</span>)<span class="pl-k">&lt;</span><span class="pl-c1">4</span>,ga<span class="pl-k">=</span><span class="pl-k">!</span>$<span class="pl-k">&amp;&amp;!</span>Ha<span class="pl-k">&amp;&amp;!!</span><span class="pl-c1">C</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">getContext</span>,Xa,bb,Sb<span class="pl-k">=</span>{},Ab<span class="pl-k">=</span><span class="pl-c1">0</span>,hb,<span class="pl-c1">G</span>,ra,Ba,Bb,<span class="pl-c1">A</span>,<span class="pl-en">ta</span><span class="pl-k">=</span><span class="pl-k">function</span>(){},da<span class="pl-k">=</span>[],Ua<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>,Zb<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,Tb<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>,ib,La,ub,vb,wb,Va,jb,kb,Mb,Nb,xb,Ob,Pb,<span class="pl-c1">H</span><span class="pl-k">=</span>{},<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-c1">U</span>.<span class="pl-smi">Highcharts</span><span class="pl-k">=</span><span class="pl-c1">U</span>.<span class="pl-smi">Highcharts</span><span class="pl-k">?</span><span class="pl-en">na</span>(<span class="pl-c1">16</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>{};ra<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">r</span>(b)<span class="pl-k">||</span><span class="pl-c1">isNaN</span>(b))<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>Invalid date<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">n</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>%Y-%m-%d %H:%M:%S<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(b<span class="pl-k">-</span>La),e,f<span class="pl-k">=</span>d[vb](),g<span class="pl-k">=</span>d[wb](),h<span class="pl-k">=</span>d[Va](),i<span class="pl-k">=</span>d[jb](),k<span class="pl-k">=</span>d[kb](),j<span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-c1">lang</span>,l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">weekdays</span>,d<span class="pl-k">=</span><span class="pl-en">u</span>({a<span class="pl-k">:</span>l[g].<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">3</span>),<span class="pl-c1">A</span><span class="pl-k">:</span>l[g],d<span class="pl-k">:</span><span class="pl-en">Ra</span>(h),e<span class="pl-k">:</span>h,b<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">shortMonths</span>[i],<span class="pl-c1">B</span><span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">months</span>[i],m<span class="pl-k">:</span><span class="pl-en">Ra</span>(i<span class="pl-k">+</span><span class="pl-c1">1</span>),y<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">substr</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>),<span class="pl-c1">Y</span><span class="pl-k">:</span>k,<span class="pl-c1">H</span><span class="pl-k">:</span><span class="pl-en">Ra</span>(f),<span class="pl-c1">I</span><span class="pl-k">:</span><span class="pl-en">Ra</span>(f<span class="pl-k">%</span><span class="pl-c1">12</span><span class="pl-k">||</span><span class="pl-c1">12</span>),l<span class="pl-k">:</span>f<span class="pl-k">%</span><span class="pl-c1">12</span><span class="pl-k">||</span><span class="pl-c1">12</span>,<span class="pl-c1">M</span><span class="pl-k">:</span><span class="pl-en">Ra</span>(d[ub]()),p<span class="pl-k">:</span>f<span class="pl-k">&lt;</span><span class="pl-c1">12</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>AM<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>PM<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">P</span><span class="pl-k">:</span>f<span class="pl-k">&lt;</span><span class="pl-c1">12</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>am<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pm<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">S</span><span class="pl-k">:</span><span class="pl-en">Ra</span>(<span class="pl-smi">d</span>.<span class="pl-c1">getSeconds</span>()),<span class="pl-c1">L</span><span class="pl-k">:</span><span class="pl-en">Ra</span>(<span class="pl-en">t</span>(b<span class="pl-k">%</span><span class="pl-c1">1E3</span>),<span class="pl-c1">3</span>)},<span class="pl-c1">Q</span>.<span class="pl-smi">dateFormats</span>);<span class="pl-k">for</span>(e <span class="pl-k">in</span> d)<span class="pl-k">for</span>(;<span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>;)a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e,<span class="pl-k">typeof</span> d[e]<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>d[e](b)<span class="pl-k">:</span>d[e]);<span class="pl-k">return</span> c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>).<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">1</span>)<span class="pl-k">:</span>a};<span class="pl-smi">Kb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">wrapColor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">&gt;=</span>a)<span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-c1">0</span>},<span class="pl-en">wrapSymbol</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">symbol</span><span class="pl-k">&gt;=</span>a)<span class="pl-c1">this</span>.<span class="pl-smi">symbol</span><span class="pl-k">=</span><span class="pl-c1">0</span>}};<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-en">Jb</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>millisecond<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>second<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1E3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>minute<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">6E4</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>hour<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">36E5</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>day<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">864E5</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>week<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">6048E5</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">26784E5</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">31556952E3</span>);Bb<span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shift</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&gt;</span><span class="pl-k">-</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-c1">7</span><span class="pl-k">:</span><span class="pl-c1">3</span>,g,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(c),h,i,<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">--</span>;)a[g]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">splice</span>(g<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,a[g<span class="pl-k">+</span><span class="pl-c1">1</span>],a[g<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span>],a[g<span class="pl-k">+</span><span class="pl-c1">1</span>],a[g<span class="pl-k">+</span><span class="pl-c1">2</span>])};e<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">k</span>(b),<span class="pl-en">k</span>(c));<span class="pl-smi">a</span>.<span class="pl-smi">isArea</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">6</span>,<span class="pl-c1">6</span>),i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">splice</span>(<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">6</span>,<span class="pl-c1">6</span>));<span class="pl-k">if</span>(d<span class="pl-k">&lt;=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">/</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(;d<span class="pl-k">--</span>;)c<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(c).<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,f).<span class="pl-c1">concat</span>(c);<span class="pl-smi">a</span>.<span class="pl-smi">shift</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>a;)d<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(b).<span class="pl-c1">splice</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span>f,f),e<span class="pl-k">&amp;&amp;</span>(d[f<span class="pl-k">-</span><span class="pl-c1">6</span>]<span class="pl-k">=</span>d[f<span class="pl-k">-</span><span class="pl-c1">2</span>],d[f<span class="pl-k">-</span><span class="pl-c1">5</span>]<span class="pl-k">=</span>d[f<span class="pl-k">-</span><span class="pl-c1">1</span>]),b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(d);h<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(h),c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">concat</span>(i));<span class="pl-k">return</span>[b,c]},<span class="pl-en">step</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-c1">1</span>)e<span class="pl-k">=</span>d;<span class="pl-k">else</span> <span class="pl-k">if</span>(f<span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span><span class="pl-c1">1</span>)<span class="pl-k">for</span>(;f<span class="pl-k">--</span>;)d<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(a[f]),e[f]<span class="pl-k">=</span><span class="pl-c1">isNaN</span>(d)<span class="pl-k">?</span>a[f]<span class="pl-k">:</span>c<span class="pl-k">*</span><span class="pl-c1">parseFloat</span>(b[f]<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">d)<span class="pl-k">+</span>d;<span class="pl-k">else</span> e<span class="pl-k">=</span>b;<span class="pl-k">return</span> e}};(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">U</span>.<span class="pl-smi">HighchartsAdapter</span><span class="pl-k">=</span><span class="pl-c1">U</span>.<span class="pl-smi">HighchartsAdapter</span><span class="pl-k">||</span>a<span class="pl-k">&amp;&amp;</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fx</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">step</span>,e,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">Tween</span>,g<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">propHooks</span>;e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">cssHooks</span>.<span class="pl-smi">opacity</span>;<span class="pl-smi">a</span>.<span class="pl-en">extend</span>(<span class="pl-smi">a</span>.<span class="pl-smi">easing</span>,{<span class="pl-en">easeOutQuad</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span><span class="pl-k">-</span>d<span class="pl-k">*</span>(b<span class="pl-k">/=</span>e)<span class="pl-k">*</span>(b<span class="pl-k">-</span><span class="pl-c1">2</span>)<span class="pl-k">+</span>c}});<span class="pl-smi">a</span>.<span class="pl-en">each</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>cur<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_default<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>d,j;b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>cur<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">prototype</span><span class="pl-k">:</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>_default<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>g[b],b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>set<span class="pl-pds">&quot;</span></span>);(j<span class="pl-k">=</span>e[b])<span class="pl-k">&amp;&amp;</span>(e[b]<span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,c<span class="pl-k">=</span>a<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">this</span>;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">prop</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>align<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">elem</span>,<span class="pl-smi">d</span>.<span class="pl-smi">attr</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-smi">c</span>.<span class="pl-smi">prop</span>,b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>cur<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>s<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">now</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">j</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)})});<span class="pl-en">R</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">attr</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">opacity</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,c)});<span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">elem</span>,d;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">started</span>)d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">init</span>(c,<span class="pl-smi">c</span>.<span class="pl-smi">d</span>,<span class="pl-smi">c</span>.<span class="pl-smi">toD</span>),<span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">=</span>d[<span class="pl-c1">0</span>],<span class="pl-smi">a</span>.<span class="pl-smi">end</span><span class="pl-k">=</span>d[<span class="pl-c1">1</span>],<span class="pl-smi">a</span>.<span class="pl-smi">started</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-en">step</span>(<span class="pl-smi">a</span>.<span class="pl-c1">start</span>,<span class="pl-smi">a</span>.<span class="pl-smi">end</span>,<span class="pl-smi">a</span>.<span class="pl-smi">pos</span>,<span class="pl-smi">c</span>.<span class="pl-smi">toD</span>))};f<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-smi">d</span><span class="pl-k">=</span>{set<span class="pl-k">:</span>e}<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">d</span><span class="pl-k">=</span>e;<span class="pl-c1">this</span>.<span class="pl-smi">each</span><span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">forEach</span><span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">forEach</span>.<span class="pl-c1">call</span>(a,b)}<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(a[c],a[c],c,a)<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> c};<span class="pl-smi">a</span>.<span class="pl-smi">fn</span>.<span class="pl-en">highcharts</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Chart<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=</span><span class="pl-c1">arguments</span>,c,d;</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ka</span>(b[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>b[<span class="pl-c1">0</span>],b<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(b,<span class="pl-c1">1</span>));c<span class="pl-k">=</span>b[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(c<span class="pl-k">!==</span>s)<span class="pl-smi">c</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span><span class="pl-k">||</span>{},<span class="pl-smi">c</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderTo</span><span class="pl-k">=</span><span class="pl-c1">this</span>[<span class="pl-c1">0</span>],<span class="pl-k">new</span> <span class="pl-en">Q</span>[a](c,b[<span class="pl-c1">1</span>]),d<span class="pl-k">=</span><span class="pl-c1">this</span>;c<span class="pl-k">===</span>s<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>da[<span class="pl-en">I</span>(<span class="pl-c1">this</span>[<span class="pl-c1">0</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>)]);<span class="pl-k">return</span> d}},getScript<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">getScript</span>,inArray<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">inArray</span>,<span class="pl-en">adapterRun</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-en">a</span>(b)[c]()},grep<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">grep</span>,<span class="pl-en">map</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>)d[e]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">call</span>(a[e],a[e],e,a);<span class="pl-k">return</span> d},<span class="pl-en">offset</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">a</span>(b).<span class="pl-en">offset</span>()},<span class="pl-en">addEvent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-en">a</span>(b).<span class="pl-en">bind</span>(c,d)},<span class="pl-en">removeEvent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">C</span>.<span class="pl-smi">removeEventListener</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>removeEventListener<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>detachEvent<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">C</span>[e]<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;!</span>b[e]<span class="pl-k">&amp;&amp;</span>(b[e]<span class="pl-k">=</span><span class="pl-k">function</span>(){});<span class="pl-en">a</span>(b).<span class="pl-en">unbind</span>(c,d)},<span class="pl-en">fireEvent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">Event</span>(c),g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>detached<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c,h;<span class="pl-k">!</span>Ha<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">delete</span> <span class="pl-smi">d</span>.<span class="pl-c1">layerX</span>,<span class="pl-k">delete</span> <span class="pl-smi">d</span>.<span class="pl-c1">layerY</span>);<span class="pl-en">u</span>(f,d);b[c]<span class="pl-k">&amp;&amp;</span>(b[g]<span class="pl-k">=</span>b[c],b[c]<span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-smi">a</span>.<span class="pl-en">each</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>preventDefault<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stopPropagation<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>f[b];f[b]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">try</span>{<span class="pl-smi">c</span>.<span class="pl-c1">call</span>(f)}<span class="pl-k">catch</span>(a){b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>preventDefault<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}}});<span class="pl-en">a</span>(b).<span class="pl-en">trigger</span>(f);b[g]<span class="pl-k">&amp;&amp;</span>(b[c]<span class="pl-k">=</span>b[g],b[g]<span class="pl-k">=</span><span class="pl-c1">null</span>);e<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">f</span>.<span class="pl-en">isDefaultPrevented</span>()<span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-en">e</span>(f)},<span class="pl-en">washMouseEvent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">originalEvent</span><span class="pl-k">||</span>a;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">pageX</span><span class="pl-k">===</span>s)<span class="pl-smi">c</span>.<span class="pl-c1">pageX</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">pageX</span>,<span class="pl-smi">c</span>.<span class="pl-c1">pageY</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">pageY</span>;<span class="pl-k">return</span> c},<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">a</span>(b);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>)<span class="pl-smi">b</span>.<span class="pl-c1">style</span><span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">d</span>)<span class="pl-smi">b</span>.<span class="pl-smi">toD</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">d</span>,<span class="pl-smi">c</span>.<span class="pl-smi">d</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">e</span>.<span class="pl-c1">stop</span>();<span class="pl-smi">c</span>.<span class="pl-smi">opacity</span><span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">attr</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">opacity</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">e</span>.<span class="pl-c1">animate</span>(c,d)},<span class="pl-en">stop</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">a</span>(b).<span class="pl-c1">stop</span>()}}})(<span class="pl-c1">U</span>.<span class="pl-smi">jQuery</span>);<span class="pl-k">var</span> <span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">U</span>.<span class="pl-smi">HighchartsAdapter</span>,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">L</span><span class="pl-k">||</span>{};<span class="pl-c1">L</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">L</span>.<span class="pl-smi">init</span>.<span class="pl-c1">call</span>(<span class="pl-c1">L</span>,Bb);<span class="pl-k">var</span> nb<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">adapterRun</span>,$b<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">getScript</span>,ua<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">inArray</span>,q<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">each</span>,Cb<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">grep</span>,ac<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">offset</span>,va<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">map</span>,<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">addEvent</span>,<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">removeEvent</span>,<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">fireEvent</span>,bc<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">washMouseEvent</span>,ob<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">animate</span>,eb<span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-smi">stop</span>,<span class="pl-c1">F</span><span class="pl-k">=</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line">x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">15</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#666<span class="pl-pds">&quot;</span></span>,cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>11px<span class="pl-pds">&quot;</span></span>}};<span class="pl-c1">G</span><span class="pl-k">=</span>{colors<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#2f7ed8,#0d233a,#8bbc21,#910000,#1aadce,#492970,#f28f43,#77a1e5,#c42525,#a6c96a<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),symbols<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>diamond<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>square<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>triangle<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>triangle-down<span class="pl-pds">&quot;</span></span>],lang<span class="pl-k">:</span>{loading<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Loading...<span class="pl-pds">&quot;</span></span>,months<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>January,February,March,April,May,June,July,August,September,October,November,December<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),shortMonths<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),weekdays<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line">decimalPoint<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>,numericSymbols<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>k,M,G,T,P,E<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),resetZoom<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Reset zoom<span class="pl-pds">&quot;</span></span>,resetZoomTitle<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Reset zoom level 1:1<span class="pl-pds">&quot;</span></span>,thousandsSep<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>},global<span class="pl-k">:</span>{useUTC<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,canvasToolsURL<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://code.highcharts.com/stock/1.3.10/modules/canvas-tools.js<span class="pl-pds">&quot;</span></span>,VMLRadialGradientURL<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://code.highcharts.com/stock/1.3.10/gfx/vml-radial-gradient.png<span class="pl-pds">&quot;</span></span>},chart<span class="pl-k">:</span>{borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#4572A7<span class="pl-pds">&quot;</span></span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">5</span>,defaultSeriesType<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>,ignoreHiddenSeries<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,spacing<span class="pl-k">:</span>[<span class="pl-c1">10</span>,<span class="pl-c1">10</span>,<span class="pl-c1">15</span>,<span class="pl-c1">10</span>],backgroundColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,plotBorderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>,resetZoomButton<span class="pl-k">:</span>{theme<span class="pl-k">:</span>{zIndex<span class="pl-k">:</span><span class="pl-c1">20</span>},</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line">position<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">10</span>,y<span class="pl-k">:</span><span class="pl-c1">10</span>}}},title<span class="pl-k">:</span>{text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Chart title<span class="pl-pds">&quot;</span></span>,align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,margin<span class="pl-k">:</span><span class="pl-c1">15</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#274b6d<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>16px<span class="pl-pds">&quot;</span></span>}},subtitle<span class="pl-k">:</span>{text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#4d759e<span class="pl-pds">&quot;</span></span>}},plotOptions<span class="pl-k">:</span>{line<span class="pl-k">:</span>{allowPointSelect<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,showCheckbox<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,animation<span class="pl-k">:</span>{duration<span class="pl-k">:</span><span class="pl-c1">1E3</span>},events<span class="pl-k">:</span>{},lineWidth<span class="pl-k">:</span><span class="pl-c1">2</span>,marker<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,radius<span class="pl-k">:</span><span class="pl-c1">4</span>,lineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},select<span class="pl-k">:</span>{fillColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,lineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">2</span>}}},point<span class="pl-k">:</span>{events<span class="pl-k">:</span>{}},dataLabels<span class="pl-k">:</span><span class="pl-en">w</span>(<span class="pl-c1">F</span>,{align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">formatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-en">Ia</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)},verticalAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>}),cropThreshold<span class="pl-k">:</span><span class="pl-c1">300</span>,pointRange<span class="pl-k">:</span><span class="pl-c1">0</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{marker<span class="pl-k">:</span>{}},select<span class="pl-k">:</span>{marker<span class="pl-k">:</span>{}}},stickyTracking<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,turboThreshold<span class="pl-k">:</span><span class="pl-c1">1E3</span>}},labels<span class="pl-k">:</span>{style<span class="pl-k">:</span>{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#3E576F<span class="pl-pds">&quot;</span></span>}},legend<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,layout<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span>,<span class="pl-en">labelFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">name</span>},borderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#909090<span class="pl-pds">&quot;</span></span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">5</span>,navigation<span class="pl-k">:</span>{activeColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#274b6d<span class="pl-pds">&quot;</span></span>,inactiveColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>},shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,itemStyle<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#274b6d<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>12px<span class="pl-pds">&quot;</span></span>},itemHoverStyle<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000<span class="pl-pds">&quot;</span></span>},</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line">itemHiddenStyle<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>},itemCheckboxStyle<span class="pl-k">:</span>{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>13px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>13px<span class="pl-pds">&quot;</span></span>},symbolPadding<span class="pl-k">:</span><span class="pl-c1">5</span>,verticalAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,title<span class="pl-k">:</span>{style<span class="pl-k">:</span>{fontWeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>}}},loading<span class="pl-k">:</span>{labelStyle<span class="pl-k">:</span>{fontWeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>,position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1em<span class="pl-pds">&quot;</span></span>},style<span class="pl-k">:</span>{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,backgroundColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white<span class="pl-pds">&quot;</span></span>,opacity<span class="pl-k">:</span><span class="pl-c1">0.5</span>,textAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>}},tooltip<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,animation<span class="pl-k">:</span>$,backgroundColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255, 255, 255, .85)<span class="pl-pds">&quot;</span></span>,borderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">3</span>,dateTimeLabelFormats<span class="pl-k">:</span>{millisecond<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M:%S.%L<span class="pl-pds">&quot;</span></span>,second<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M:%S<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">minute<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M<span class="pl-pds">&quot;</span></span>,hour<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M<span class="pl-pds">&quot;</span></span>,day<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %Y<span class="pl-pds">&quot;</span></span>,week<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Week from %A, %b %e, %Y<span class="pl-pds">&quot;</span></span>,month<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%B %Y<span class="pl-pds">&quot;</span></span>,year<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>},headerFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;font-size: 10px&quot;&gt;{point.key}&lt;/span&gt;&lt;br/&gt;<span class="pl-pds">&#39;</span></span>,pointFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;color:{series.color}&quot;&gt;{series.name}&lt;/span&gt;: &lt;b&gt;{point.y}&lt;/b&gt;&lt;br/&gt;<span class="pl-pds">&#39;</span></span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,snap<span class="pl-k">:</span>db<span class="pl-k">?</span><span class="pl-c1">25</span><span class="pl-k">:</span><span class="pl-c1">10</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#333333<span class="pl-pds">&quot;</span></span>,cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>12px<span class="pl-pds">&quot;</span></span>,padding<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>8px<span class="pl-pds">&quot;</span></span>,whiteSpace<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>}},credits<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Highcharts.com<span class="pl-pds">&quot;</span></span>,href<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://www.highcharts.com<span class="pl-pds">&quot;</span></span>,position<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">10</span>,verticalAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">5</span>},style<span class="pl-k">:</span>{cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>,color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#909090<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>9px<span class="pl-pds">&quot;</span></span>}}};<span class="pl-k">var</span> <span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-smi">plotOptions</span>,<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">V</span>.<span class="pl-smi">line</span>;<span class="pl-en">Lb</span>();<span class="pl-k">var</span> cc<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>rgba<span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">?</span>(?:<span class="pl-cce">\.</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-k">?</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\)</span><span class="pl-pds">/</span></span>,dc<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>#(<span class="pl-c1">[<span class="pl-c1">a-fA-F0-9</span>]</span><span class="pl-k">{2}</span>)(<span class="pl-c1">[<span class="pl-c1">a-fA-F0-9</span>]</span><span class="pl-k">{2}</span>)(<span class="pl-c1">[<span class="pl-c1">a-fA-F0-9</span>]</span><span class="pl-k">{2}</span>)<span class="pl-pds">/</span></span>,ec<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>rgb<span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\)</span><span class="pl-pds">/</span></span>,<span class="pl-en">Ea</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c,d;(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span><span class="pl-k">?</span>d<span class="pl-k">=</span><span class="pl-en">va</span>(<span class="pl-smi">a</span>.<span class="pl-smi">stops</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">Ea</span>(a[<span class="pl-c1">1</span>])})<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-smi">cc</span>.<span class="pl-c1">exec</span>(a))<span class="pl-k">?</span>b<span class="pl-k">=</span>[<span class="pl-en">y</span>(c[<span class="pl-c1">1</span>]),<span class="pl-en">y</span>(c[<span class="pl-c1">2</span>]),<span class="pl-en">y</span>(c[<span class="pl-c1">3</span>]),<span class="pl-c1">parseFloat</span>(c[<span class="pl-c1">4</span>],</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">10</span>)]<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-smi">dc</span>.<span class="pl-c1">exec</span>(a))<span class="pl-k">?</span>b<span class="pl-k">=</span>[<span class="pl-en">y</span>(c[<span class="pl-c1">1</span>],<span class="pl-c1">16</span>),<span class="pl-en">y</span>(c[<span class="pl-c1">2</span>],<span class="pl-c1">16</span>),<span class="pl-en">y</span>(c[<span class="pl-c1">3</span>],<span class="pl-c1">16</span>),<span class="pl-c1">1</span>]<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-smi">ec</span>.<span class="pl-c1">exec</span>(a))<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>[<span class="pl-en">y</span>(c[<span class="pl-c1">1</span>]),<span class="pl-en">y</span>(c[<span class="pl-c1">2</span>]),<span class="pl-en">y</span>(c[<span class="pl-c1">3</span>]),<span class="pl-c1">1</span>])})(a);<span class="pl-k">return</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> f;d<span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-en">w</span>(a),<span class="pl-smi">f</span>.<span class="pl-smi">stops</span><span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(<span class="pl-smi">f</span>.<span class="pl-smi">stops</span>),<span class="pl-en">q</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">f</span>.<span class="pl-smi">stops</span>[b]<span class="pl-k">=</span>[<span class="pl-smi">f</span>.<span class="pl-smi">stops</span>[b][<span class="pl-c1">0</span>],<span class="pl-smi">a</span>.<span class="pl-c1">get</span>(c)]}))<span class="pl-k">:</span>f<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(b[<span class="pl-c1">0</span>])<span class="pl-k">?</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgb(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b[<span class="pl-c1">3</span>]<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a;<span class="pl-k">return</span> f},<span class="pl-en">brighten</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(d)<span class="pl-en">q</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-en">brighten</span>(a)});<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">za</span>(a)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> c;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">3</span>;c<span class="pl-k">++</span>)b[c]<span class="pl-k">+=</span><span class="pl-en">y</span>(a<span class="pl-k">*</span><span class="pl-c1">255</span>),b[c]<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(b[c]<span class="pl-k">=</span><span class="pl-c1">0</span>),b[c]<span class="pl-k">&gt;</span><span class="pl-c1">255</span><span class="pl-k">&amp;&amp;</span>(b[c]<span class="pl-k">=</span><span class="pl-c1">255</span>)}<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">rgba<span class="pl-k">:</span>b,<span class="pl-en">setOpacity</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){b[<span class="pl-c1">3</span>]<span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>}}};<span class="pl-smi">Ca</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">element</span><span class="pl-k">=</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-en">Y</span>(b)<span class="pl-k">:</span><span class="pl-c1">C</span>.<span class="pl-c1">createElementNS</span>(Na,b);<span class="pl-c1">this</span>.<span class="pl-smi">renderer</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">attrSetters</span><span class="pl-k">=</span>{}},opacity<span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){b<span class="pl-k">=</span><span class="pl-en">n</span>(b,Ba,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-en">eb</span>(<span class="pl-c1">this</span>);<span class="pl-k">if</span>(b){b<span class="pl-k">=</span><span class="pl-en">w</span>(b,{});<span class="pl-k">if</span>(c)<span class="pl-smi">b</span>.<span class="pl-c1">complete</span><span class="pl-k">=</span>c;<span class="pl-en">ob</span>(<span class="pl-c1">this</span>,a,b)}<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-en">attr</span>(a),c<span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>()},<span class="pl-en">attr</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,e,f,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>(),i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>,k,j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">attrSetters</span>,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">shadows</span>,m,o,p<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-en">ka</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(b)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>a,a<span class="pl-k">=</span>{},a[c]<span class="pl-k">=</span>b);<span class="pl-k">if</span>(<span class="pl-en">ka</span>(a))c<span class="pl-k">=</span>a,h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>c<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cx<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">y<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cy<span class="pl-pds">&quot;</span></span>}[c]<span class="pl-k">||</span>c<span class="pl-k">:</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>strokeWidth<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>),p<span class="pl-k">=</span><span class="pl-en">I</span>(g,c)<span class="pl-k">||</span><span class="pl-c1">this</span>[c]<span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(p));<span class="pl-k">else</span>{<span class="pl-k">for</span>(c <span class="pl-k">in</span> a)<span class="pl-k">if</span>(k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span>a[c],e<span class="pl-k">=</span>j[c]<span class="pl-k">&amp;&amp;</span>j[c].<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,d,c),e<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>){e<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>e);<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">join</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)),<span class="pl-sr"><span class="pl-pds">/</span>(NaN<span class="pl-k">|</span> <span class="pl-k">{2}</span><span class="pl-k">|</span><span class="pl-k">^$</span>)<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(d)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>M 0 0<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">childNodes</span>[e],<span class="pl-en">I</span>(f,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-en">I</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">I</span>(f,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,d);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>))o<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">color</span>(d,g,c);<span class="pl-k">else</span> <span class="pl-k">if</span>(h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>))c<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cx<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cy<span class="pl-pds">&quot;</span></span>}[c]<span class="pl-k">||</span>c;<span class="pl-k">else</span> <span class="pl-k">if</span>(h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>)<span class="pl-en">I</span>(g,{rx<span class="pl-k">:</span>d,ry<span class="pl-k">:</span>d}),k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>rotation<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>verticalAlign<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>scaleX<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>scaleY<span class="pl-pds">&quot;</span></span>)k<span class="pl-k">=</span>o<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">color</span>(d,g,c);<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>dashstyle<span class="pl-pds">&quot;</span></span>)<span class="pl-k">if</span>(c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke-dasharray<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">toLowerCase</span>(),d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>solid<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">=</span><span class="pl-c1">X</span>;<span class="pl-k">else</span>{<span class="pl-k">if</span>(d){d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shortdashdotdot<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>3,1,1,1,1,1,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shortdashdot<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>3,1,1,1<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shortdot<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>1,1,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shortdash<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>3,1,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>longdash<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>8,3,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>dot<span class="pl-pds">/</span>g</span>,</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>1,3,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dash<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>4,3,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>,<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)d[e]<span class="pl-k">=</span><span class="pl-en">y</span>(d[e])<span class="pl-k">*</span><span class="pl-en">n</span>(a[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>],<span class="pl-c1">this</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]);d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)}}<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">=</span><span class="pl-en">y</span>(d);<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>align<span class="pl-pds">&quot;</span></span>)c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span>{left<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>,center<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,right<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>}[d];<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>)e<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>],e<span class="pl-k">||</span>(e<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createElementNS</span>(Na,<span class="pl-s"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">g</span>.<span class="pl-c1">appendChild</span>(e)),<span class="pl-smi">e</span>.<span class="pl-smi">textContent</span><span class="pl-k">=</span>d;c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>strokeWidth<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>){<span class="pl-c1">this</span>[c]<span class="pl-k">=</span>d;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">stroke</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>])<span class="pl-en">I</span>(g,</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">stroke</span>),<span class="pl-en">I</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]),<span class="pl-c1">this</span>.<span class="pl-smi">hasStroke</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">hasStroke</span>)<span class="pl-smi">g</span>.<span class="pl-c1">removeAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-smi">hasStroke</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-c1">this</span>.<span class="pl-smi">symbolName</span><span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(x<span class="pl-k">|</span>y<span class="pl-k">|</span>width<span class="pl-k">|</span>height<span class="pl-k">|</span>r<span class="pl-k">|</span>start<span class="pl-k">|</span>end<span class="pl-k">|</span>innerR<span class="pl-k">|</span>anchorX<span class="pl-k">|</span>anchorY)<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(c)<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-en">symbolAttr</span>(a),m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(width<span class="pl-k">|</span>height<span class="pl-k">|</span>visibility<span class="pl-k">|</span>x<span class="pl-k">|</span>y<span class="pl-k">|</span>d<span class="pl-k">|</span>transform<span class="pl-k">|</span>cx<span class="pl-k">|</span>cy<span class="pl-k">|</span>r)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(c))<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)<span class="pl-en">I</span>(l[e],c,c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-en">v</span>(d<span class="pl-k">-</span>(l[e].<span class="pl-smi">cutHeight</span><span class="pl-k">||</span><span class="pl-c1">0</span>),<span class="pl-c1">0</span>)<span class="pl-k">:</span>d);<span class="pl-k">if</span>((c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>[c]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">d;<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(d<span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">textStr</span>)<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">bBox</span>,<span class="pl-c1">this</span>.<span class="pl-smi">textStr</span><span class="pl-k">=</span>d,<span class="pl-c1">this</span>.<span class="pl-smi">added</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-en">buildText</span>(<span class="pl-c1">this</span>)}<span class="pl-k">else</span> k<span class="pl-k">||</span>d<span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">setAttribute</span>(c,d)}o<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">updateTransform</span>()}<span class="pl-k">return</span> p},<span class="pl-en">addClass</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>,c<span class="pl-k">=</span><span class="pl-en">I</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(a)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">I</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">symbolAttr</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-en">q</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x,y,r,start,end,width,height,innerR,anchorX,anchorY<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">c</span>){b[c]<span class="pl-k">=</span><span class="pl-en">n</span>(a[c],b[c])});<span class="pl-smi">b</span>.<span class="pl-en">attr</span>({d<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">symbols</span>[<span class="pl-smi">b</span>.<span class="pl-smi">symbolName</span>](<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">b</span>.<span class="pl-c1">height</span>,b)})},<span class="pl-en">clip</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>clip-path<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>url(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">url</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">X</span>)},<span class="pl-en">crisp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span>{},d,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">strokeWidth</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">strokeWidth</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">attr</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-c1">0</span>;d<span class="pl-k">=</span><span class="pl-en">t</span>(e)<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-en">T</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d;<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-en">T</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d;<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-en">T</span>((<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d);<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-en">T</span>((<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d);<span class="pl-smi">a</span>.<span class="pl-smi">strokeWidth</span><span class="pl-k">=</span>e;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-c1">this</span>[b]<span class="pl-k">!==</span>a[b]<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>[b]<span class="pl-k">=</span>c[b]<span class="pl-k">=</span>a[b]);<span class="pl-k">return</span> c},<span class="pl-en">css</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">styles</span>,c<span class="pl-k">=</span>{},d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>,e,f,g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;e<span class="pl-k">=</span><span class="pl-k">!</span>b;<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>)<span class="pl-smi">a</span>.<span class="pl-smi">fill</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>;<span class="pl-k">if</span>(b)<span class="pl-k">for</span>(f <span class="pl-k">in</span> a)a[f]<span class="pl-k">!==</span>b[f]<span class="pl-k">&amp;&amp;</span>(c[f]<span class="pl-k">=</span>a[f],</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(e){e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">textWidth</span><span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">y</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span>);b<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-en">u</span>(b,c));<span class="pl-c1">this</span>.<span class="pl-smi">styles</span><span class="pl-k">=</span>a;e<span class="pl-k">&amp;&amp;</span>(ga<span class="pl-k">||!</span>$<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">forExport</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-c1">width</span>;<span class="pl-k">if</span>(Ha<span class="pl-k">&amp;&amp;!</span>$)<span class="pl-en">J</span>(<span class="pl-c1">this</span>.<span class="pl-smi">element</span>,a);<span class="pl-k">else</span>{<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>()};<span class="pl-k">for</span>(f <span class="pl-k">in</span> a)g<span class="pl-k">+=</span><span class="pl-smi">f</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">A-Z</span>]</span>)<span class="pl-pds">/</span>g</span>,b)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[f]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>;<span class="pl-en">I</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>,g)}e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">added</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">buildText</span>(<span class="pl-c1">this</span>)}<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">on</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">element</span>;bb<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(<span class="pl-smi">d</span>.<span class="pl-en">ontouchstart</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">c</span>.<span class="pl-smi">touchEventFired</span><span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>();<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>();<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(d,</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">a)},<span class="pl-smi">d</span>.<span class="pl-en">onclick</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){(<span class="pl-smi">Da</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Android<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>()<span class="pl-k">-</span>(<span class="pl-smi">c</span>.<span class="pl-smi">touchEventFired</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">&gt;</span><span class="pl-c1">1100</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(d,a)})<span class="pl-k">:</span>d[<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setRadialReference</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">element</span>.<span class="pl-smi">radialReference</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">attr</span>({translateX<span class="pl-k">:</span>a,translateY<span class="pl-k">:</span>b})},<span class="pl-en">invert</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">inverted</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-en">updateTransform</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">updateTransform</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">translateX</span><span class="pl-k">||</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">translateY</span><span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scaleX</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scaleY</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">inverted</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rotation</span>;e<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-c1">this</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">+=</span><span class="pl-c1">this</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>));a<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>];e<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rotate(90) scale(-1,1)<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rotate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);(<span class="pl-en">r</span>(c)<span class="pl-k">||</span><span class="pl-en">r</span>(d))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>scale(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">n</span>(c,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">n</span>(d,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">I</span>(<span class="pl-c1">this</span>.<span class="pl-smi">element</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>))},<span class="pl-en">toFront</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>;<span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">appendChild</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">align</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e,f,g,h<span class="pl-k">=</span>{};e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>;f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">alignedObjects</span>;<span class="pl-k">if</span>(a){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">alignOptions</span><span class="pl-k">=</span>a,<span class="pl-c1">this</span>.<span class="pl-smi">alignByTranslate</span><span class="pl-k">=</span>b,<span class="pl-k">!</span>c<span class="pl-k">||</span><span class="pl-en">ka</span>(c))<span class="pl-c1">this</span>.<span class="pl-smi">alignTo</span><span class="pl-k">=</span>d<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>renderer<span class="pl-pds">&quot;</span></span>,<span class="pl-en">ma</span>(f,</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>),<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>),c<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-k">else</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">alignOptions</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">alignByTranslate</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">alignTo</span>;c<span class="pl-k">=</span><span class="pl-en">n</span>(c,e[d],e);d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">align</span>;e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">verticalAlign</span>;f<span class="pl-k">=</span>(<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>);g<span class="pl-k">=</span>(<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>)f<span class="pl-k">+=</span>(<span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">/</span>{right<span class="pl-k">:</span><span class="pl-c1">1</span>,center<span class="pl-k">:</span><span class="pl-c1">2</span>}[d];h[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-en">t</span>(f);<span class="pl-k">if</span>(e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>)g<span class="pl-k">+=</span>(<span class="pl-smi">c</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>(<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-c1">0</span>))<span class="pl-k">/</span>({bottom<span class="pl-k">:</span><span class="pl-c1">1</span>,middle<span class="pl-k">:</span><span class="pl-c1">2</span>}[e]<span class="pl-k">||</span><span class="pl-c1">1</span>);h[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-en">t</span>(g);<span class="pl-c1">this</span>[<span class="pl-c1">this</span>.<span class="pl-smi">placed</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](h);<span class="pl-c1">this</span>.<span class="pl-smi">placed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">alignAttr</span><span class="pl-k">=</span>h;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getBBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bBox</span>,</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>,c,d,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rotation</span>;c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">styles</span>,g<span class="pl-k">=</span>e<span class="pl-k">*</span>Ma;d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">textStr</span>;<span class="pl-k">var</span> h;<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">Zb</span>.<span class="pl-c1">test</span>(d))h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">length</span><span class="pl-k">+</span>(f<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">fontSize</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">fontFamily</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">cache</span>[h];<span class="pl-k">if</span>(<span class="pl-k">!</span>a){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">namespaceURI</span><span class="pl-k">===</span>Na<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">forExport</span>){<span class="pl-k">try</span>{a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">getBBox</span><span class="pl-k">?</span><span class="pl-en">u</span>({},<span class="pl-smi">c</span>.<span class="pl-en">getBBox</span>())<span class="pl-k">:</span>{width<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">offsetWidth</span>,height<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">offsetHeight</span>}}<span class="pl-k">catch</span>(i){}<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>)a<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>}}<span class="pl-k">else</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">htmlGetBBox</span>();<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">isSVG</span>){c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>;d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>;<span class="pl-k">if</span>(Ha<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">fontSize</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>11px<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">toPrecision</span>(<span class="pl-c1">3</span>)<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>16.9<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">14</span>;<span class="pl-k">if</span>(e)<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-en">O</span>(d<span class="pl-k">*</span><span class="pl-en">fa</span>(g))<span class="pl-k">+</span><span class="pl-en">O</span>(c<span class="pl-k">*</span><span class="pl-en">aa</span>(g)),<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-en">O</span>(d<span class="pl-k">*</span><span class="pl-en">aa</span>(g))<span class="pl-k">+</span><span class="pl-en">O</span>(c<span class="pl-k">*</span><span class="pl-en">fa</span>(g))}<span class="pl-c1">this</span>.<span class="pl-smi">bBox</span><span class="pl-k">=</span>a;h<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">cache</span>[h]<span class="pl-k">=</span>a)}<span class="pl-k">return</span> a},<span class="pl-en">show</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">attr</span>({visibility<span class="pl-k">:</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>})},<span class="pl-en">hide</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">attr</span>({visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>})},<span class="pl-en">fadeOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-smi">b</span>.<span class="pl-c1">animate</span>({opacity<span class="pl-k">:</span><span class="pl-c1">0</span>},{duration<span class="pl-k">:</span>a<span class="pl-k">||</span><span class="pl-c1">150</span>,<span class="pl-en">complete</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-en">hide</span>()}})},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span>a<span class="pl-k">||</span>b,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">element</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">box</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">zIndex</span>,g,h;<span class="pl-k">if</span>(a)<span class="pl-c1">this</span>.<span class="pl-smi">parentGroup</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">parentInverted</span><span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span>;<span class="pl-c1">this</span>.<span class="pl-smi">textStr</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">buildText</span>(<span class="pl-c1">this</span>);</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(f)<span class="pl-smi">c</span>.<span class="pl-smi">handleZ</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-en">y</span>(f);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">handleZ</span>){a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">childNodes</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>)<span class="pl-k">if</span>(b<span class="pl-k">=</span>a[g],c<span class="pl-k">=</span><span class="pl-en">I</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>zIndex<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">y</span>(c)<span class="pl-k">&gt;</span>f<span class="pl-k">||!</span><span class="pl-en">r</span>(f)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(c))){<span class="pl-smi">d</span>.<span class="pl-c1">insertBefore</span>(e,b);h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}}h<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-c1">appendChild</span>(e);<span class="pl-c1">this</span>.<span class="pl-smi">added</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">onAdd</span>)<span class="pl-c1">this</span>.<span class="pl-en">onAdd</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">safeRemoveChild</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">removeChild</span>(a)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">element</span><span class="pl-k">||</span>{},c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shadows</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">isSVG</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">parentGroup</span>,e,f;<span class="pl-smi">b</span>.<span class="pl-smi">onclick</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">onmouseout</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">onmouseover</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">onmousemove</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">point</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">eb</span>(a);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">clipPath</span>)<span class="pl-smi">a</span>.<span class="pl-smi">clipPath</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">clipPath</span>.<span class="pl-en">destroy</span>();<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">stops</span>){<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-smi">stops</span>[f]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span>[f].<span class="pl-en">destroy</span>();<span class="pl-smi">a</span>.<span class="pl-smi">stops</span><span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-smi">a</span>.<span class="pl-en">safeRemoveChild</span>(b);<span class="pl-k">for</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">safeRemoveChild</span>(b)});d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">div</span>.<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span>;)b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">parentGroup</span>,<span class="pl-smi">a</span>.<span class="pl-en">safeRemoveChild</span>(<span class="pl-smi">d</span>.<span class="pl-smi">div</span>),<span class="pl-k">delete</span> <span class="pl-smi">d</span>.<span class="pl-smi">div</span>,d<span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-smi">alignTo</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">ma</span>(<span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">alignedObjects</span>,a);<span class="pl-k">for</span>(e <span class="pl-k">in</span> a)<span class="pl-k">delete</span> a[e];<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">shadow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e,f,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>,h,i,k,j;<span class="pl-k">if</span>(a){i<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-c1">3</span>);k<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">opacity</span><span class="pl-k">||</span><span class="pl-c1">0.15</span>)<span class="pl-k">/</span>i;j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">parentInverted</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>(-1,-1)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetX</span>,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetY</span>,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;=</span>i;e<span class="pl-k">++</span>){f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-c1">0</span>);h<span class="pl-k">=</span>i<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>e;<span class="pl-en">I</span>(f,{isShadow<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span>,stroke<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>k<span class="pl-k">*</span>e,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>h,transform<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>translate<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j,fill<span class="pl-k">:</span><span class="pl-c1">X</span>});<span class="pl-k">if</span>(c)<span class="pl-en">I</span>(f,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-en">v</span>(<span class="pl-en">I</span>(f,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>)<span class="pl-k">-</span>h,<span class="pl-c1">0</span>)),<span class="pl-smi">f</span>.<span class="pl-smi">cutHeight</span><span class="pl-k">=</span>h;b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">element</span>.<span class="pl-c1">appendChild</span>(f)<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(f,g);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(f)}<span class="pl-c1">this</span>.<span class="pl-smi">shadows</span><span class="pl-k">=</span>d}<span class="pl-k">return</span> <span class="pl-c1">this</span>}};<span class="pl-k">var</span> <span class="pl-en">ha</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-c1">Element</span><span class="pl-k">:</span>Ca,<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>location,g,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({version<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1.1<span class="pl-pds">&quot;</span></span>}).<span class="pl-en">css</span>(<span class="pl-c1">this</span>.<span class="pl-en">getStyle</span>(d));</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">element</span>;<span class="pl-smi">a</span>.<span class="pl-c1">appendChild</span>(g);<span class="pl-smi">a</span>.<span class="pl-smi">innerHTML</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>xmlns<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">I</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>xmlns<span class="pl-pds">&quot;</span></span>,Na);<span class="pl-c1">this</span>.<span class="pl-smi">isSVG</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">box</span><span class="pl-k">=</span>g;<span class="pl-c1">this</span>.<span class="pl-smi">boxWrapper</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">alignedObjects</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">url</span><span class="pl-k">=</span>(ab<span class="pl-k">||</span>mb)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">C</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>base<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">href</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>#<span class="pl-c1">.</span><span class="pl-k">*?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-cce">\(</span>&#39;<span class="pl-cce">\)</span>]</span>)<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>$1<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span> <span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>%20<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>().<span class="pl-smi">element</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">C</span>.<span class="pl-c1">createTextNode</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Created with Highstock 1.3.10<span class="pl-pds">&quot;</span></span>));<span class="pl-c1">this</span>.<span class="pl-smi">defs</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>defs<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>();<span class="pl-c1">this</span>.<span class="pl-smi">forExport</span><span class="pl-k">=</span>e;<span class="pl-c1">this</span>.<span class="pl-smi">gradients</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">cache</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-en">setSize</span>(b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> h;</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(ab<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">getBoundingClientRect</span>)<span class="pl-c1">this</span>.<span class="pl-smi">subPixelFix</span><span class="pl-k">=</span><span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">J</span>(a,{left<span class="pl-k">:</span><span class="pl-c1">0</span>,top<span class="pl-k">:</span><span class="pl-c1">0</span>});h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">getBoundingClientRect</span>();<span class="pl-en">J</span>(a,{left<span class="pl-k">:</span><span class="pl-en">Wa</span>(<span class="pl-smi">h</span>.<span class="pl-c1">left</span>)<span class="pl-k">-</span><span class="pl-smi">h</span>.<span class="pl-c1">left</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-en">Wa</span>(<span class="pl-smi">h</span>.<span class="pl-c1">top</span>)<span class="pl-k">-</span><span class="pl-smi">h</span>.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>})},<span class="pl-en">b</span>(),<span class="pl-en">D</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,b)},<span class="pl-en">getStyle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">style</span><span class="pl-k">=</span><span class="pl-en">u</span>({fontFamily<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Verdana, Arial, Helvetica, sans-serif<span class="pl-pds">&#39;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>12px<span class="pl-pds">&quot;</span></span>},a)},<span class="pl-en">isHidden</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">boxWrapper</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">width</span>},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">defs</span>;<span class="pl-c1">this</span>.<span class="pl-smi">box</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">boxWrapper</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boxWrapper</span>.<span class="pl-en">destroy</span>();<span class="pl-en">Ka</span>(<span class="pl-c1">this</span>.<span class="pl-smi">gradients</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">{});<span class="pl-c1">this</span>.<span class="pl-smi">gradients</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(a)<span class="pl-c1">this</span>.<span class="pl-smi">defs</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">destroy</span>();<span class="pl-c1">this</span>.<span class="pl-smi">subPixelFix</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">S</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">subPixelFix</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">alignedObjects</span><span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">createElement</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">this.Element</span>;<span class="pl-smi">b</span>.<span class="pl-en">init</span>(<span class="pl-c1">this</span>,a);<span class="pl-k">return</span> b},<span class="pl-en">draw</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">buildText</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">element</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">forExport</span>,e<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">textStr</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toString</span>().<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(b<span class="pl-k">|</span>strong)&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;font-weight:bold&quot;&gt;<span class="pl-pds">&#39;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(i<span class="pl-k">|</span>em)&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;font-style:italic&quot;&gt;<span class="pl-pds">&#39;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;a<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;span<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span>(b<span class="pl-k">|</span>strong<span class="pl-k">|</span>i<span class="pl-k">|</span>em<span class="pl-k">|</span>a)&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/span&gt;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;br<span class="pl-c1">.</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>),</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">childNodes</span>,g<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*</span>style=&quot;(<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">+</span>)&quot;<span class="pl-c1">.</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span></span>,h<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*</span>href=&quot;(http<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">+</span>)&quot;<span class="pl-c1">.</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span></span>,i<span class="pl-k">=</span><span class="pl-en">I</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>),k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">styles</span>,j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">textWidth</span>,l<span class="pl-k">=</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-c1">lineHeight</span>,m<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>,<span class="pl-en">o</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> l<span class="pl-k">?</span><span class="pl-en">y</span>(l)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-sr"><span class="pl-pds">/</span>(px<span class="pl-k">|</span>em)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span><span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">fontSize</span><span class="pl-k">||</span><span class="pl-c1">11</span>).<span class="pl-smi">h</span>};m<span class="pl-k">--</span>;)<span class="pl-smi">b</span>.<span class="pl-c1">removeChild</span>(f[m]);j<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">added</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">box</span>.<span class="pl-c1">appendChild</span>(b);e[<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">pop</span>();<span class="pl-en">q</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> l,m<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>|||&lt;span<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/span&gt;|||<span class="pl-pds">&quot;</span></span>);l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>|||<span class="pl-pds">&quot;</span></span>);<span class="pl-en">q</span>(l,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">if</span>(e<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span>{},</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createElementNS</span>(Na,<span class="pl-s"><span class="pl-pds">&quot;</span>tspan<span class="pl-pds">&quot;</span></span>),q;<span class="pl-smi">g</span>.<span class="pl-c1">test</span>(e)<span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">match</span>(g)[<span class="pl-c1">1</span>].<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(;<span class="pl-k">|</span> <span class="pl-k">|</span><span class="pl-k">^</span>)color(<span class="pl-c1">[ :]</span>)<span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$1fill$2<span class="pl-pds">&quot;</span></span>),<span class="pl-en">I</span>(n,<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>,q));<span class="pl-smi">h</span>.<span class="pl-c1">test</span>(e)<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">I</span>(n,<span class="pl-s"><span class="pl-pds">&quot;</span>onclick<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>location.href=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">match</span>(h)[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>),<span class="pl-en">J</span>(n,{cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>}));e<span class="pl-k">=</span>(<span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(<span class="pl-c1">.</span><span class="pl-k">|</span><span class="pl-c1">\n</span>)<span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&amp;lt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&amp;gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(e<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">C</span>.<span class="pl-c1">createTextNode</span>(e)),m<span class="pl-k">?</span><span class="pl-smi">p</span>.<span class="pl-smi">dx</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">p</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>i,<span class="pl-en">I</span>(n,p),<span class="pl-k">!</span>m<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>$<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-en">J</span>(n,{display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>}),<span class="pl-en">I</span>(n,<span class="pl-s"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>,<span class="pl-en">o</span>(n),mb<span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-smi">offsetHeight</span>)),<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(n),m<span class="pl-k">++</span>,j))<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\^</span>]</span>)-<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>$1- <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line">p<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-c1">whiteSpace</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>,s,r,t<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_clipHeight</span>,<span class="pl-c1">E</span><span class="pl-k">=</span>[],v<span class="pl-k">=</span><span class="pl-en">o</span>(),u<span class="pl-k">=</span><span class="pl-c1">1</span>;p<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">E</span>.<span class="pl-c1">length</span>);)<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-smi">bBox</span>,s<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getBBox</span>(),r<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-c1">width</span>,<span class="pl-k">!</span>$<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">forExport</span><span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">measureSpanWidth</span>(<span class="pl-smi">n</span>.<span class="pl-c1">firstChild</span>.<span class="pl-c1">data</span>,<span class="pl-smi">a</span>.<span class="pl-smi">styles</span>)),s<span class="pl-k">=</span>r<span class="pl-k">&gt;</span>j,<span class="pl-k">!</span>s<span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>(e<span class="pl-k">=</span><span class="pl-c1">E</span>,<span class="pl-c1">E</span><span class="pl-k">=</span>[],<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">++</span>,t<span class="pl-k">&amp;&amp;</span>u<span class="pl-k">*</span>v<span class="pl-k">&gt;</span>t<span class="pl-k">?</span>(e<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>...<span class="pl-pds">&quot;</span></span>],<span class="pl-smi">a</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">textStr</span>))<span class="pl-k">:</span>(n<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createElementNS</span>(Na,<span class="pl-s"><span class="pl-pds">&quot;</span>tspan<span class="pl-pds">&quot;</span></span>),<span class="pl-en">I</span>(n,{dy<span class="pl-k">:</span>v,x<span class="pl-k">:</span>i}),q<span class="pl-k">&amp;&amp;</span><span class="pl-en">I</span>(n,<span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>,q),<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(n),r<span class="pl-k">&gt;</span>j<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>r))))<span class="pl-k">:</span>(<span class="pl-smi">n</span>.<span class="pl-c1">removeChild</span>(<span class="pl-smi">n</span>.<span class="pl-c1">firstChild</span>),<span class="pl-c1">E</span>.<span class="pl-c1">unshift</span>(<span class="pl-smi">e</span>.<span class="pl-c1">pop</span>())),<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">C</span>.<span class="pl-c1">createTextNode</span>(<span class="pl-smi">e</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>- <span class="pl-pds">/</span>g</span>,</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>)))}})})},<span class="pl-en">button</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">i</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>(a,b,c,i,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>button<span class="pl-pds">&quot;</span></span>),j<span class="pl-k">=</span><span class="pl-c1">0</span>,l,m,o,p,<span class="pl-c1">B</span>,n,a<span class="pl-k">=</span>{x1<span class="pl-k">:</span><span class="pl-c1">0</span>,y1<span class="pl-k">:</span><span class="pl-c1">0</span>,x2<span class="pl-k">:</span><span class="pl-c1">0</span>,y2<span class="pl-k">:</span><span class="pl-c1">1</span>},e<span class="pl-k">=</span><span class="pl-en">w</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>,stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCCCCC<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span>{linearGradient<span class="pl-k">:</span>a,stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#FEFEFE<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#F6F6F6<span class="pl-pds">&quot;</span></span>]]},r<span class="pl-k">:</span><span class="pl-c1">2</span>,padding<span class="pl-k">:</span><span class="pl-c1">5</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>}},e);o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">style</span>;<span class="pl-k">delete</span> <span class="pl-smi">e</span>.<span class="pl-c1">style</span>;f<span class="pl-k">=</span><span class="pl-en">w</span>(e,{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#68A<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span>{linearGradient<span class="pl-k">:</span>a,stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#FFF<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#ACF<span class="pl-pds">&quot;</span></span>]]}},f);p<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">style</span>;<span class="pl-k">delete</span> <span class="pl-smi">f</span>.<span class="pl-c1">style</span>;g<span class="pl-k">=</span><span class="pl-en">w</span>(e,{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#68A<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span>{linearGradient<span class="pl-k">:</span>a,stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#9BD<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#CDF<span class="pl-pds">&quot;</span></span>]]}},g);<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">style</span>;<span class="pl-k">delete</span> <span class="pl-smi">g</span>.<span class="pl-c1">style</span>;</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">=</span><span class="pl-en">w</span>(e,{style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>}},h);n<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">style</span>;<span class="pl-k">delete</span> <span class="pl-smi">h</span>.<span class="pl-c1">style</span>;<span class="pl-en">D</span>(<span class="pl-smi">k</span>.<span class="pl-smi">element</span>,Ha<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseenter<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){j<span class="pl-k">!==</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">attr</span>(f).<span class="pl-en">css</span>(p)});<span class="pl-en">D</span>(<span class="pl-smi">k</span>.<span class="pl-smi">element</span>,Ha<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){j<span class="pl-k">!==</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>[e,f,g][j],m<span class="pl-k">=</span>[o,p,<span class="pl-c1">B</span>][j],<span class="pl-smi">k</span>.<span class="pl-en">attr</span>(l).<span class="pl-en">css</span>(m))});<span class="pl-smi">k</span>.<span class="pl-en">setState</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){(<span class="pl-smi">k</span>.<span class="pl-smi">state</span><span class="pl-k">=</span>j<span class="pl-k">=</span>a)<span class="pl-k">?</span>a<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-en">attr</span>(g).<span class="pl-en">css</span>(<span class="pl-c1">B</span>)<span class="pl-k">:</span>a<span class="pl-k">===</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">attr</span>(h).<span class="pl-en">css</span>(n)<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-en">attr</span>(e).<span class="pl-en">css</span>(o)};<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){j<span class="pl-k">!==</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">call</span>(k)}).<span class="pl-en">attr</span>(e).<span class="pl-en">css</span>(<span class="pl-en">u</span>({cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>},o))},<span class="pl-en">crispLine</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a[<span class="pl-c1">1</span>]<span class="pl-k">===</span>a[<span class="pl-c1">4</span>]<span class="pl-k">&amp;&amp;</span>(a[<span class="pl-c1">1</span>]<span class="pl-k">=</span>a[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-en">t</span>(a[<span class="pl-c1">1</span>])<span class="pl-k">-</span>b<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>);a[<span class="pl-c1">2</span>]<span class="pl-k">===</span>a[<span class="pl-c1">5</span>]<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line">(a[<span class="pl-c1">2</span>]<span class="pl-k">=</span>a[<span class="pl-c1">5</span>]<span class="pl-k">=</span><span class="pl-en">t</span>(a[<span class="pl-c1">2</span>])<span class="pl-k">+</span>b<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">return</span> a},<span class="pl-en">path</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{fill<span class="pl-k">:</span><span class="pl-c1">X</span>};<span class="pl-en">Qa</span>(a)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">d</span><span class="pl-k">=</span>a<span class="pl-k">:</span><span class="pl-en">ba</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-en">u</span>(b,a);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>(b)},<span class="pl-en">circle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span><span class="pl-en">ba</span>(a)<span class="pl-k">?</span>a<span class="pl-k">:</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b,r<span class="pl-k">:</span>c};<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>(a)},<span class="pl-en">arc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">if</span>(<span class="pl-en">ba</span>(a))b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">innerR</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">end</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">symbol</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>arc<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">||</span><span class="pl-c1">0</span>,b<span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">||</span><span class="pl-c1">0</span>,{innerR<span class="pl-k">:</span>d<span class="pl-k">||</span><span class="pl-c1">0</span>,start<span class="pl-k">:</span>e<span class="pl-k">||</span><span class="pl-c1">0</span>,end<span class="pl-k">:</span>f<span class="pl-k">||</span><span class="pl-c1">0</span>});<span class="pl-smi">a</span>.<span class="pl-smi">r</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> a},<span class="pl-en">rect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">ba</span>(a)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span><span class="pl-k">:</span>e,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">ba</span>(a)<span class="pl-k">?</span>a<span class="pl-k">:</span>a<span class="pl-k">===</span>s<span class="pl-k">?</span>{}<span class="pl-k">:</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b,</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line">width<span class="pl-k">:</span><span class="pl-en">v</span>(c,<span class="pl-c1">0</span>),height<span class="pl-k">:</span><span class="pl-en">v</span>(d,<span class="pl-c1">0</span>)};<span class="pl-k">if</span>(f<span class="pl-k">!==</span>s)<span class="pl-smi">a</span>.<span class="pl-smi">strokeWidth</span><span class="pl-k">=</span>f,a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">crisp</span>(a);<span class="pl-k">if</span>(e)<span class="pl-smi">a</span>.<span class="pl-smi">r</span><span class="pl-k">=</span>e;<span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-en">attr</span>(a)},<span class="pl-en">setSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">alignedObjects</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>b;<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boxWrapper</span>[<span class="pl-en">n</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({width<span class="pl-k">:</span>a,height<span class="pl-k">:</span>b});e<span class="pl-k">--</span>;)d[e].<span class="pl-c1">align</span>()},<span class="pl-en">g</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-en">r</span>(a)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">attr</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a})<span class="pl-k">:</span>b},<span class="pl-en">image</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>{preserveAspectRatio<span class="pl-k">:</span><span class="pl-c1">X</span>};<span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">u</span>(f,{x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>d,height<span class="pl-k">:</span>e});f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>image<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>(f);</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-smi">element</span>.<span class="pl-smi">setAttributeNS</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-smi">element</span>.<span class="pl-c1">setAttributeNS</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xlink<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>href<span class="pl-pds">&quot;</span></span>,a)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">element</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hc-svg-href<span class="pl-pds">&quot;</span></span>,a);<span class="pl-k">return</span> f},<span class="pl-en">symbol</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">symbols</span>[a],h<span class="pl-k">=</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-en">h</span>(<span class="pl-en">t</span>(b),<span class="pl-en">t</span>(c),d,e,f),i<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>url<span class="pl-cce">\(</span>(<span class="pl-c1">.</span><span class="pl-k">*?</span>)<span class="pl-cce">\)</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,k,j;<span class="pl-k">if</span>(h)g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">path</span>(h),<span class="pl-en">u</span>(g,{symbolName<span class="pl-k">:</span>a,x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>d,height<span class="pl-k">:</span>e}),f<span class="pl-k">&amp;&amp;</span><span class="pl-en">u</span>(g,f);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-c1">test</span>(a))<span class="pl-en">j</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">element</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">attr</span>({width<span class="pl-k">:</span>b[<span class="pl-c1">0</span>],height<span class="pl-k">:</span>b[<span class="pl-c1">1</span>]}),<span class="pl-smi">a</span>.<span class="pl-smi">alignByTranslate</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">translate</span>(<span class="pl-en">t</span>((d<span class="pl-k">-</span>b[<span class="pl-c1">0</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-en">t</span>((e<span class="pl-k">-</span>b[<span class="pl-c1">1</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>)))},k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(i)[<span class="pl-c1">1</span>],a<span class="pl-k">=</span>Sb[k],g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">image</span>(k).<span class="pl-en">attr</span>({x<span class="pl-k">:</span>b,</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">y<span class="pl-k">:</span>c}),<span class="pl-smi">g</span>.<span class="pl-smi">isImg</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,a<span class="pl-k">?</span><span class="pl-en">j</span>(g,a)<span class="pl-k">:</span>(<span class="pl-smi">g</span>.<span class="pl-en">attr</span>({width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>}),<span class="pl-en">Y</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span>,{<span class="pl-en">onload</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">j</span>(g,Sb[k]<span class="pl-k">=</span>[<span class="pl-c1">this</span>.<span class="pl-c1">width</span>,<span class="pl-c1">this</span>.<span class="pl-c1">height</span>])},src<span class="pl-k">:</span>k}));<span class="pl-k">return</span> g},symbols<span class="pl-k">:</span>{<span class="pl-en">circle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0.166</span><span class="pl-k">*</span>c;<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">+</span>e,b,a<span class="pl-k">+</span>c<span class="pl-k">+</span>e,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">-</span>e,b<span class="pl-k">+</span>d,a<span class="pl-k">-</span>e,b,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">square</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">triangle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">triangle-down</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">diamond</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>,a<span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">arc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">start</span>,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">r</span><span class="pl-k">||</span>c<span class="pl-k">||</span>d,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">end</span><span class="pl-k">-</span><span class="pl-c1">0.001</span>,d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">innerR</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">open</span>,i<span class="pl-k">=</span><span class="pl-en">aa</span>(f),k<span class="pl-k">=</span><span class="pl-en">fa</span>(f),j<span class="pl-k">=</span><span class="pl-en">aa</span>(g),g<span class="pl-k">=</span><span class="pl-en">fa</span>(g),e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">end</span><span class="pl-k">-</span>f<span class="pl-k">&lt;</span>oa<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">*</span>i,b<span class="pl-k">+</span>c<span class="pl-k">*</span>k,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,c,c,<span class="pl-c1">0</span>,e,<span class="pl-c1">1</span>,a<span class="pl-k">+</span>c<span class="pl-k">*</span>j,b<span class="pl-k">+</span>c<span class="pl-k">*</span>g,h<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>d<span class="pl-k">*</span>j,b<span class="pl-k">+</span>d<span class="pl-k">*</span>g,<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,d,d,<span class="pl-c1">0</span>,e,<span class="pl-c1">0</span>,a<span class="pl-k">+</span>d<span class="pl-k">*</span>i,b<span class="pl-k">+</span>d<span class="pl-k">*</span>k,h<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]}},<span class="pl-en">clipRect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>Ab<span class="pl-k">++</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>clipPath<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({id<span class="pl-k">:</span>e}).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">defs</span>),a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">rect</span>(a,b,c,d,<span class="pl-c1">0</span>).<span class="pl-c1">add</span>(f);<span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">=</span>e;<span class="pl-smi">a</span>.<span class="pl-smi">clipPath</span><span class="pl-k">=</span>f;<span class="pl-k">return</span> a},<span class="pl-en">color</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>,e,f<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgba<span class="pl-pds">/</span></span>,g,h,i,k,j,l,m,o<span class="pl-k">=</span>[];a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">linearGradient</span><span class="pl-k">?</span>g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>linearGradient<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">radialGradient</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>radialGradient<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(g){c<span class="pl-k">=</span>a[g];h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">gradients</span>;k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span>;b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">radialReference</span>;<span class="pl-en">Qa</span>(c)<span class="pl-k">&amp;&amp;</span>(a[g]<span class="pl-k">=</span>c<span class="pl-k">=</span>{x1<span class="pl-k">:</span>c[<span class="pl-c1">0</span>],y1<span class="pl-k">:</span>c[<span class="pl-c1">1</span>],x2<span class="pl-k">:</span>c[<span class="pl-c1">2</span>],y2<span class="pl-k">:</span>c[<span class="pl-c1">3</span>],gradientUnits<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>userSpaceOnUse<span class="pl-pds">&quot;</span></span>});g<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>radialGradient<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(<span class="pl-smi">c</span>.<span class="pl-smi">gradientUnits</span>)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-en">w</span>(c,{cx<span class="pl-k">:</span>b[<span class="pl-c1">0</span>]<span class="pl-k">-</span>b[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">cx</span><span class="pl-k">*</span>b[<span class="pl-c1">2</span>],cy<span class="pl-k">:</span>b[<span class="pl-c1">1</span>]<span class="pl-k">-</span>b[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">cy</span><span class="pl-k">*</span>b[<span class="pl-c1">2</span>],r<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">r</span><span class="pl-k">*</span>b[<span class="pl-c1">2</span>],gradientUnits<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>userSpaceOnUse<span class="pl-pds">&quot;</span></span>}));<span class="pl-k">for</span>(m <span class="pl-k">in</span> c)m<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-c1">push</span>(m,c[m]);<span class="pl-k">for</span>(m <span class="pl-k">in</span> k)<span class="pl-smi">o</span>.<span class="pl-c1">push</span>(k[m]);o<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);h[o]<span class="pl-k">?</span>a<span class="pl-k">=</span>h[o].<span class="pl-c1">id</span><span class="pl-k">:</span>(<span class="pl-smi">c</span>.<span class="pl-c1">id</span><span class="pl-k">=</span>a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>Ab<span class="pl-k">++</span>,h[o]<span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">createElement</span>(g).<span class="pl-en">attr</span>(c).<span class="pl-c1">add</span>(<span class="pl-smi">d</span>.<span class="pl-smi">defs</span>),<span class="pl-smi">i</span>.<span class="pl-smi">stops</span><span class="pl-k">=</span>[],<span class="pl-en">q</span>(k,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">f</span>.<span class="pl-c1">test</span>(a[<span class="pl-c1">1</span>])<span class="pl-k">?</span>(e<span class="pl-k">=</span><span class="pl-en">Ea</span>(a[<span class="pl-c1">1</span>]),j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(j<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],l<span class="pl-k">=</span><span class="pl-c1">1</span>);a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stop<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({offset<span class="pl-k">:</span>a[<span class="pl-c1">0</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>stop-color<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>j,<span class="pl-s"><span class="pl-pds">&quot;</span>stop-opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>l}).<span class="pl-c1">add</span>(i);<span class="pl-smi">i</span>.<span class="pl-smi">stops</span>.<span class="pl-c1">push</span>(a)}));<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>url(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">url</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">test</span>(a)<span class="pl-k">?</span>(e<span class="pl-k">=</span><span class="pl-en">Ea</span>(a),<span class="pl-en">I</span>(b,c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">e</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>)),<span class="pl-smi">e</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-c1">removeAttribute</span>(c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-opacity<span class="pl-pds">&quot;</span></span>),a)},<span class="pl-en">text</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>ga<span class="pl-k">||!</span>$<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">forExport</span>;<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">forExport</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">html</span>(a,b,c);</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">n</span>(b,<span class="pl-c1">0</span>));c<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">n</span>(c,<span class="pl-c1">0</span>));a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,text<span class="pl-k">:</span>a});e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">css</span>({position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>});<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> a},<span class="pl-en">fontMetrics</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>,a<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>px<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(a)<span class="pl-k">?</span><span class="pl-en">y</span>(a)<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>em<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(a)<span class="pl-k">?</span><span class="pl-c1">parseFloat</span>(a)<span class="pl-k">*</span><span class="pl-c1">12</span><span class="pl-k">:</span><span class="pl-c1">12</span>,a<span class="pl-k">=</span>a<span class="pl-k">&lt;</span><span class="pl-c1">24</span><span class="pl-k">?</span>a<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-en">t</span>(a<span class="pl-k">*</span><span class="pl-c1">1.2</span>),b<span class="pl-k">=</span><span class="pl-en">t</span>(a<span class="pl-k">*</span><span class="pl-c1">0.8</span>);<span class="pl-k">return</span>{h<span class="pl-k">:</span>a,b<span class="pl-k">:</span>b}},<span class="pl-en">label</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">i</span>){<span class="pl-k">function</span> <span class="pl-en">k</span>(){<span class="pl-k">var</span> a,b;a<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">element</span>.<span class="pl-c1">style</span>;n<span class="pl-k">=</span>(cb<span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">||</span>Db<span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-smi">o</span>.<span class="pl-smi">styles</span>.<span class="pl-c1">textAlign</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-smi">textStr</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-en">getBBox</span>();<span class="pl-smi">o</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>(cb<span class="pl-k">||</span><span class="pl-smi">n</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">K</span><span class="pl-k">+</span>v;<span class="pl-smi">o</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>(Db<span class="pl-k">||</span><span class="pl-smi">n</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">K</span>;Fa<span class="pl-k">=</span><span class="pl-c1">K</span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-en">fontMetrics</span>(a<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">fontSize</span>).<span class="pl-smi">b</span>;<span class="pl-k">if</span>(x){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">B</span>)a<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-k">-</span>z<span class="pl-k">*</span><span class="pl-c1">K</span>),b<span class="pl-k">=</span>h<span class="pl-k">?</span><span class="pl-k">-</span>Fa<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-smi">o</span>.<span class="pl-smi">box</span><span class="pl-k">=</span><span class="pl-c1">B</span><span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-smi">m</span>.<span class="pl-en">symbol</span>(d,a,b,<span class="pl-smi">o</span>.<span class="pl-c1">width</span>,<span class="pl-smi">o</span>.<span class="pl-c1">height</span>,<span class="pl-c1">E</span>)<span class="pl-k">:</span><span class="pl-smi">m</span>.<span class="pl-en">rect</span>(a,b,<span class="pl-smi">o</span>.<span class="pl-c1">width</span>,<span class="pl-smi">o</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,<span class="pl-c1">E</span>[Tb]),<span class="pl-c1">B</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">X</span>).<span class="pl-c1">add</span>(o);<span class="pl-c1">B</span>.<span class="pl-smi">isImg</span><span class="pl-k">||</span><span class="pl-c1">B</span>.<span class="pl-en">attr</span>(<span class="pl-en">w</span>({width<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-c1">width</span>,height<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-c1">height</span>},<span class="pl-c1">E</span>));<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">null</span>}}function j(){var a=o.styles,a=a&amp;&amp;a.textAlign,b=v+K*(1-z),c;c=h?0:Fa;if(r(cb)&amp;&amp;n&amp;&amp;(a===&quot;center&quot;||a===&quot;right&quot;))b+={center:0.5,right:1}[a]*(cb-n.width);(b!==p.x||c!==p.y)&amp;&amp;p.attr({x:b,y:c});p.x=b;p.y=c}function l(a,b){B?B.attr(a,b):E[a]=b}var m=this,o=m.g(i),p=m.text(&quot;&quot;,0,0,g).attr({zIndex:1}),</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span>,n,z<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">3</span>,v<span class="pl-k">=</span><span class="pl-c1">0</span>,cb,Db,Eb,Fb,Ub<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">E</span><span class="pl-k">=</span>{},Fa,g<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">attrSetters</span>,x;<span class="pl-smi">o</span>.<span class="pl-en">onAdd</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">p</span>.<span class="pl-c1">add</span>(o);<span class="pl-smi">o</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>a,x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c});<span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">attr</span>({anchorX<span class="pl-k">:</span>e,anchorY<span class="pl-k">:</span>f})};<span class="pl-smi">g</span>.<span class="pl-en">width</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){cb<span class="pl-k">=</span>a;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">g</span>.<span class="pl-en">height</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){Db<span class="pl-k">=</span>a;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">g</span>.<span class="pl-en">padding</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">r</span>(a)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span><span class="pl-c1">K</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">K</span><span class="pl-k">=</span>a,<span class="pl-en">j</span>());<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">g</span>.<span class="pl-en">paddingLeft</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">r</span>(a)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span>v<span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">=</span>a,<span class="pl-en">j</span>());<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">g</span>.<span class="pl-en">align</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){z<span class="pl-k">=</span>{left<span class="pl-k">:</span><span class="pl-c1">0</span>,center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[a];<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">g</span>.<span class="pl-en">text</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">p</span>.<span class="pl-en">attr</span>(b,a);<span class="pl-en">k</span>();<span class="pl-en">j</span>();<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};g[Tb]<span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);Ub<span class="pl-k">=</span>a<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-en">l</span>(b,a);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-smi">stroke</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">fill</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">r</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-en">l</span>(b,a);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">g</span>.<span class="pl-en">anchorX</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){e<span class="pl-k">=</span>a;<span class="pl-en">l</span>(b,a<span class="pl-k">+</span>Ub<span class="pl-k">-</span>Eb);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">g</span>.<span class="pl-en">anchorY</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){f<span class="pl-k">=</span>a;<span class="pl-en">l</span>(b,a<span class="pl-k">-</span>Fb);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">g</span>.<span class="pl-en">x</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">o</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;a<span class="pl-k">-=</span>z<span class="pl-k">*</span>((cb<span class="pl-k">||</span><span class="pl-smi">n</span>.<span class="pl-c1">width</span>)<span class="pl-k">+</span><span class="pl-c1">K</span>);Eb<span class="pl-k">=</span><span class="pl-en">t</span>(a);<span class="pl-smi">o</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span>,Eb);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">g</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){Fb<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-en">t</span>(a);<span class="pl-smi">o</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span>,Fb);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">css</span>;<span class="pl-k">return</span> <span class="pl-en">u</span>(o,{<span class="pl-en">css</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a){<span class="pl-k">var</span> b<span class="pl-k">=</span>{},a<span class="pl-k">=</span><span class="pl-en">w</span>(a);<span class="pl-en">q</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>fontSize,fontWeight,fontFamily,color,lineHeight,width,textDecoration,textShadow<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">c</span>){a[c]<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(b[c]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line">a[c],<span class="pl-k">delete</span> a[c])});<span class="pl-smi">p</span>.<span class="pl-en">css</span>(b)}<span class="pl-k">return</span> <span class="pl-smi">y</span>.<span class="pl-c1">call</span>(o,a)},<span class="pl-en">getBBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{width<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">K</span>,height<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">K</span>,x<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">K</span>,y<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">K</span>}},<span class="pl-en">shadow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">B</span>.<span class="pl-en">shadow</span>(a);<span class="pl-k">return</span> o},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">S</span>(<span class="pl-smi">o</span>.<span class="pl-smi">element</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseenter<span class="pl-pds">&quot;</span></span>);<span class="pl-en">S</span>(<span class="pl-smi">o</span>.<span class="pl-smi">element</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>);p<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-en">destroy</span>());<span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-en">destroy</span>());<span class="pl-smi">Ca</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">destroy</span>.<span class="pl-c1">call</span>(o);o<span class="pl-k">=</span>m<span class="pl-k">=</span>k<span class="pl-k">=</span>j<span class="pl-k">=</span>l<span class="pl-k">=</span><span class="pl-c1">null</span>}})}};Xa<span class="pl-k">=</span>ha;<span class="pl-en">u</span>(<span class="pl-smi">Ca</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">htmlCss</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>;<span class="pl-k">if</span>(b<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">tagName</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>)<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-c1">this</span>.<span class="pl-smi">textWidth</span><span class="pl-k">=</span>b,<span class="pl-c1">this</span>.<span class="pl-en">updateTransform</span>();<span class="pl-c1">this</span>.<span class="pl-smi">styles</span><span class="pl-k">=</span><span class="pl-en">u</span>(<span class="pl-c1">this</span>.<span class="pl-smi">styles</span>,</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line">a);<span class="pl-en">J</span>(<span class="pl-c1">this</span>.<span class="pl-smi">element</span>,a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">htmlGetBBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bBox</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>b){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">nodeName</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-smi">position</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bBox</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetLeft</span>,y<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetTop</span>,width<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span>,height<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetHeight</span>}}<span class="pl-k">return</span> b},<span class="pl-en">htmlUpdateTransform</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">added</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">translateX</span><span class="pl-k">||</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">translateY</span><span class="pl-k">||</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">textAlign</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,h<span class="pl-k">=</span>{left<span class="pl-k">:</span><span class="pl-c1">0</span>,center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[g],i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">shadows</span>;<span class="pl-en">J</span>(b,{marginLeft<span class="pl-k">:</span>c,marginTop<span class="pl-k">:</span>d});i<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">J</span>(a,</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line">{marginLeft<span class="pl-k">:</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>,marginTop<span class="pl-k">:</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>})});<span class="pl-c1">this</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-c1">childNodes</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">invertChild</span>(c,b)});<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">tagName</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rotation</span>,j,l<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-c1">this</span>.<span class="pl-smi">textWidth</span>),m<span class="pl-k">=</span>[k,g,<span class="pl-smi">b</span>.<span class="pl-smi">innerHTML</span>,<span class="pl-c1">this</span>.<span class="pl-smi">textWidth</span>].<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(m<span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">cTT</span>){j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>).<span class="pl-smi">b</span>;<span class="pl-en">r</span>(k)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">setSpanRotation</span>(k,h,j);i<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">elemWidth</span>,<span class="pl-smi">b</span>.<span class="pl-smi">offsetWidth</span>);<span class="pl-k">if</span>(i<span class="pl-k">&gt;</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[ <span class="pl-cce">\-</span>]</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">b</span>.<span class="pl-smi">textContent</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">innerText</span>))<span class="pl-en">J</span>(b,{width<span class="pl-k">:</span>l<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>,whiteSpace<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>}),i<span class="pl-k">=</span>l;<span class="pl-c1">this</span>.<span class="pl-en">getSpanCorrection</span>(i,j,h,k,g)}<span class="pl-en">J</span>(b,{left<span class="pl-k">:</span>e<span class="pl-k">+</span>(<span class="pl-c1">this</span>.<span class="pl-smi">xCorr</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line">top<span class="pl-k">:</span>f<span class="pl-k">+</span>(<span class="pl-c1">this</span>.<span class="pl-smi">yCorr</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>});<span class="pl-k">if</span>(mb)j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">offsetHeight</span>;<span class="pl-c1">this</span>.<span class="pl-smi">cTT</span><span class="pl-k">=</span>m}}<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-smi">alignOnAdd</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">setSpanRotation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>{},e<span class="pl-k">=</span>Ha<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-ms-transform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>mb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-transform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>ab<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>MozTransform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Rb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-o-transform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;d[e]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">transform</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rotate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>deg)<span class="pl-pds">&quot;</span></span>;d[e<span class="pl-k">+</span>(ab<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>Origin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-origin<span class="pl-pds">&quot;</span></span>)]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">transformOrigin</span><span class="pl-k">=</span>b<span class="pl-k">*</span><span class="pl-c1">100</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>% <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;<span class="pl-en">J</span>(<span class="pl-c1">this</span>.<span class="pl-smi">element</span>,d)},<span class="pl-en">getSpanCorrection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">xCorr</span><span class="pl-k">=</span><span class="pl-k">-</span>a<span class="pl-k">*</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">yCorr</span><span class="pl-k">=</span><span class="pl-k">-</span>b}});<span class="pl-en">u</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">html</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">attrSetters</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">element</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">renderer</span>;</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">text</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">bBox</span>;<span class="pl-smi">f</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">textStr</span><span class="pl-k">=</span>a;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">align</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">rotation</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>align<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>textAlign<span class="pl-pds">&quot;</span></span>);d[b]<span class="pl-k">=</span>a;<span class="pl-smi">d</span>.<span class="pl-en">htmlUpdateTransform</span>();<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">d</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>a,x<span class="pl-k">:</span><span class="pl-en">t</span>(b),y<span class="pl-k">:</span><span class="pl-en">t</span>(c)}).<span class="pl-en">css</span>({position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,whiteSpace<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>,fontFamily<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontFamily</span>,fontSize<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>});<span class="pl-smi">d</span>.<span class="pl-smi">css</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">htmlCss</span>;<span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-smi">isSVG</span>)<span class="pl-smi">d</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">box</span>.<span class="pl-c1">parentNode</span>,e<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parentGroup</span><span class="pl-k">=</span>a){<span class="pl-k">if</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">div</span>,<span class="pl-k">!</span>b){<span class="pl-k">for</span>(;a;)<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(a),a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">parentGroup</span>;<span class="pl-en">q</span>(<span class="pl-smi">e</span>.<span class="pl-c1">reverse</span>(),</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> d;b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">div</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">div</span><span class="pl-k">||</span><span class="pl-en">Y</span>(Ua,{className<span class="pl-k">:</span><span class="pl-en">I</span>(<span class="pl-smi">a</span>.<span class="pl-smi">element</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>)},{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-smi">translateX</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-smi">translateY</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},b<span class="pl-k">||</span>c);d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>;<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-smi">attrSetters</span>,{<span class="pl-en">translateX</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-c1">left</span><span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},<span class="pl-en">translateY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-c1">top</span><span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},<span class="pl-en">visibility</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){d[b]<span class="pl-k">=</span>a}})})}}<span class="pl-k">else</span> b<span class="pl-k">=</span>c;<span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(f);<span class="pl-smi">d</span>.<span class="pl-smi">added</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-smi">alignOnAdd</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">htmlUpdateTransform</span>();<span class="pl-k">return</span> d};<span class="pl-k">return</span> d}});<span class="pl-k">var</span> fb,pa;<span class="pl-k">if</span>(<span class="pl-k">!</span>$<span class="pl-k">&amp;&amp;!</span>ga)<span class="pl-c1">Q</span>.<span class="pl-smi">VMLElement</span><span class="pl-k">=</span>pa<span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,b,<span class="pl-s"><span class="pl-pds">&#39;</span> filled=&quot;f&quot; stroked=&quot;f&quot;<span class="pl-pds">&#39;</span></span>],d<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>position: <span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>],e<span class="pl-k">=</span>b<span class="pl-k">===</span>Ua;(b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>shape<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>left:0;top:0;width:1px;height:1px;<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>visibility: <span class="pl-pds">&quot;</span></span>,e<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> style=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-smi">d</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;/&gt;<span class="pl-pds">&#39;</span></span>);<span class="pl-k">if</span>(b)c<span class="pl-k">=</span>e<span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">prepVML</span>(c),<span class="pl-c1">this</span>.<span class="pl-smi">element</span><span class="pl-k">=</span><span class="pl-en">Y</span>(c);<span class="pl-c1">this</span>.<span class="pl-smi">renderer</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">attrSetters</span><span class="pl-k">=</span>{}},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">box</span>,d<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">element</span><span class="pl-k">||</span>a<span class="pl-k">:</span>d;a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">invertChild</span>(c,d);<span class="pl-smi">d</span>.<span class="pl-c1">appendChild</span>(c);<span class="pl-c1">this</span>.<span class="pl-smi">added</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">alignOnAdd</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">deferUpdateTransform</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">updateTransform</span>();<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">onAdd</span>)<span class="pl-c1">this</span>.<span class="pl-en">onAdd</span>();</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>},updateTransform<span class="pl-k">:</span><span class="pl-smi">Ca</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">htmlUpdateTransform</span>,<span class="pl-en">setSpanRotation</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rotation</span>,b<span class="pl-k">=</span><span class="pl-en">aa</span>(a<span class="pl-k">*</span>Ma),c<span class="pl-k">=</span><span class="pl-en">fa</span>(a<span class="pl-k">*</span>Ma);<span class="pl-en">J</span>(<span class="pl-c1">this</span>.<span class="pl-smi">element</span>,{filter<span class="pl-k">:</span>a<span class="pl-k">?</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>progid:DXImageTransform.Microsoft.Matrix(M11=<span class="pl-pds">&quot;</span></span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>, M12=<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span>c,<span class="pl-s"><span class="pl-pds">&quot;</span>, M21=<span class="pl-pds">&quot;</span></span>,c,<span class="pl-s"><span class="pl-pds">&quot;</span>, M22=<span class="pl-pds">&quot;</span></span>,b,<span class="pl-s"><span class="pl-pds">&quot;</span>, sizingMethod=&#39;auto expand&#39;)<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-c1">X</span>})},<span class="pl-en">getSpanCorrection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-en">aa</span>(d<span class="pl-k">*</span>Ma)<span class="pl-k">:</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-en">fa</span>(d<span class="pl-k">*</span>Ma)<span class="pl-k">:</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">elemHeight</span>,<span class="pl-c1">this</span>.<span class="pl-smi">element</span>.<span class="pl-smi">offsetHeight</span>),i;<span class="pl-c1">this</span>.<span class="pl-smi">xCorr</span><span class="pl-k">=</span>f<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">yCorr</span><span class="pl-k">=</span>g<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span>h;i<span class="pl-k">=</span>f<span class="pl-k">*</span>g<span class="pl-k">&lt;</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">xCorr</span><span class="pl-k">+=</span>g<span class="pl-k">*</span>b<span class="pl-k">*</span>(i<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">-</span>c<span class="pl-k">:</span>c);<span class="pl-c1">this</span>.<span class="pl-smi">yCorr</span><span class="pl-k">-=</span>f<span class="pl-k">*</span>b<span class="pl-k">*</span>(d<span class="pl-k">?</span>i<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">-</span>c<span class="pl-k">:</span><span class="pl-c1">1</span>);e<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">xCorr</span><span class="pl-k">-=</span>a<span class="pl-k">*</span>c<span class="pl-k">*</span>(f<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>),d<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">yCorr</span><span class="pl-k">-=</span>h<span class="pl-k">*</span>c<span class="pl-k">*</span>(g<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)),<span class="pl-en">J</span>(<span class="pl-c1">this</span>.<span class="pl-smi">element</span>,{textAlign<span class="pl-k">:</span>e}))},<span class="pl-en">pathToVML</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span>[];b<span class="pl-k">--</span>;)<span class="pl-k">if</span>(<span class="pl-en">za</span>(a[b]))c[b]<span class="pl-k">=</span><span class="pl-en">t</span>(a[b]<span class="pl-k">*</span><span class="pl-c1">10</span>)<span class="pl-k">-</span><span class="pl-c1">5</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(a[b]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>)c[b]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c[b]<span class="pl-k">=</span>a[b],<span class="pl-smi">a</span>.<span class="pl-smi">isArc</span><span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a[b]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>at<span class="pl-pds">&quot;</span></span>))c[b<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">===</span>c[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">&amp;&amp;</span>(c[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">+=</span>a[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">&gt;</span>a[b<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>),c[b<span class="pl-k">+</span><span class="pl-c1">6</span>]<span class="pl-k">===</span>c[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">&amp;&amp;</span>(c[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">+=</span>a[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">&gt;</span>a[b<span class="pl-k">+</span><span class="pl-c1">6</span>]<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>},<span class="pl-en">attr</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,e,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span><span class="pl-k">||</span>{},g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">style</span>,h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">nodeName</span>,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">symbolName</span>,</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line">j,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">shadows</span>,m,o<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">attrSetters</span>,p<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-en">ka</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(b)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>a,a<span class="pl-k">=</span>{},a[c]<span class="pl-k">=</span>b);<span class="pl-k">if</span>(<span class="pl-en">ka</span>(a))c<span class="pl-k">=</span>a,p<span class="pl-k">=</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>strokeWidth<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">strokeweight</span><span class="pl-k">:</span><span class="pl-c1">this</span>[c];<span class="pl-k">else</span> <span class="pl-k">for</span>(c <span class="pl-k">in</span> a)<span class="pl-k">if</span>(d<span class="pl-k">=</span>a[c],m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span>o[c]<span class="pl-k">&amp;&amp;</span>o[c].<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,d,c),e<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">!==</span><span class="pl-c1">null</span>){e<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>e);<span class="pl-k">if</span>(k<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(x<span class="pl-k">|</span>y<span class="pl-k">|</span>r<span class="pl-k">|</span>start<span class="pl-k">|</span>end<span class="pl-k">|</span>width<span class="pl-k">|</span>height<span class="pl-k">|</span>innerR<span class="pl-k">|</span>anchorX<span class="pl-k">|</span>anchorY)<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(c))j<span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-en">symbolAttr</span>(a),j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>){d<span class="pl-k">=</span>d<span class="pl-k">||</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">d</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);<span class="pl-smi">f</span>.<span class="pl-smi">path</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">pathToVML</span>(d);<span class="pl-k">if</span>(l)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)l[e].<span class="pl-smi">path</span><span class="pl-k">=</span>l[e].<span class="pl-smi">cutOff</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">cutOffPath</span>(d,l[e].<span class="pl-smi">cutOff</span>)<span class="pl-k">:</span>d;</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>){d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(l)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)l[e].<span class="pl-c1">style</span>[c]<span class="pl-k">=</span>d;h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>DIV<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-999em<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">0</span>,lb<span class="pl-k">||</span>(g[c]<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>);g[c]<span class="pl-k">=</span>d;m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>zIndex<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">&amp;&amp;</span>(g[c]<span class="pl-k">=</span>d),m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">ua</span>(c,[<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>])<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-c1">this</span>[c]<span class="pl-k">=</span>d,c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>c<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>}[c]<span class="pl-k">:</span>d<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">0</span>,d),<span class="pl-c1">this</span>.<span class="pl-smi">updateClipping</span><span class="pl-k">?</span>(<span class="pl-c1">this</span>[c]<span class="pl-k">=</span>d,<span class="pl-c1">this</span>.<span class="pl-en">updateClipping</span>())<span class="pl-k">:</span>g[c]<span class="pl-k">=</span>d,m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>DIV<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">f</span>.<span class="pl-c1">className</span><span class="pl-k">=</span>d;<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">color</span>(d,f,c),c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>strokecolor<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>strokeWidth<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">f</span>.<span class="pl-smi">stroked</span><span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>strokeweight<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>[c]<span class="pl-k">=</span>d,<span class="pl-en">za</span>(d)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>dashstyle<span class="pl-pds">&quot;</span></span>)(<span class="pl-smi">f</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-en">Y</span>(<span class="pl-smi">i</span>.<span class="pl-en">prepVML</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;stroke/&gt;<span class="pl-pds">&quot;</span></span>]),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,f))[c]<span class="pl-k">=</span>d<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>solid<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">=</span>d,m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>)<span class="pl-k">if</span>(h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">g</span>.<span class="pl-c1">color</span><span class="pl-k">=</span>d;<span class="pl-k">else</span>{<span class="pl-k">if</span>(h<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>IMG<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">f</span>.<span class="pl-smi">filled</span><span class="pl-k">=</span>d<span class="pl-k">!==</span><span class="pl-c1">X</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">color</span>(d,f,c,<span class="pl-c1">this</span>),c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>fillcolor<span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>)m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>shape<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>rotation<span class="pl-pds">&quot;</span></span>)<span class="pl-c1">this</span>[c]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">style</span>[c]<span class="pl-k">=</span>d,<span class="pl-smi">f</span>.<span class="pl-c1">style</span>.<span class="pl-c1">left</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-en">t</span>(<span class="pl-en">fa</span>(d<span class="pl-k">*</span>Ma)<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-c1">style</span>.<span class="pl-c1">top</span><span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">aa</span>(d<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line">Ma))<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>rotation<span class="pl-pds">&quot;</span></span>)<span class="pl-c1">this</span>[c]<span class="pl-k">=</span>d,<span class="pl-c1">this</span>.<span class="pl-en">updateTransform</span>(),m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;m<span class="pl-k">||</span>(lb<span class="pl-k">?</span>f[c]<span class="pl-k">=</span>d<span class="pl-k">:</span><span class="pl-en">I</span>(f,c,d))}<span class="pl-k">return</span> p},<span class="pl-en">clip</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c;a<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">members</span>,<span class="pl-en">ma</span>(c,b),<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(b),<span class="pl-smi">b</span>.<span class="pl-en">destroyClip</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">ma</span>(c,b)},a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getCSS</span>(b))<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-smi">destroyClip</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">destroyClip</span>(),a<span class="pl-k">=</span>{clip<span class="pl-k">:</span>lb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect(auto)<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">css</span>(a)},css<span class="pl-k">:</span><span class="pl-smi">Ca</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">htmlCss</span>,<span class="pl-en">safeRemoveChild</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">Ta</span>(a)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">destroyClip</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">destroyClip</span>();<span class="pl-k">return</span> <span class="pl-smi">Ca</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">destroy</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>)},</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-en">on</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">element</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">U</span>.<span class="pl-c1">event</span>;<span class="pl-smi">a</span>.<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">srcElement</span>;<span class="pl-en">b</span>(a)};<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">cutOffPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[ ,]</span><span class="pl-pds">/</span></span>);c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-c1">9</span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-c1">11</span>)a[c<span class="pl-k">-</span><span class="pl-c1">4</span>]<span class="pl-k">=</span>a[c<span class="pl-k">-</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-en">y</span>(a[c<span class="pl-k">-</span><span class="pl-c1">2</span>])<span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)},<span class="pl-en">shadow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">element</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>,h,i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">style</span>,k,j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">path</span>,l,m,o,p;j<span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">j</span>.<span class="pl-c1">value</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>);m<span class="pl-k">=</span>j;<span class="pl-k">if</span>(a){o<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-c1">3</span>);p<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">opacity</span><span class="pl-k">||</span><span class="pl-c1">0.15</span>)<span class="pl-k">/</span>o;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;=</span><span class="pl-c1">3</span>;e<span class="pl-k">++</span>){l<span class="pl-k">=</span>o<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>e;c<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">cutOffPath</span>(<span class="pl-smi">j</span>.<span class="pl-c1">value</span>,l<span class="pl-k">+</span><span class="pl-c1">0.5</span>));k<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;shape isShadow=&quot;true&quot; strokeweight=&quot;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line">l,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; filled=&quot;false&quot; path=&quot;<span class="pl-pds">&#39;</span></span>,m,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; coordsize=&quot;10 10&quot; style=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-smi">f</span>.<span class="pl-c1">style</span>.<span class="pl-smi">cssText</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; /&gt;<span class="pl-pds">&#39;</span></span>];h<span class="pl-k">=</span><span class="pl-en">Y</span>(<span class="pl-smi">g</span>.<span class="pl-en">prepVML</span>(k),<span class="pl-c1">null</span>,{left<span class="pl-k">:</span><span class="pl-en">y</span>(<span class="pl-smi">i</span>.<span class="pl-c1">left</span>)<span class="pl-k">+</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetX</span>,<span class="pl-c1">1</span>),top<span class="pl-k">:</span><span class="pl-en">y</span>(<span class="pl-smi">i</span>.<span class="pl-c1">top</span>)<span class="pl-k">+</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offsetY</span>,<span class="pl-c1">1</span>)});<span class="pl-k">if</span>(c)<span class="pl-smi">h</span>.<span class="pl-smi">cutOff</span><span class="pl-k">=</span>l<span class="pl-k">+</span><span class="pl-c1">1</span>;k<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;stroke color=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; opacity=&quot;<span class="pl-pds">&#39;</span></span>,p<span class="pl-k">*</span>e,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;/&gt;<span class="pl-pds">&#39;</span></span>];<span class="pl-en">Y</span>(<span class="pl-smi">g</span>.<span class="pl-en">prepVML</span>(k),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,h);b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">element</span>.<span class="pl-c1">appendChild</span>(h)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(h,f);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(h)}<span class="pl-c1">this</span>.<span class="pl-smi">shadows</span><span class="pl-k">=</span>d}<span class="pl-k">return</span> <span class="pl-c1">this</span>}},pa<span class="pl-k">=</span><span class="pl-en">ca</span>(Ca,pa),pa<span class="pl-k">=</span>{<span class="pl-c1">Element</span><span class="pl-k">:</span>pa,isIE8<span class="pl-k">:</span><span class="pl-smi">Da</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>MSIE 8.0<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&gt;</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e;<span class="pl-c1">this</span>.<span class="pl-smi">alignedObjects</span><span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(Ua).<span class="pl-en">css</span>(<span class="pl-en">u</span>(<span class="pl-c1">this</span>.<span class="pl-en">getStyle</span>(d),</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line">{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>}));e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">element</span>;<span class="pl-smi">a</span>.<span class="pl-c1">appendChild</span>(<span class="pl-smi">d</span>.<span class="pl-smi">element</span>);<span class="pl-c1">this</span>.<span class="pl-smi">isVML</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">box</span><span class="pl-k">=</span>e;<span class="pl-c1">this</span>.<span class="pl-smi">boxWrapper</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">cache</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-en">setSize</span>(b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">C</span>.<span class="pl-c1">namespaces</span>.<span class="pl-smi">hcv</span>){<span class="pl-c1">C</span>.<span class="pl-c1">namespaces</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hcv<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>urn:schemas-microsoft-com:vml<span class="pl-pds">&quot;</span></span>);<span class="pl-k">try</span>{<span class="pl-c1">C</span>.<span class="pl-c1">createStyleSheet</span>().<span class="pl-smi">cssText</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>hcv<span class="pl-cce">\\</span>:fill, hcv<span class="pl-cce">\\</span>:path, hcv<span class="pl-cce">\\</span>:shape, hcv<span class="pl-cce">\\</span>:stroke{ behavior:url(#default#VML); display: inline-block; } <span class="pl-pds">&quot;</span></span>}<span class="pl-k">catch</span>(f){<span class="pl-c1">C</span>.<span class="pl-c1">styleSheets</span>[<span class="pl-c1">0</span>].<span class="pl-smi">cssText</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>hcv<span class="pl-cce">\\</span>:fill, hcv<span class="pl-cce">\\</span>:path, hcv<span class="pl-cce">\\</span>:shape, hcv<span class="pl-cce">\\</span>:stroke{ behavior:url(#default#VML); display: inline-block; } <span class="pl-pds">&quot;</span></span>}}},</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isHidden</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">box</span>.<span class="pl-smi">offsetWidth</span>},<span class="pl-en">clipRect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(),f<span class="pl-k">=</span><span class="pl-en">ba</span>(a);<span class="pl-k">return</span> <span class="pl-en">u</span>(e,{members<span class="pl-k">:</span>[],left<span class="pl-k">:</span>(f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">:</span>a)<span class="pl-k">+</span><span class="pl-c1">1</span>,top<span class="pl-k">:</span>(f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">:</span>b)<span class="pl-k">+</span><span class="pl-c1">1</span>,width<span class="pl-k">:</span>(f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">:</span>c)<span class="pl-k">-</span><span class="pl-c1">1</span>,height<span class="pl-k">:</span>(f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">:</span>d)<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-en">getCSS</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">element</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">top</span><span class="pl-k">-</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>shape<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">offsetTop</span><span class="pl-k">:</span><span class="pl-c1">0</span>),e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">left</span>,b<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">width</span>,f<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span>,d<span class="pl-k">=</span>{clip<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">t</span>(a<span class="pl-k">?</span>e<span class="pl-k">:</span>d)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">t</span>(a<span class="pl-k">?</span>f<span class="pl-k">:</span>b)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">t</span>(a<span class="pl-k">?</span>b<span class="pl-k">:</span>f)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">t</span>(a<span class="pl-k">?</span>d<span class="pl-k">:</span>e)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px)<span class="pl-pds">&quot;</span></span>};<span class="pl-k">!</span>a<span class="pl-k">&amp;&amp;</span>lb<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>DIV<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">u</span>(d,{width<span class="pl-k">:</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span> d},<span class="pl-en">updateClipping</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">q</span>(<span class="pl-smi">e</span>.<span class="pl-smi">members</span>,</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">css</span>(<span class="pl-smi">e</span>.<span class="pl-en">getCSS</span>(a))})}})},<span class="pl-en">color</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>,f,g<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgba<span class="pl-pds">/</span></span>,h,i,k<span class="pl-k">=</span><span class="pl-c1">X</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">linearGradient</span><span class="pl-k">?</span>i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>gradient<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">radialGradient</span><span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>pattern<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(i){<span class="pl-k">var</span> j,l,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">linearGradient</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">radialGradient</span>,o,p,<span class="pl-c1">B</span>,n,z,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stops</span>,s,r<span class="pl-k">=</span>[],<span class="pl-en">t</span><span class="pl-k">=</span><span class="pl-k">function</span>(){h<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;fill colors=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">r</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; opacity=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-c1">B</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; o:opacity2=&quot;<span class="pl-pds">&#39;</span></span>,p,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; type=&quot;<span class="pl-pds">&#39;</span></span>,i,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot; <span class="pl-pds">&#39;</span></span>,<span class="pl-c1">K</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>focus=&quot;100%&quot; method=&quot;any&quot; /&gt;<span class="pl-pds">&#39;</span></span>];<span class="pl-en">Y</span>(<span class="pl-smi">e</span>.<span class="pl-en">prepVML</span>(h),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,b)};o<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];s<span class="pl-k">=</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];o[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">unshift</span>([<span class="pl-c1">0</span>,o[<span class="pl-c1">1</span>]]);s[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>([<span class="pl-c1">1</span>,s[<span class="pl-c1">1</span>]]);<span class="pl-en">q</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">g</span>.<span class="pl-c1">test</span>(a[<span class="pl-c1">1</span>])<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line">(f<span class="pl-k">=</span><span class="pl-en">Ea</span>(a[<span class="pl-c1">1</span>]),j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(j<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],l<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-smi">r</span>.<span class="pl-c1">push</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">*</span><span class="pl-c1">100</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>% <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j);b<span class="pl-k">?</span>(<span class="pl-c1">B</span><span class="pl-k">=</span>l,n<span class="pl-k">=</span>j)<span class="pl-k">:</span>(p<span class="pl-k">=</span>l,z<span class="pl-k">=</span>j)});<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>)<span class="pl-k">if</span>(i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>gradient<span class="pl-pds">&quot;</span></span>)c<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">x1</span><span class="pl-k">||</span>m[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">y1</span><span class="pl-k">||</span>m[<span class="pl-c1">1</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,o<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">x2</span><span class="pl-k">||</span>m[<span class="pl-c1">2</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">y2</span><span class="pl-k">||</span>m[<span class="pl-c1">3</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>angle=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>(<span class="pl-c1">90</span><span class="pl-k">-</span><span class="pl-c1">W</span>.<span class="pl-en">atan</span>((m<span class="pl-k">-</span>a)<span class="pl-k">/</span>(o<span class="pl-k">-</span>c))<span class="pl-k">*</span><span class="pl-c1">180</span><span class="pl-k">/</span>oa)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-en">t</span>();<span class="pl-k">else</span>{<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">r</span>,v<span class="pl-k">=</span>k<span class="pl-k">*</span><span class="pl-c1">2</span>,u<span class="pl-k">=</span>k<span class="pl-k">*</span><span class="pl-c1">2</span>,w<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">cx</span>,<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">cy</span>,Fa<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">radialReference</span>,x,<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-k">function</span>(){Fa<span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getBBox</span>(),w<span class="pl-k">+=</span>(Fa[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-smi">x</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span><span class="pl-smi">x</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-c1">0.5</span>,<span class="pl-c1">E</span><span class="pl-k">+=</span>(Fa[<span class="pl-c1">1</span>]<span class="pl-k">-</span><span class="pl-smi">x</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span><span class="pl-smi">x</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">0.5</span>,v<span class="pl-k">*=</span>Fa[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-smi">x</span>.<span class="pl-c1">width</span>,u<span class="pl-k">*=</span>Fa[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-smi">x</span>.<span class="pl-c1">height</span>);<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>src=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-c1">G</span>.<span class="pl-smi">global</span>.<span class="pl-smi">VMLRadialGradientURL</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; size=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>v<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>u<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; origin=&quot;0.5,0.5&quot; position=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line">w<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">E</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; color2=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>z<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; <span class="pl-pds">&#39;</span></span>;<span class="pl-en">t</span>()};<span class="pl-smi">d</span>.<span class="pl-smi">added</span><span class="pl-k">?</span><span class="pl-en">k</span>()<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">onAdd</span><span class="pl-k">=</span>k;k<span class="pl-k">=</span>n}<span class="pl-k">else</span> k<span class="pl-k">=</span>j}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-c1">test</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">tagName</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>IMG<span class="pl-pds">&quot;</span></span>)f<span class="pl-k">=</span><span class="pl-en">Ea</span>(a),h<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,c,<span class="pl-s"><span class="pl-pds">&#39;</span> opacity=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;/&gt;<span class="pl-pds">&#39;</span></span>],<span class="pl-en">Y</span>(<span class="pl-c1">this</span>.<span class="pl-en">prepVML</span>(h),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,b),k<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span>{k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">getElementsByTagName</span>(c);<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-c1">length</span>)k[<span class="pl-c1">0</span>].<span class="pl-smi">opacity</span><span class="pl-k">=</span><span class="pl-c1">1</span>,k[<span class="pl-c1">0</span>].<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>solid<span class="pl-pds">&quot;</span></span>;k<span class="pl-k">=</span>a}<span class="pl-k">return</span> k},<span class="pl-en">prepVML</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isIE8</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);b<span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span> xmlns=&quot;urn:schemas-microsoft-com:vml&quot; /&gt;<span class="pl-pds">&#39;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>style=&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span> style=&quot;display:inline-block;behavior:url(#default#VML);&quot; /&gt;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>style=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>style=&quot;display:inline-block;behavior:url(#default#VML);<span class="pl-pds">&#39;</span></span>))<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;hcv:<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> a},text<span class="pl-k">:</span><span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">html</span>,<span class="pl-en">path</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{coordsize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>10 10<span class="pl-pds">&quot;</span></span>};<span class="pl-en">Qa</span>(a)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">d</span><span class="pl-k">=</span>a<span class="pl-k">:</span><span class="pl-en">ba</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-en">u</span>(b,a);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shape<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>(b)},<span class="pl-en">circle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">symbol</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-en">ba</span>(a))c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-smi">d</span>.<span class="pl-smi">isCircle</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-smi">r</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">attr</span>({x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b})},<span class="pl-en">g</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>{className<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a});<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(Ua).<span class="pl-en">attr</span>(b)},<span class="pl-en">image</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({src<span class="pl-k">:</span>a});<span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">attr</span>({x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>d,height<span class="pl-k">:</span>e});<span class="pl-k">return</span> f},<span class="pl-en">createElement</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">symbol</span>(a)<span class="pl-k">:</span><span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">createElement</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a)},<span class="pl-en">invertChild</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">tagName</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>IMG<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>;<span class="pl-en">J</span>(a,{flip<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span><span class="pl-en">y</span>(<span class="pl-smi">d</span>.<span class="pl-c1">width</span>)<span class="pl-k">-</span>(e<span class="pl-k">?</span><span class="pl-en">y</span>(<span class="pl-smi">e</span>.<span class="pl-c1">top</span>)<span class="pl-k">:</span><span class="pl-c1">1</span>),top<span class="pl-k">:</span><span class="pl-en">y</span>(<span class="pl-smi">d</span>.<span class="pl-c1">height</span>)<span class="pl-k">-</span>(e<span class="pl-k">?</span><span class="pl-en">y</span>(<span class="pl-smi">e</span>.<span class="pl-c1">left</span>)<span class="pl-k">:</span><span class="pl-c1">1</span>),rotation<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">90</span>});<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-c1">childNodes</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">c</span>.<span class="pl-en">invertChild</span>(b,a)})},symbols<span class="pl-k">:</span>{<span class="pl-en">arc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">start</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">end</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">r</span><span class="pl-k">||</span>c<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line">d,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">innerR</span>,d<span class="pl-k">=</span><span class="pl-en">aa</span>(f),i<span class="pl-k">=</span><span class="pl-en">fa</span>(f),k<span class="pl-k">=</span><span class="pl-en">aa</span>(g),j<span class="pl-k">=</span><span class="pl-en">fa</span>(g);<span class="pl-k">if</span>(g<span class="pl-k">-</span>f<span class="pl-k">===</span><span class="pl-c1">0</span>)<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>];f<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">-</span>h,b<span class="pl-k">-</span>h,a<span class="pl-k">+</span>h,b<span class="pl-k">+</span>h,a<span class="pl-k">+</span>h<span class="pl-k">*</span>d,b<span class="pl-k">+</span>h<span class="pl-k">*</span>i,a<span class="pl-k">+</span>h<span class="pl-k">*</span>k,b<span class="pl-k">+</span>h<span class="pl-k">*</span>j];<span class="pl-smi">e</span>.<span class="pl-smi">open</span><span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b);<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>at<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">-</span>c,b<span class="pl-k">-</span>c,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>c,a<span class="pl-k">+</span>c<span class="pl-k">*</span>k,b<span class="pl-k">+</span>c<span class="pl-k">*</span>j,a<span class="pl-k">+</span>c<span class="pl-k">*</span>d,b<span class="pl-k">+</span>c<span class="pl-k">*</span>i,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">f</span>.<span class="pl-smi">isArc</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> f},<span class="pl-en">circle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){e<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-smi">r</span>);e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">isCircle</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">-=</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,b<span class="pl-k">-=</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span>,a,b,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">rect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>a<span class="pl-k">+</span>c,g<span class="pl-k">=</span>b<span class="pl-k">+</span>d,h;<span class="pl-k">!</span><span class="pl-en">r</span>(e)<span class="pl-k">||!</span><span class="pl-smi">e</span>.<span class="pl-smi">r</span><span class="pl-k">?</span>f<span class="pl-k">=</span><span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">symbols</span>.<span class="pl-smi">square</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">0</span>,<span class="pl-c1">arguments</span>)<span class="pl-k">:</span>(h<span class="pl-k">=</span><span class="pl-en">x</span>(<span class="pl-smi">e</span>.<span class="pl-smi">r</span>,c,d),f<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>h,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">-</span>h,b,<span class="pl-s"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span><span class="pl-k">*</span>h,b,f,b<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>h,f<span class="pl-k">-</span>h,b,f,b<span class="pl-k">+</span>h,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,f,g<span class="pl-k">-</span>h,<span class="pl-s"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>h,g<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>h,f,g,f,g<span class="pl-k">-</span>h,f<span class="pl-k">-</span>h,g,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>h,g,<span class="pl-s"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span>,a,g<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>h,a<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>h,g,a<span class="pl-k">+</span>h,g,a,g<span class="pl-k">-</span>h,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a,b<span class="pl-k">+</span>h,<span class="pl-s"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span>,a,b,a<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>h,b<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>h,a,b<span class="pl-k">+</span>h,a<span class="pl-k">+</span>h,b,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">return</span> f}}},<span class="pl-c1">Q</span>.<span class="pl-smi">VMLRenderer</span><span class="pl-k">=</span><span class="pl-en">fb</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)},<span class="pl-smi">fb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span>,pa),Xa<span class="pl-k">=</span>fb;<span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">measureSpanWidth</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>),d;d<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">createTextNode</span>(a);<span class="pl-smi">c</span>.<span class="pl-c1">appendChild</span>(d);<span class="pl-en">J</span>(c,b);<span class="pl-c1">this</span>.<span class="pl-smi">box</span>.<span class="pl-c1">appendChild</span>(c);d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">offsetWidth</span>;<span class="pl-en">Ta</span>(c);<span class="pl-k">return</span> d};<span class="pl-k">var</span> Vb;<span class="pl-k">if</span>(ga)<span class="pl-c1">Q</span>.<span class="pl-smi">CanVGRenderer</span><span class="pl-k">=</span><span class="pl-en">pa</span><span class="pl-k">=</span><span class="pl-k">function</span>(){Na<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>},</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">symbols</span><span class="pl-k">=</span>{},<span class="pl-en">Vb</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,d;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>a;d<span class="pl-k">++</span>)b[d]();b<span class="pl-k">=</span>[]}<span class="pl-k">var</span> b<span class="pl-k">=</span>[];<span class="pl-k">return</span>{<span class="pl-en">push</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">$b</span>(d,a);<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c)}}}(),Xa<span class="pl-k">=</span>pa;<span class="pl-smi">$a</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">addLabel</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">horiz</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">categories</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">names</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">labels</span>,i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickPositions</span>,d<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">h</span>.<span class="pl-smi">step</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">h</span>.<span class="pl-smi">staggerLines</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">h</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">/</span><span class="pl-smi">i</span>.<span class="pl-c1">length</span><span class="pl-k">||!</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">margin</span>[<span class="pl-c1">3</span>]<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">*</span><span class="pl-c1">0.33</span>),k<span class="pl-k">=</span>g<span class="pl-k">===</span>i[<span class="pl-c1">0</span>],j<span class="pl-k">=</span>g<span class="pl-k">===</span>i[<span class="pl-smi">i</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],l,f<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-en">n</span>(e[g],f[g],g)<span class="pl-k">:</span>g,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>,m<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">info</span>;</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">&amp;&amp;</span>m<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dateTimeLabelFormats</span>[<span class="pl-smi">m</span>.<span class="pl-smi">higherRanks</span>[g]<span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-smi">unitName</span>]);<span class="pl-c1">this</span>.<span class="pl-smi">isFirst</span><span class="pl-k">=</span>k;<span class="pl-c1">this</span>.<span class="pl-smi">isLast</span><span class="pl-k">=</span>j;b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">labelFormatter</span>.<span class="pl-c1">call</span>({axis<span class="pl-k">:</span>a,chart<span class="pl-k">:</span>c,isFirst<span class="pl-k">:</span>k,isLast<span class="pl-k">:</span>j,dateTimeLabelFormat<span class="pl-k">:</span>l,value<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">isLog</span><span class="pl-k">?</span><span class="pl-en">ea</span>(<span class="pl-en">la</span>(f))<span class="pl-k">:</span>f});g<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>{width<span class="pl-k">:</span><span class="pl-en">v</span>(<span class="pl-c1">1</span>,<span class="pl-en">t</span>(d<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>(<span class="pl-smi">h</span>.<span class="pl-smi">padding</span><span class="pl-k">||</span><span class="pl-c1">10</span>)))<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>};g<span class="pl-k">=</span><span class="pl-en">u</span>(g,<span class="pl-smi">h</span>.<span class="pl-c1">style</span>);<span class="pl-k">if</span>(<span class="pl-en">r</span>(e))e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>b}).<span class="pl-en">css</span>(g);<span class="pl-k">else</span>{l<span class="pl-k">=</span>{align<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">labelAlign</span>};<span class="pl-k">if</span>(<span class="pl-en">za</span>(<span class="pl-smi">h</span>.<span class="pl-smi">rotation</span>))<span class="pl-smi">l</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">rotation</span>;<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">ellipsis</span>)<span class="pl-smi">l</span>.<span class="pl-smi">_clipHeight</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">len</span><span class="pl-k">/</span><span class="pl-smi">i</span>.<span class="pl-c1">length</span>;<span class="pl-c1">this</span>.<span class="pl-c1">label</span><span class="pl-k">=</span><span class="pl-en">r</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">enabled</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">text</span>(b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">h</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">attr</span>(l).<span class="pl-en">css</span>(g).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">labelGroup</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>}},<span class="pl-en">getLabelSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>;<span class="pl-k">return</span> a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">getBBox</span>()[<span class="pl-smi">b</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">:</span><span class="pl-c1">0</span>},<span class="pl-en">getLabelSides</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>.<span class="pl-en">getBBox</span>(),b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">horiz</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">labels</span>,a<span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>,b<span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>a<span class="pl-k">*</span>{left<span class="pl-k">:</span><span class="pl-c1">0</span>,center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[<span class="pl-smi">b</span>.<span class="pl-smi">labelAlign</span>]<span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">return</span>[b,c<span class="pl-k">?</span>a<span class="pl-k">+</span>b<span class="pl-k">:</span>a]},<span class="pl-en">handleOverflow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isFirst</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isLast</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">reversed</span>,i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">tickPositions</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getLabelSides</span>(),j<span class="pl-k">=</span>k[<span class="pl-c1">0</span>],k<span class="pl-k">=</span>k[<span class="pl-c1">1</span>],l,m,o,p<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>.<span class="pl-smi">line</span><span class="pl-k">||</span><span class="pl-c1">0</span>;l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">labelEdge</span>;</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">justifyLabels</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">||</span>f);l[p]<span class="pl-k">===</span>s<span class="pl-k">||</span>g<span class="pl-k">+</span>j<span class="pl-k">&gt;</span>l[p]<span class="pl-k">?</span>l[p]<span class="pl-k">=</span>g<span class="pl-k">+</span>k<span class="pl-k">:</span>m<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(m){l<span class="pl-k">=</span>(m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">justifyToPlot</span>)<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">pos</span><span class="pl-k">:</span><span class="pl-c1">0</span>;m<span class="pl-k">=</span>m<span class="pl-k">?</span>l<span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">len</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">chartWidth</span>;<span class="pl-k">do</span> a<span class="pl-k">+=</span>e<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,o<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ticks</span>[i[a]];<span class="pl-k">while</span>(i[a]<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>o<span class="pl-k">||</span><span class="pl-smi">o</span>.<span class="pl-c1">label</span>.<span class="pl-smi">line</span><span class="pl-k">!==</span>p));d<span class="pl-k">=</span>o<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-c1">label</span>.<span class="pl-smi">xy</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-c1">label</span>.<span class="pl-smi">xy</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">o</span>.<span class="pl-en">getLabelSides</span>()[e<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>];e<span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">||</span>f<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">?</span>g<span class="pl-k">+</span>j<span class="pl-k">&lt;</span>l<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>l<span class="pl-k">-</span>j,o<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">+</span>k<span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>))<span class="pl-k">:</span>g<span class="pl-k">+</span>k<span class="pl-k">&gt;</span>m<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>m<span class="pl-k">-</span>k,o<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">+</span>j<span class="pl-k">&lt;</span>d<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>));<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>g}<span class="pl-k">return</span> c},<span class="pl-en">getPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">oldChartHeight</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">chartHeight</span>;<span class="pl-k">return</span>{x<span class="pl-k">:</span>a<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-en">translate</span>(b<span class="pl-k">+</span>c,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,d)<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">transB</span><span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">left</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">offset</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">e</span>.<span class="pl-smi">opposite</span><span class="pl-k">?</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">oldChartWidth</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">chartWidth</span>)<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">right</span><span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">left</span><span class="pl-k">:</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span>a<span class="pl-k">?</span>g<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">bottom</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">offset</span><span class="pl-k">-</span>(<span class="pl-smi">e</span>.<span class="pl-smi">opposite</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>g<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-en">translate</span>(b<span class="pl-k">+</span>c,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,d)<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">transB</span>}},<span class="pl-en">getLabelPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>,k<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">transA</span>,j<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">reversed</span>,l<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">staggerLines</span>,m<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">e</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span>).<span class="pl-smi">b</span>,o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">rotation</span>,a<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>(f<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">?</span>f<span class="pl-k">*</span>k<span class="pl-k">*</span>(j<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>),b<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">-</span>(f<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">?</span>f<span class="pl-k">*</span>k<span class="pl-k">*</span>(j<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>);o<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-smi">side</span><span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">-=</span>m<span class="pl-k">-</span>m<span class="pl-k">*</span><span class="pl-en">aa</span>(o<span class="pl-k">*</span>Ma));<span class="pl-k">!</span><span class="pl-en">r</span>(<span class="pl-smi">e</span>.<span class="pl-c1">y</span>)<span class="pl-k">&amp;&amp;!</span>o<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">+=</span>m<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">if</span>(l)<span class="pl-smi">c</span>.<span class="pl-smi">line</span><span class="pl-k">=</span>g<span class="pl-k">/</span>(h<span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">%</span>l,b<span class="pl-k">+=</span><span class="pl-smi">c</span>.<span class="pl-smi">line</span><span class="pl-k">*</span>(<span class="pl-smi">i</span>.<span class="pl-smi">labelOffset</span><span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line">l);<span class="pl-k">return</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b}},<span class="pl-en">getMarkPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-en">crispLine</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>(e<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">-</span>c),b<span class="pl-k">+</span>(e<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">0</span>)],d)},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">horiz</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span>,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>,j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">labels</span>,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">gridLine</span>,m<span class="pl-k">=</span>h<span class="pl-k">?</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Grid<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>grid<span class="pl-pds">&quot;</span></span>,o<span class="pl-k">=</span>h<span class="pl-k">?</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Tick<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tick<span class="pl-pds">&quot;</span></span>,p<span class="pl-k">=</span>e[m<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>LineWidth<span class="pl-pds">&quot;</span></span>],<span class="pl-c1">B</span><span class="pl-k">=</span>e[m<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>LineColor<span class="pl-pds">&quot;</span></span>],q<span class="pl-k">=</span>e[m<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>LineDashStyle<span class="pl-pds">&quot;</span></span>],z<span class="pl-k">=</span>e[o<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Length<span class="pl-pds">&quot;</span></span>],m<span class="pl-k">=</span>e[o<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-c1">K</span><span class="pl-k">=</span>e[o<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Color<span class="pl-pds">&quot;</span></span>],r<span class="pl-k">=</span>e[o<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Position<span class="pl-pds">&quot;</span></span>],o<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mark</span>,t<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">step</span>,v<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">tickmarkOffset</span>,w<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getPosition</span>(g,k,u,b),x<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">x</span>,</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line">w<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">y</span>,<span class="pl-c1">E</span><span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span>x<span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-smi">pos</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">len</span><span class="pl-k">||!</span>g<span class="pl-k">&amp;&amp;</span>w<span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-smi">pos</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">isActive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(p){k<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getPlotLinePath</span>(k<span class="pl-k">+</span>u,p<span class="pl-k">*</span><span class="pl-c1">E</span>,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(l<span class="pl-k">===</span>s){l<span class="pl-k">=</span>{stroke<span class="pl-k">:</span><span class="pl-c1">B</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>p};<span class="pl-k">if</span>(q)<span class="pl-smi">l</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">=</span>q;<span class="pl-k">if</span>(<span class="pl-k">!</span>h)<span class="pl-smi">l</span>.<span class="pl-c1">zIndex</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(b)<span class="pl-smi">l</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">gridLine</span><span class="pl-k">=</span>l<span class="pl-k">=</span>p<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">path</span>(k).<span class="pl-en">attr</span>(l).<span class="pl-c1">add</span>(<span class="pl-smi">d</span>.<span class="pl-smi">gridGroup</span>)<span class="pl-k">:</span><span class="pl-c1">null</span>}<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&amp;&amp;</span>k)l[<span class="pl-c1">this</span>.<span class="pl-smi">isNew</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>]({d<span class="pl-k">:</span>k,opacity<span class="pl-k">:</span>c})}<span class="pl-k">if</span>(m<span class="pl-k">&amp;&amp;</span>z)r<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>inside<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(z<span class="pl-k">=</span><span class="pl-k">-</span>z),<span class="pl-smi">d</span>.<span class="pl-smi">opposite</span><span class="pl-k">&amp;&amp;</span>(z<span class="pl-k">=</span><span class="pl-k">-</span>z),h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getMarkPath</span>(x,w,z,m<span class="pl-k">*</span><span class="pl-c1">E</span>,g,f),o<span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>h,opacity<span class="pl-k">:</span>c})<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">mark</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">path</span>(h).<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span><span class="pl-c1">K</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>m,opacity<span class="pl-k">:</span>c}).<span class="pl-c1">add</span>(<span class="pl-smi">d</span>.<span class="pl-smi">axisGroup</span>);</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(i<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(x))<span class="pl-smi">i</span>.<span class="pl-smi">xy</span><span class="pl-k">=</span>w<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getLabelPosition</span>(x,w,i,g,j,u,a,t),<span class="pl-c1">this</span>.<span class="pl-smi">isFirst</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">isLast</span><span class="pl-k">&amp;&amp;!</span><span class="pl-en">n</span>(<span class="pl-smi">e</span>.<span class="pl-smi">showFirstLabel</span>,<span class="pl-c1">1</span>)<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">isLast</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">isFirst</span><span class="pl-k">&amp;&amp;!</span><span class="pl-en">n</span>(<span class="pl-smi">e</span>.<span class="pl-smi">showLastLabel</span>,<span class="pl-c1">1</span>)<span class="pl-k">?</span>v<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-smi">isRadial</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">j</span>.<span class="pl-smi">step</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">j</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;!</span>b<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">handleOverflow</span>(a,w)),t<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">%</span>t<span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>),v<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(<span class="pl-smi">w</span>.<span class="pl-c1">y</span>)<span class="pl-k">?</span>(<span class="pl-smi">w</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span>c,i[<span class="pl-c1">this</span>.<span class="pl-smi">isNew</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](w),<span class="pl-c1">this</span>.<span class="pl-smi">isNew</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">9999</span>)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">Ka</span>(<span class="pl-c1">this</span>,<span class="pl-c1">this</span>.<span class="pl-c1">axis</span>)}};<span class="pl-c1">Q</span>.<span class="pl-en">PlotLineOrBand</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">axis</span><span class="pl-k">=</span>a;<span class="pl-k">if</span>(b)<span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>b,<span class="pl-c1">this</span>.<span class="pl-c1">id</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">id</span>};<span class="pl-c1">Q</span>.<span class="pl-smi">PlotLineOrBand</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">axis</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">horiz</span>,d<span class="pl-k">=</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">label</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">label</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">width</span>,i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">to</span>,k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">from</span>,j<span class="pl-k">=</span><span class="pl-en">r</span>(k)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(i),l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">value</span>,m<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">dashStyle</span>,o<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">svgElem</span>,p<span class="pl-k">=</span>[],<span class="pl-c1">B</span>,q<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">color</span>,z<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">zIndex</span>,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">events</span>,s<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>;<span class="pl-smi">b</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-en">Ga</span>(k),i<span class="pl-k">=</span><span class="pl-en">Ga</span>(i),l<span class="pl-k">=</span><span class="pl-en">Ga</span>(l));<span class="pl-k">if</span>(h){<span class="pl-k">if</span>(p<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getPlotLinePath</span>(l,h),d<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>q,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>h},m)<span class="pl-smi">d</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">=</span>m}<span class="pl-k">else</span> <span class="pl-k">if</span>(j){<span class="pl-k">if</span>(k<span class="pl-k">=</span><span class="pl-en">v</span>(k,<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">-</span>d),i<span class="pl-k">=</span><span class="pl-en">x</span>(i,<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">+</span>d),p<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getPlotBandPath</span>(k,i,e),d<span class="pl-k">=</span>{fill<span class="pl-k">:</span>q},<span class="pl-smi">e</span>.<span class="pl-c1">borderWidth</span>)<span class="pl-smi">d</span>.<span class="pl-smi">stroke</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">borderColor</span>,d[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">borderWidth</span>}<span class="pl-k">else</span> <span class="pl-k">return</span>;<span class="pl-k">if</span>(<span class="pl-en">r</span>(z))<span class="pl-smi">d</span>.<span class="pl-c1">zIndex</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line">z;<span class="pl-k">if</span>(o)<span class="pl-k">if</span>(p)<span class="pl-smi">o</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>p},<span class="pl-c1">null</span>,<span class="pl-smi">o</span>.<span class="pl-smi">onGetPath</span>);<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">o</span>.<span class="pl-en">hide</span>(),<span class="pl-smi">o</span>.<span class="pl-en">onGetPath</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">o</span>.<span class="pl-en">show</span>()},g)<span class="pl-smi">a</span>.<span class="pl-c1">label</span><span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">destroy</span>()}<span class="pl-k">else</span> <span class="pl-k">if</span>(p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">svgElem</span><span class="pl-k">=</span>o<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-en">path</span>(p).<span class="pl-en">attr</span>(d).<span class="pl-c1">add</span>(),<span class="pl-c1">K</span>))<span class="pl-k">for</span>(<span class="pl-c1">B</span> <span class="pl-k">in</span> <span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">o</span>.<span class="pl-en">on</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-c1">K</span>[b].<span class="pl-c1">apply</span>(a,[c])})},<span class="pl-c1">K</span>)<span class="pl-en">e</span>(<span class="pl-c1">B</span>);<span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(<span class="pl-smi">f</span>.<span class="pl-c1">text</span>)<span class="pl-k">&amp;&amp;</span>p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">width</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">height</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span>){f<span class="pl-k">=</span><span class="pl-en">w</span>({align<span class="pl-k">:</span>c<span class="pl-k">&amp;&amp;</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span>c<span class="pl-k">?</span><span class="pl-k">!</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">10</span>,verticalAlign<span class="pl-k">:</span><span class="pl-k">!</span>c<span class="pl-k">&amp;&amp;</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span>c<span class="pl-k">?</span>j<span class="pl-k">?</span><span class="pl-c1">16</span><span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span>j<span class="pl-k">?</span><span class="pl-c1">6</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">4</span>,rotation<span class="pl-k">:</span>c<span class="pl-k">&amp;&amp;!</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-c1">90</span>},f);<span class="pl-k">if</span>(<span class="pl-k">!</span>g)<span class="pl-smi">a</span>.<span class="pl-c1">label</span><span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-c1">text</span>(<span class="pl-smi">f</span>.<span class="pl-c1">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">f</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">attr</span>({align<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">textAlign</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-c1">align</span>,rotation<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">rotation</span>,</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line">zIndex<span class="pl-k">:</span>z}).<span class="pl-en">css</span>(<span class="pl-smi">f</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>();b<span class="pl-k">=</span>[p[<span class="pl-c1">1</span>],p[<span class="pl-c1">4</span>],<span class="pl-en">n</span>(p[<span class="pl-c1">6</span>],p[<span class="pl-c1">1</span>])];p<span class="pl-k">=</span>[p[<span class="pl-c1">2</span>],p[<span class="pl-c1">5</span>],<span class="pl-en">n</span>(p[<span class="pl-c1">7</span>],p[<span class="pl-c1">2</span>])];c<span class="pl-k">=</span><span class="pl-en">Sa</span>(b);j<span class="pl-k">=</span><span class="pl-en">Sa</span>(p);<span class="pl-smi">g</span>.<span class="pl-c1">align</span>(f,<span class="pl-k">!</span><span class="pl-c1">1</span>,{x<span class="pl-k">:</span>c,y<span class="pl-k">:</span>j,width<span class="pl-k">:</span><span class="pl-en">Aa</span>(b)<span class="pl-k">-</span>c,height<span class="pl-k">:</span><span class="pl-en">Aa</span>(p)<span class="pl-k">-</span>j});<span class="pl-smi">g</span>.<span class="pl-en">show</span>()}<span class="pl-k">else</span> g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">hide</span>();<span class="pl-k">return</span> a},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">ma</span>(<span class="pl-c1">this</span>.<span class="pl-c1">axis</span>.<span class="pl-smi">plotLinesAndBands</span>,<span class="pl-c1">this</span>);<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-c1">axis</span>;<span class="pl-en">Ka</span>(<span class="pl-c1">this</span>)}};<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{defaultOptions<span class="pl-k">:</span>{dateTimeLabelFormats<span class="pl-k">:</span>{millisecond<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%H:%M:%S.%L<span class="pl-pds">&quot;</span></span>,second<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%H:%M:%S<span class="pl-pds">&quot;</span></span>,minute<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%H:%M<span class="pl-pds">&quot;</span></span>,hour<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%H:%M<span class="pl-pds">&quot;</span></span>,day<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%e. %b<span class="pl-pds">&quot;</span></span>,week<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%e. %b<span class="pl-pds">&quot;</span></span>,month<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%b &#39;%y<span class="pl-pds">&quot;</span></span>,year<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>},endOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,gridLineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>,labels<span class="pl-k">:</span><span class="pl-c1">F</span>,lineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0D0E0<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line">lineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,minPadding<span class="pl-k">:</span><span class="pl-c1">0.01</span>,maxPadding<span class="pl-k">:</span><span class="pl-c1">0.01</span>,minorGridLineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#E0E0E0<span class="pl-pds">&quot;</span></span>,minorGridLineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,minorTickColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#A0A0A0<span class="pl-pds">&quot;</span></span>,minorTickLength<span class="pl-k">:</span><span class="pl-c1">2</span>,minorTickPosition<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outside<span class="pl-pds">&quot;</span></span>,startOfWeek<span class="pl-k">:</span><span class="pl-c1">1</span>,startOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,tickColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0D0E0<span class="pl-pds">&quot;</span></span>,tickLength<span class="pl-k">:</span><span class="pl-c1">5</span>,tickmarkPlacement<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span>,tickPixelInterval<span class="pl-k">:</span><span class="pl-c1">100</span>,tickPosition<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outside<span class="pl-pds">&quot;</span></span>,tickWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,title<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#4d759e<span class="pl-pds">&quot;</span></span>,fontWeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>}},type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>},defaultYAxisOptions<span class="pl-k">:</span>{endOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,gridLineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,tickPixelInterval<span class="pl-k">:</span><span class="pl-c1">72</span>,showLastLabel<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">8</span>,y<span class="pl-k">:</span><span class="pl-c1">3</span>},lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line">maxPadding<span class="pl-k">:</span><span class="pl-c1">0.05</span>,minPadding<span class="pl-k">:</span><span class="pl-c1">0.05</span>,startOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,tickWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">270</span>,text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Values<span class="pl-pds">&quot;</span></span>},stackLabels<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">formatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Ia</span>(<span class="pl-c1">this</span>.<span class="pl-smi">total</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)},style<span class="pl-k">:</span><span class="pl-c1">F</span>.<span class="pl-c1">style</span>}},defaultLeftAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">8</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">270</span>}},defaultRightAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">8</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">90</span>}},defaultBottomAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">14</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">0</span>}},defaultTopAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">5</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">0</span>}},<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isX</span>;<span class="pl-c1">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span><span class="pl-k">?</span><span class="pl-k">!</span>c<span class="pl-k">:</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">coll</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line">(<span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">=</span>c)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">opposite</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">opposite</span>;<span class="pl-c1">this</span>.<span class="pl-smi">side</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">side</span><span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">opposite</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">opposite</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>);<span class="pl-c1">this</span>.<span class="pl-en">setOptions</span>(b);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">type</span>;<span class="pl-c1">this</span>.<span class="pl-smi">labelFormatter</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">labels</span>.<span class="pl-smi">formatter</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">defaultLabelFormatter</span>;<span class="pl-c1">this</span>.<span class="pl-smi">userOptions</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">minPixelPadding</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">reversed</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">reversed</span>;<span class="pl-c1">this</span>.<span class="pl-smi">zoomEnabled</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">zoomEnabled</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">categories</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">categories</span><span class="pl-k">||</span>e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>category<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">names</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">isLog</span><span class="pl-k">=</span>e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>logarithmic<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">=</span>e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>datetime<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">isLinked</span><span class="pl-k">=</span><span class="pl-en">r</span>(<span class="pl-smi">d</span>.<span class="pl-smi">linkedTo</span>);</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">tickmarkOffset</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">categories</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">tickmarkPlacement</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">ticks</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">labelEdge</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">minorTicks</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">plotLinesAndBands</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">alternateBands</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">len</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">minRange</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userMinRange</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">minRange</span><span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-smi">maxZoom</span>;<span class="pl-c1">this</span>.<span class="pl-smi">range</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">range</span>;<span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">offset</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">stacks</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">oldStacks</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">crosshair</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-smi">crosshair</span>,<span class="pl-en">ia</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tooltip</span>.<span class="pl-smi">crosshairs</span>)[c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>],<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> f,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">events</span>;<span class="pl-en">ua</span>(<span class="pl-c1">this</span>,<span class="pl-smi">a</span>.<span class="pl-smi">axes</span>)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">isColorAxis</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">axes</span>.<span class="pl-c1">splice</span>(<span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>.<span class="pl-c1">length</span>,</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,<span class="pl-c1">this</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">axes</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>),a[<span class="pl-c1">this</span>.<span class="pl-smi">coll</span>].<span class="pl-c1">push</span>(<span class="pl-c1">this</span>));<span class="pl-c1">this</span>.<span class="pl-smi">series</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span><span class="pl-k">||</span>[];<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">reversed</span><span class="pl-k">===</span>s)<span class="pl-c1">this</span>.<span class="pl-smi">reversed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">removePlotLine</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">removePlotBand</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">removePlotBandOrLine</span>;<span class="pl-k">for</span>(f <span class="pl-k">in</span> d)<span class="pl-en">D</span>(<span class="pl-c1">this</span>,f,d[f]);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">isLog</span>)<span class="pl-c1">this</span>.<span class="pl-smi">val2lin</span><span class="pl-k">=</span>Ga,<span class="pl-c1">this</span>.<span class="pl-smi">lin2val</span><span class="pl-k">=</span>la},<span class="pl-en">setOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">this</span>.<span class="pl-smi">defaultOptions</span>,<span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span>{}<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">defaultYAxisOptions</span>,[<span class="pl-c1">this</span>.<span class="pl-smi">defaultTopAxisOptions</span>,<span class="pl-c1">this</span>.<span class="pl-smi">defaultRightAxisOptions</span>,<span class="pl-c1">this</span>.<span class="pl-smi">defaultBottomAxisOptions</span>,<span class="pl-c1">this</span>.<span class="pl-smi">defaultLeftAxisOptions</span>][<span class="pl-c1">this</span>.<span class="pl-smi">side</span>],<span class="pl-en">w</span>(<span class="pl-c1">G</span>[<span class="pl-c1">this</span>.<span class="pl-smi">coll</span>],</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">a))},<span class="pl-en">defaultLabelFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">value</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">categories</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">dateTimeLabelFormat</span>,e<span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-c1">lang</span>.<span class="pl-smi">numericSymbols</span>,f<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>,g,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">labels</span>.<span class="pl-smi">format</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">isLog</span><span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">tickInterval</span>;<span class="pl-k">if</span>(h)g<span class="pl-k">=</span><span class="pl-en">Ja</span>(h,<span class="pl-c1">this</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(c)g<span class="pl-k">=</span>b;<span class="pl-k">else</span> <span class="pl-k">if</span>(d)g<span class="pl-k">=</span><span class="pl-en">ra</span>(d,b);<span class="pl-k">else</span> <span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">1E3</span>)<span class="pl-k">for</span>(;f<span class="pl-k">--</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">===</span>s;)c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">1E3</span>,f<span class="pl-k">+</span><span class="pl-c1">1</span>),a<span class="pl-k">&gt;=</span>c<span class="pl-k">&amp;&amp;</span>e[f]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-en">Ia</span>(b<span class="pl-k">/</span>c,<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>e[f]);g<span class="pl-k">===</span>s<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>b<span class="pl-k">&gt;=</span><span class="pl-c1">1E4</span><span class="pl-k">?</span><span class="pl-en">Ia</span>(b,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-en">Ia</span>(b,<span class="pl-k">-</span><span class="pl-c1">1</span>,s,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>));<span class="pl-k">return</span> g},<span class="pl-en">getSeriesExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>;<span class="pl-smi">a</span>.<span class="pl-smi">hasVisibleSeries</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">a</span>.<span class="pl-smi">buildStacks</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">buildStacks</span>();<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">visible</span><span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">ignoreHiddenSeries</span>){<span class="pl-k">var</span> d;d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">threshold</span>;<span class="pl-k">var</span> e;<span class="pl-smi">a</span>.<span class="pl-smi">hasVisibleSeries</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isXAxis</span>){<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">xData</span>,<span class="pl-smi">d</span>.<span class="pl-c1">length</span>)<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-en">x</span>(<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span>,d[<span class="pl-c1">0</span>]),<span class="pl-en">Sa</span>(d)),<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span>,d[<span class="pl-c1">0</span>]),<span class="pl-en">Aa</span>(d))}<span class="pl-k">else</span>{<span class="pl-smi">c</span>.<span class="pl-en">getExtremes</span>();e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dataMax</span>;c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dataMin</span>;<span class="pl-k">if</span>(<span class="pl-en">r</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(e))<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-en">x</span>(<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span>,c),c),<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span>,e),e);<span class="pl-k">if</span>(<span class="pl-en">r</span>(d))<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span><span class="pl-k">&gt;=</span>d)<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span>d,<span class="pl-smi">a</span>.<span class="pl-smi">ignoreMinPadding</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span><span class="pl-k">&lt;</span>d)<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span>d,<span class="pl-smi">a</span>.<span class="pl-smi">ignoreMaxPadding</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>}}})},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,i<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">oldTransA</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">transA</span>,d<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">oldMin</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">minPixelPadding</span>,e<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ordinal</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">lin2val</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>i)i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">transA</span>;<span class="pl-k">if</span>(c)g<span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">len</span>;<span class="pl-c1">this</span>.<span class="pl-smi">reversed</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,h<span class="pl-k">-=</span>g<span class="pl-k">*</span>(<span class="pl-c1">this</span>.<span class="pl-smi">sector</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">len</span>));b<span class="pl-k">?</span>(a<span class="pl-k">=</span>a<span class="pl-k">*</span>g<span class="pl-k">+</span>h,a<span class="pl-k">-=</span>k,a<span class="pl-k">=</span>a<span class="pl-k">/</span>i<span class="pl-k">+</span>d,e<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">lin2val</span>(a)))<span class="pl-k">:</span>(e<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">val2lin</span>(a)),f<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">0.5</span>),a<span class="pl-k">=</span>g<span class="pl-k">*</span>(a<span class="pl-k">-</span>d)<span class="pl-k">*</span>i<span class="pl-k">+</span>h<span class="pl-k">+</span>g<span class="pl-k">*</span>k<span class="pl-k">+</span>(<span class="pl-en">za</span>(f)<span class="pl-k">?</span>i<span class="pl-k">*</span>f<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">pointRange</span><span class="pl-k">:</span><span class="pl-c1">0</span>));<span class="pl-k">return</span> a},<span class="pl-en">toPixels</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">translate</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">horiz</span>,<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line">(b<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>)},<span class="pl-en">toValue</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">translate</span>(a<span class="pl-k">-</span>(b<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">horiz</span>,<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">getPlotLinePath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">left</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">top</span>,i,k,j<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">oldChartHeight</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">chartHeight</span>,l<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">oldChartWidth</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">chartWidth</span>,m;i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">transB</span>;e<span class="pl-k">=</span><span class="pl-en">n</span>(e,<span class="pl-c1">this</span>.<span class="pl-en">translate</span>(a,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,c));a<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-en">t</span>(e<span class="pl-k">+</span>i);i<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-en">t</span>(j<span class="pl-k">-</span>e<span class="pl-k">-</span>i);<span class="pl-k">if</span>(<span class="pl-c1">isNaN</span>(e))m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">horiz</span>){<span class="pl-k">if</span>(i<span class="pl-k">=</span>h,k<span class="pl-k">=</span>j<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">bottom</span>,a<span class="pl-k">&lt;</span>g<span class="pl-k">||</span>a<span class="pl-k">&gt;</span>g<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">width</span>)m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(a<span class="pl-k">=</span>g,c<span class="pl-k">=</span>l<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">right</span>,i<span class="pl-k">&lt;</span>h<span class="pl-k">||</span>i<span class="pl-k">&gt;</span>h<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span>)m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> m<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">crispLine</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line">a,i,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,c,k],b<span class="pl-k">||</span><span class="pl-c1">1</span>)},<span class="pl-en">getLinearTickPositions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d,b<span class="pl-k">=</span><span class="pl-en">ea</span>(<span class="pl-en">T</span>(b<span class="pl-k">/</span>a)<span class="pl-k">*</span>a),c<span class="pl-k">=</span><span class="pl-en">ea</span>(<span class="pl-en">Wa</span>(c<span class="pl-k">/</span>a)<span class="pl-k">*</span>a),e<span class="pl-k">=</span>[];b<span class="pl-k">&lt;=</span>c;){<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(b);b<span class="pl-k">=</span><span class="pl-en">ea</span>(b<span class="pl-k">+</span>a);<span class="pl-k">if</span>(b<span class="pl-k">===</span>d)<span class="pl-k">break</span>;d<span class="pl-k">=</span>b}<span class="pl-k">return</span> e},<span class="pl-en">getMinorTickPositions</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">tickPositions</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">minorTickInterval</span>,d<span class="pl-k">=</span>[],e;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">isLog</span>){e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>;a<span class="pl-k">&lt;</span>e;a<span class="pl-k">++</span>)d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">concat</span>(<span class="pl-c1">this</span>.<span class="pl-en">getLogTickPositions</span>(c,b[a<span class="pl-k">-</span><span class="pl-c1">1</span>],b[a],<span class="pl-k">!</span><span class="pl-c1">0</span>))}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">minorTickInterval</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">concat</span>(<span class="pl-c1">this</span>.<span class="pl-en">getTimeTicks</span>(<span class="pl-c1">this</span>.<span class="pl-en">normalizeTimeTickInterval</span>(c),<span class="pl-c1">this</span>.<span class="pl-smi">min</span>,<span class="pl-c1">this</span>.<span class="pl-smi">max</span>,</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">startOfWeek</span>)),d[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">shift</span>();<span class="pl-k">else</span> <span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span><span class="pl-k">+</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>)<span class="pl-k">%</span>c;b<span class="pl-k">&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>;b<span class="pl-k">+=</span>c)<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(b);<span class="pl-k">return</span> d},<span class="pl-en">adjustForMinRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>,d,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">dataMax</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">dataMin</span><span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">minRange</span>,f,g,h,i,k;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">minRange</span><span class="pl-k">===</span>s<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">isLog</span>)<span class="pl-en">r</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>)<span class="pl-k">||</span><span class="pl-en">r</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">minRange</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">:</span>(<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xData</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xIncrement</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;g<span class="pl-k">&gt;</span><span class="pl-c1">0</span>;g<span class="pl-k">--</span>)<span class="pl-k">if</span>(h<span class="pl-k">=</span>i[g]<span class="pl-k">-</span>i[g<span class="pl-k">-</span><span class="pl-c1">1</span>],f<span class="pl-k">===</span>s<span class="pl-k">||</span>h<span class="pl-k">&lt;</span>f)f<span class="pl-k">=</span>h}),<span class="pl-c1">this</span>.<span class="pl-smi">minRange</span><span class="pl-k">=</span><span class="pl-en">x</span>(f<span class="pl-k">*</span><span class="pl-c1">5</span>,<span class="pl-c1">this</span>.<span class="pl-smi">dataMax</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">dataMin</span>));<span class="pl-k">if</span>(c<span class="pl-k">-</span>b<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">minRange</span>){<span class="pl-k">var</span> j<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">minRange</span>;d<span class="pl-k">=</span>(j<span class="pl-k">-</span>c<span class="pl-k">+</span>b)<span class="pl-k">/</span><span class="pl-c1">2</span>;d<span class="pl-k">=</span>[b<span class="pl-k">-</span>d,<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>,b<span class="pl-k">-</span>d)];<span class="pl-k">if</span>(e)d[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">dataMin</span>;b<span class="pl-k">=</span><span class="pl-en">Aa</span>(d);c<span class="pl-k">=</span>[b<span class="pl-k">+</span>j,<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>,b<span class="pl-k">+</span>j)];<span class="pl-k">if</span>(e)c[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">dataMax</span>;c<span class="pl-k">=</span><span class="pl-en">Sa</span>(c);c<span class="pl-k">-</span>b<span class="pl-k">&lt;</span>j<span class="pl-k">&amp;&amp;</span>(d[<span class="pl-c1">0</span>]<span class="pl-k">=</span>c<span class="pl-k">-</span>j,d[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>,c<span class="pl-k">-</span>j),b<span class="pl-k">=</span><span class="pl-en">Aa</span>(d))}<span class="pl-c1">this</span>.<span class="pl-smi">min</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">max</span><span class="pl-k">=</span>c},<span class="pl-en">setAxisTranslation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">axisPointRange</span><span class="pl-k">||</span><span class="pl-c1">0</span>,e,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span>,i<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">categories</span>,k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">transA</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">||</span>i<span class="pl-k">||</span>d)h<span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">minPointOffset</span>,g<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">pointRangePadding</span>)<span class="pl-k">:</span><span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-smi">b</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">pointRange</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">axisPointRange</span><span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-k">+</span>i),k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">pointPlacement</span>,o<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">closestPointRange</span>;h<span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>);d<span class="pl-k">=</span><span class="pl-en">v</span>(d,h);f<span class="pl-k">=</span><span class="pl-en">v</span>(f,<span class="pl-en">ka</span>(k)<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>h<span class="pl-k">/</span><span class="pl-c1">2</span>);g<span class="pl-k">=</span><span class="pl-en">v</span>(g,k<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>h);<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">noSharedTooltip</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(o)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-en">r</span>(e)<span class="pl-k">?</span><span class="pl-en">x</span>(e,o)<span class="pl-k">:</span>o)}),h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ordinalSlope</span><span class="pl-k">&amp;&amp;</span>e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">ordinalSlope</span><span class="pl-k">/</span>e<span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-smi">b</span>.<span class="pl-smi">minPointOffset</span><span class="pl-k">=</span>f<span class="pl-k">*=</span>h,<span class="pl-smi">b</span>.<span class="pl-smi">pointRangePadding</span><span class="pl-k">=</span>g<span class="pl-k">*=</span>h,<span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span><span class="pl-k">=</span><span class="pl-en">x</span>(d,c),<span class="pl-smi">b</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">=</span>e;<span class="pl-k">if</span>(a)<span class="pl-smi">b</span>.<span class="pl-smi">oldTransA</span><span class="pl-k">=</span>k;<span class="pl-smi">b</span>.<span class="pl-smi">translationSlope</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">transA</span><span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">len</span><span class="pl-k">/</span>(c<span class="pl-k">+</span>g<span class="pl-k">||</span><span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-smi">transB</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">left</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">bottom</span>;<span class="pl-smi">b</span>.<span class="pl-smi">minPixelPadding</span><span class="pl-k">=</span>k<span class="pl-k">*</span>f},<span class="pl-en">setTickPositions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isLog</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isDatetimeAxis</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isXAxis</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isLinked</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tickPositioner</span>,</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">maxPadding</span>,j<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">minPadding</span>,l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">tickInterval</span>,m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">minTickInterval</span>,o<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">tickPixelInterval</span>,p,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">categories</span>;h<span class="pl-k">?</span>(<span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span><span class="pl-k">=</span>c[<span class="pl-smi">b</span>.<span class="pl-smi">coll</span>][<span class="pl-smi">d</span>.<span class="pl-smi">linkedTo</span>],c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span>.<span class="pl-en">getExtremes</span>(),<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">min</span>,<span class="pl-smi">c</span>.<span class="pl-smi">dataMin</span>),<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">max</span>,<span class="pl-smi">c</span>.<span class="pl-smi">dataMax</span>),<span class="pl-smi">d</span>.<span class="pl-c1">type</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span>.<span class="pl-c1">options</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">na</span>(<span class="pl-c1">11</span>,<span class="pl-c1">1</span>))<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">userMin</span>,<span class="pl-smi">d</span>.<span class="pl-smi">min</span>,<span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span>),<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">userMax</span>,<span class="pl-smi">d</span>.<span class="pl-smi">max</span>,<span class="pl-smi">b</span>.<span class="pl-smi">dataMax</span>));<span class="pl-k">if</span>(e)<span class="pl-k">!</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-en">x</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span>,<span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span>,<span class="pl-smi">b</span>.<span class="pl-smi">min</span>))<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">na</span>(<span class="pl-c1">10</span>,<span class="pl-c1">1</span>),<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-en">ea</span>(<span class="pl-en">Ga</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span>)),<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-en">ea</span>(<span class="pl-en">Ga</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span>));<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">range</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span>))<span class="pl-smi">b</span>.<span class="pl-smi">userMin</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span>,<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">range</span>),<span class="pl-smi">b</span>.<span class="pl-smi">userMax</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">max</span>,<span class="pl-smi">b</span>.<span class="pl-smi">range</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">b</span>.<span class="pl-smi">beforePadding</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">beforePadding</span>();<span class="pl-smi">b</span>.<span class="pl-en">adjustForMinRange</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">B</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">axisPointRange</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">usePercentage</span><span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span>)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span>)){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">r</span>(<span class="pl-smi">d</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(<span class="pl-smi">b</span>.<span class="pl-smi">userMin</span>)<span class="pl-k">&amp;&amp;</span>j<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-smi">ignoreMinPadding</span>))<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">-=</span>c<span class="pl-k">*</span>j;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">r</span>(<span class="pl-smi">d</span>.<span class="pl-smi">max</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(<span class="pl-smi">b</span>.<span class="pl-smi">userMax</span>)<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dataMax</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-smi">ignoreMaxPadding</span>))<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">+=</span>c<span class="pl-k">*</span>k}<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>h<span class="pl-k">&amp;&amp;!</span>l<span class="pl-k">&amp;&amp;</span>o<span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tickPixelInterval</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span><span class="pl-en">n</span>(l,<span class="pl-c1">B</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">min</span>)<span class="pl-k">*</span>o<span class="pl-k">/</span><span class="pl-en">v</span>(<span class="pl-smi">b</span>.<span class="pl-smi">len</span>,o)),<span class="pl-k">!</span><span class="pl-en">r</span>(l)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">len</span><span class="pl-k">&lt;</span>o<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">isRadial</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">startOnTick</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">endOnTick</span><span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">/=</span><span class="pl-c1">4</span>));g<span class="pl-k">&amp;&amp;!</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">processData</span>(<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">oldMin</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">oldMax</span>)});<span class="pl-smi">b</span>.<span class="pl-en">setAxisTranslation</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-smi">beforeSetTickPositions</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">beforeSetTickPositions</span>();<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">postProcessTickInterval</span>)<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">postProcessTickInterval</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span>)<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span>,<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">&lt;</span>m)<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span>m;<span class="pl-k">if</span>(<span class="pl-k">!</span>f<span class="pl-k">&amp;&amp;!</span>e<span class="pl-k">&amp;&amp;!</span>l)<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-en">sb</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>,<span class="pl-c1">null</span>,<span class="pl-en">rb</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>),d);<span class="pl-smi">b</span>.<span class="pl-smi">minorTickInterval</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">minorTickInterval</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">/</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">minorTickInterval</span>;<span class="pl-smi">b</span>.<span class="pl-smi">tickPositions</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">tickPositions</span><span class="pl-k">?</span>[].<span class="pl-c1">concat</span>(<span class="pl-smi">d</span>.<span class="pl-smi">tickPositions</span>)<span class="pl-k">:</span>i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">apply</span>(b,[<span class="pl-smi">b</span>.<span class="pl-smi">min</span>,<span class="pl-smi">b</span>.<span class="pl-smi">max</span>]);<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">ordinalPositions</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span>)<span class="pl-k">/</span><span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">&gt;</span><span class="pl-en">v</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-smi">len</span>,<span class="pl-c1">200</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">na</span>(<span class="pl-c1">19</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),a<span class="pl-k">=</span>f<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">getTimeTicks</span>(<span class="pl-smi">b</span>.<span class="pl-en">normalizeTimeTickInterval</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>,<span class="pl-smi">d</span>.<span class="pl-smi">units</span>),<span class="pl-smi">b</span>.<span class="pl-smi">min</span>,<span class="pl-smi">b</span>.<span class="pl-smi">max</span>,<span class="pl-smi">d</span>.<span class="pl-smi">startOfWeek</span>,<span class="pl-smi">b</span>.<span class="pl-smi">ordinalPositions</span>,<span class="pl-smi">b</span>.<span class="pl-smi">closestPointRange</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">getLogTickPositions</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>,<span class="pl-smi">b</span>.<span class="pl-smi">min</span>,</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">max</span>)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-en">getLinearTickPositions</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tickInterval</span>,<span class="pl-smi">b</span>.<span class="pl-smi">min</span>,<span class="pl-smi">b</span>.<span class="pl-smi">max</span>),p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>),<span class="pl-smi">b</span>.<span class="pl-smi">tickPositions</span><span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-k">!</span>h)e<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],f<span class="pl-k">=</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">minPointOffset</span><span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-smi">startOnTick</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span>e<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">-</span>h<span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">shift</span>(),<span class="pl-smi">d</span>.<span class="pl-smi">endOnTick</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span>f<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">+</span>h<span class="pl-k">&lt;</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">pop</span>(),<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-en">O</span>(<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-c1">0.001</span>,<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">-=</span>d,<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">+=</span>d)},<span class="pl-en">setMaxTicks</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">maxTicks</span><span class="pl-k">||</span>{},c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">tickPositions</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_maxTicksKey</span><span class="pl-k">=</span>[<span class="pl-c1">this</span>.<span class="pl-smi">coll</span>,<span class="pl-c1">this</span>.<span class="pl-smi">pos</span>,<span class="pl-c1">this</span>.<span class="pl-smi">len</span>].<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">isLinked</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span>(b[d]<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">alignTicks</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>)b[d]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-smi">a</span>.<span class="pl-smi">maxTicks</span><span class="pl-k">=</span>b},<span class="pl-en">adjustTickAmount</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_maxTicksKey</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">tickPositions</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">maxTicks</span>;<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span>c[a]<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">categories</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">isLinked</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">alignTicks</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span><span class="pl-k">!==</span>s){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">tickAmount</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-c1">this</span>.<span class="pl-smi">tickAmount</span><span class="pl-k">=</span>a<span class="pl-k">=</span>c[a];<span class="pl-k">if</span>(e<span class="pl-k">&lt;</span>a){<span class="pl-k">for</span>(;<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>a;)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-en">ea</span>(b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">tickInterval</span>));<span class="pl-c1">this</span>.<span class="pl-smi">transA</span><span class="pl-k">*=</span>(e<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">/</span>(a<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">max</span><span class="pl-k">=</span>b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]}<span class="pl-k">if</span>(<span class="pl-en">r</span>(d)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span>d)<span class="pl-c1">this</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}},<span class="pl-en">setScale</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">stacks</span>,b,c,d,e;<span class="pl-c1">this</span>.<span class="pl-smi">oldMin</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">min</span>;<span class="pl-c1">this</span>.<span class="pl-smi">oldMax</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>;<span class="pl-c1">this</span>.<span class="pl-smi">oldAxisLength</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">len</span>;<span class="pl-c1">this</span>.<span class="pl-en">setAxisSize</span>();e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">len</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">oldAxisLength</span>;<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">isDirty</span>)d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">if</span>(e<span class="pl-k">||</span>d<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">isLinked</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">forceRedraw</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">userMin</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">oldUserMin</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">userMax</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">oldUserMax</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span>)<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-k">for</span>(c <span class="pl-k">in</span> a[b])a[b][c].<span class="pl-smi">total</span><span class="pl-k">=</span><span class="pl-c1">null</span>,a[b][c].<span class="pl-smi">cum</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">forceRedraw</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">getSeriesExtremes</span>();<span class="pl-c1">this</span>.<span class="pl-en">setTickPositions</span>();<span class="pl-c1">this</span>.<span class="pl-smi">oldUserMin</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userMin</span>;<span class="pl-c1">this</span>.<span class="pl-smi">oldUserMax</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userMax</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">isDirty</span>)<span class="pl-c1">this</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">oldMin</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">oldMax</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">oldStacks</span>)a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">stacks</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">oldStacks</span>;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-k">for</span>(c <span class="pl-k">in</span> a[b])a[b][c].<span class="pl-smi">cum</span><span class="pl-k">=</span>a[b][c].<span class="pl-smi">total</span>}<span class="pl-c1">this</span>.<span class="pl-en">setMaxTicks</span>()},<span class="pl-en">setExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-en">n</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>),e<span class="pl-k">=</span><span class="pl-en">u</span>(e,{min<span class="pl-k">:</span>a,max<span class="pl-k">:</span>b});<span class="pl-en">P</span>(f,<span class="pl-s"><span class="pl-pds">&quot;</span>setExtremes<span class="pl-pds">&quot;</span></span>,e,<span class="pl-k">function</span>(){<span class="pl-smi">f</span>.<span class="pl-smi">userMin</span><span class="pl-k">=</span>a;<span class="pl-smi">f</span>.<span class="pl-smi">userMax</span><span class="pl-k">=</span>b;<span class="pl-smi">f</span>.<span class="pl-smi">eventArgs</span><span class="pl-k">=</span>e;<span class="pl-smi">f</span>.<span class="pl-smi">isDirtyExtremes</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">redraw</span>(d)})},<span class="pl-en">zoom</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">dataMin</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">dataMax</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>;<span class="pl-c1">this</span>.<span class="pl-smi">allowZoomOutside</span><span class="pl-k">||</span>(<span class="pl-en">r</span>(c)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span><span class="pl-en">x</span>(c,<span class="pl-en">n</span>(<span class="pl-smi">e</span>.<span class="pl-smi">min</span>,c))<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line">(a<span class="pl-k">=</span>s),<span class="pl-en">r</span>(d)<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&gt;=</span><span class="pl-en">v</span>(d,<span class="pl-en">n</span>(<span class="pl-smi">e</span>.<span class="pl-smi">max</span>,d))<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>s));<span class="pl-c1">this</span>.<span class="pl-smi">displayBtn</span><span class="pl-k">=</span>a<span class="pl-k">!==</span>s<span class="pl-k">||</span>b<span class="pl-k">!==</span>s;<span class="pl-c1">this</span>.<span class="pl-en">setExtremes</span>(a,b,<span class="pl-k">!</span><span class="pl-c1">1</span>,s,{trigger<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>zoom<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">setAxisSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">offsetLeft</span><span class="pl-k">||</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">offsetRight</span><span class="pl-k">||</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">horiz</span>,f,g;<span class="pl-c1">this</span>.<span class="pl-c1">left</span><span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-c1">left</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">+</span>c);<span class="pl-c1">this</span>.<span class="pl-c1">top</span><span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-c1">top</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotTop</span>);<span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span>c<span class="pl-k">+</span>d);<span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-c1">height</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotHeight</span>);<span class="pl-c1">this</span>.<span class="pl-c1">bottom</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">-</span>b<span class="pl-k">-</span>f;<span class="pl-c1">this</span>.<span class="pl-c1">right</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">-</span>c<span class="pl-k">-</span>g;<span class="pl-c1">this</span>.<span class="pl-smi">len</span><span class="pl-k">=</span><span class="pl-en">v</span>(e<span class="pl-k">?</span>c<span class="pl-k">:</span>b,<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span>e<span class="pl-k">?</span>g<span class="pl-k">:</span>f},<span class="pl-en">getExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isLog</span>;</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>{min<span class="pl-k">:</span>a<span class="pl-k">?</span><span class="pl-en">ea</span>(<span class="pl-en">la</span>(<span class="pl-c1">this</span>.<span class="pl-smi">min</span>))<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>,max<span class="pl-k">:</span>a<span class="pl-k">?</span><span class="pl-en">ea</span>(<span class="pl-en">la</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>))<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>,dataMin<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">dataMin</span>,dataMax<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">dataMax</span>,userMin<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">userMin</span>,userMax<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">userMax</span>}},<span class="pl-en">getThreshold</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isLog</span>,c<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-en">la</span>(<span class="pl-c1">this</span>.<span class="pl-smi">min</span>)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>,b<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-en">la</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>;c<span class="pl-k">&gt;</span>a<span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">?</span>a<span class="pl-k">=</span>c<span class="pl-k">:</span>b<span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>b);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">translate</span>(a,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)},<span class="pl-en">autoLabelAlign</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span>(<span class="pl-en">n</span>(a,<span class="pl-c1">0</span>)<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">side</span><span class="pl-k">*</span><span class="pl-c1">90</span><span class="pl-k">+</span><span class="pl-c1">720</span>)<span class="pl-k">%</span><span class="pl-c1">360</span>;<span class="pl-k">return</span> a<span class="pl-k">&gt;</span><span class="pl-c1">15</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-c1">165</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a<span class="pl-k">&gt;</span><span class="pl-c1">195</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-c1">345</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>},<span class="pl-en">getOffset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickPositions</span>,</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ticks</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">horiz</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">side</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">inverted</span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">3</span>,<span class="pl-c1">2</span>][h]<span class="pl-k">:</span>h,k,j<span class="pl-k">=</span><span class="pl-c1">0</span>,l,m<span class="pl-k">=</span><span class="pl-c1">0</span>,o<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">title</span>,p<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">labels</span>,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">0</span>,Oa<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">axisOffset</span>,z<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">clipOffset</span>,<span class="pl-c1">K</span><span class="pl-k">=</span>[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>][h],t,u<span class="pl-k">=</span><span class="pl-c1">1</span>,w<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">p</span>.<span class="pl-smi">maxStaggerLines</span>,<span class="pl-c1">5</span>),x,y,<span class="pl-c1">D</span>,<span class="pl-c1">E</span>;<span class="pl-smi">a</span>.<span class="pl-smi">hasData</span><span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hasVisibleSeries</span><span class="pl-k">||</span><span class="pl-en">r</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>)<span class="pl-k">&amp;&amp;!!</span>e;<span class="pl-smi">a</span>.<span class="pl-smi">showAxis</span><span class="pl-k">=</span>b<span class="pl-k">=</span>k<span class="pl-k">||</span><span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-smi">showEmpty</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-smi">staggerLines</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">horiz</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-smi">staggerLines</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">axisGroup</span>)<span class="pl-smi">a</span>.<span class="pl-smi">gridGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>grid<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">gridZIndex</span><span class="pl-k">||</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">axisGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>axis<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">zIndex</span><span class="pl-k">||</span><span class="pl-c1">2</span>}).<span class="pl-c1">add</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">labelGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>axis-labels<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-smi">p</span>.<span class="pl-c1">zIndex</span><span class="pl-k">||</span><span class="pl-c1">7</span>}).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">coll</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-labels<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>();<span class="pl-k">if</span>(k<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">isLinked</span>){<span class="pl-smi">a</span>.<span class="pl-smi">labelAlign</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">p</span>.<span class="pl-c1">align</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">autoLabelAlign</span>(<span class="pl-smi">p</span>.<span class="pl-smi">rotation</span>));<span class="pl-en">q</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){f[b]<span class="pl-k">?</span>f[b].<span class="pl-en">addLabel</span>()<span class="pl-k">:</span>f[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">$a</span>(a,b)});<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">horiz</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">staggerLines</span><span class="pl-k">&amp;&amp;</span>w<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">p</span>.<span class="pl-smi">rotation</span>){<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">reversed</span><span class="pl-k">?</span>[].<span class="pl-c1">concat</span>(e).<span class="pl-c1">reverse</span>()<span class="pl-k">:</span>e;u<span class="pl-k">&lt;</span>w;){k<span class="pl-k">=</span>[];x<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(p<span class="pl-k">=</span><span class="pl-c1">0</span>;p<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;p<span class="pl-k">++</span>)y<span class="pl-k">=</span>t[p],<span class="pl-c1">D</span><span class="pl-k">=</span>(<span class="pl-c1">D</span><span class="pl-k">=</span>f[y].<span class="pl-c1">label</span><span class="pl-k">&amp;&amp;</span>f[y].<span class="pl-c1">label</span>.<span class="pl-en">getBBox</span>())<span class="pl-k">?</span><span class="pl-c1">D</span>.<span class="pl-c1">width</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-c1">E</span><span class="pl-k">=</span>p<span class="pl-k">%</span>u,<span class="pl-c1">D</span><span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">translate</span>(y),k[<span class="pl-c1">E</span>]<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>y<span class="pl-k">&lt;</span>k[<span class="pl-c1">E</span>]<span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),k[<span class="pl-c1">E</span>]<span class="pl-k">=</span>y<span class="pl-k">+</span><span class="pl-c1">D</span>);<span class="pl-k">if</span>(x)u<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">break</span>}<span class="pl-k">if</span>(u<span class="pl-k">&gt;</span><span class="pl-c1">1</span>)<span class="pl-smi">a</span>.<span class="pl-smi">staggerLines</span><span class="pl-k">=</span>u}<span class="pl-en">q</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(h<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span>h<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">||</span>{<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>}[h]<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">labelAlign</span>)<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-en">v</span>(f[b].<span class="pl-en">getLabelSize</span>(),<span class="pl-c1">B</span>)});<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">staggerLines</span>)<span class="pl-c1">B</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-smi">staggerLines</span>,<span class="pl-smi">a</span>.<span class="pl-smi">labelOffset</span><span class="pl-k">=</span><span class="pl-c1">B</span>}<span class="pl-k">else</span> <span class="pl-k">for</span>(t <span class="pl-k">in</span> f)f[t].<span class="pl-en">destroy</span>(),<span class="pl-k">delete</span> f[t];<span class="pl-k">if</span>(o<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-c1">text</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-smi">enabled</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span>)<span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">text</span>(<span class="pl-smi">o</span>.<span class="pl-c1">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">o</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>,rotation<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-smi">rotation</span><span class="pl-k">||</span><span class="pl-c1">0</span>,align<span class="pl-k">:</span><span class="pl-smi">o</span>.<span class="pl-c1">textAlign</span><span class="pl-k">||</span>{low<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,middle<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,high<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>}[<span class="pl-smi">o</span>.<span class="pl-c1">align</span>]}).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">coll</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-title<span class="pl-pds">&quot;</span></span>).<span class="pl-en">css</span>(<span class="pl-smi">o</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">axisGroup</span>),<span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span>.<span class="pl-smi">isNew</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(b)j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span>.<span class="pl-en">getBBox</span>()[g<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>],m<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">o</span>.<span class="pl-smi">margin</span>,</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">10</span>),l<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">offset</span>;<span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span>[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>]()}<span class="pl-smi">a</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span><span class="pl-c1">K</span><span class="pl-k">*</span><span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-smi">offset</span>,Oa[h]);<span class="pl-smi">a</span>.<span class="pl-smi">axisTitleMargin</span><span class="pl-k">=</span><span class="pl-en">n</span>(l,<span class="pl-c1">B</span><span class="pl-k">+</span>m<span class="pl-k">+</span>(h<span class="pl-k">!==</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">K</span><span class="pl-k">*</span><span class="pl-smi">d</span>.<span class="pl-smi">labels</span>[g<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>]));Oa[h]<span class="pl-k">=</span><span class="pl-en">v</span>(Oa[h],<span class="pl-smi">a</span>.<span class="pl-smi">axisTitleMargin</span><span class="pl-k">+</span>j<span class="pl-k">+</span><span class="pl-c1">K</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">offset</span>);z[i]<span class="pl-k">=</span><span class="pl-en">v</span>(z[i],<span class="pl-en">T</span>(<span class="pl-smi">d</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">*</span><span class="pl-c1">2</span>)},<span class="pl-en">getLinePath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">opposite</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">horiz</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">left</span><span class="pl-k">+</span>(c<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">bottom</span><span class="pl-k">-</span>(c<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d;c<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">crispLine</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">left</span><span class="pl-k">:</span>f,e<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">top</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">right</span><span class="pl-k">:</span>f,e<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">bottom</span>],a)},<span class="pl-en">getTitlePosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">horiz</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">left</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">top</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">len</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">title</span>,f<span class="pl-k">=</span>a<span class="pl-k">?</span>b<span class="pl-k">:</span>c,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">opposite</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span>,i<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-smi">e</span>.<span class="pl-c1">style</span>.<span class="pl-c1">fontSize</span><span class="pl-k">||</span><span class="pl-c1">12</span>),d<span class="pl-k">=</span>{low<span class="pl-k">:</span>f<span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d),middle<span class="pl-k">:</span>f<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span>,high<span class="pl-k">:</span>f<span class="pl-k">+</span>(a<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-c1">0</span>)}[<span class="pl-smi">e</span>.<span class="pl-c1">align</span>],b<span class="pl-k">=</span>(a<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">:</span>b)<span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(g<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">axisTitleMargin</span><span class="pl-k">+</span>(<span class="pl-c1">this</span>.<span class="pl-smi">side</span><span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">?</span>i<span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">return</span>{x<span class="pl-k">:</span>a<span class="pl-k">?</span>d<span class="pl-k">:</span>b<span class="pl-k">+</span>(g<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>h<span class="pl-k">+</span>(<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span>a<span class="pl-k">?</span>b<span class="pl-k">-</span>(g<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>h<span class="pl-k">:</span>d<span class="pl-k">+</span>(<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>)}},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">horiz</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">reversed</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">renderer</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">isLog</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">isLinked</span>,</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickPositions</span>,k,j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">axisTitle</span>,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ticks</span>,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">minorTicks</span>,o<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">alternateBands</span>,p<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">stackLabels</span>,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">alternateGridColor</span>,n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tickmarkOffset</span>,z<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">lineWidth</span>,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(<span class="pl-smi">a</span>.<span class="pl-smi">oldMin</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(<span class="pl-smi">a</span>.<span class="pl-smi">oldMin</span>),t<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hasData</span>,v<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">showAxis</span>,u,w<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">labels</span>.<span class="pl-smi">overflow</span>,x<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">justifyLabels</span><span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span>w<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>,y;<span class="pl-smi">a</span>.<span class="pl-smi">labelEdge</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">justifyToPlot</span><span class="pl-k">=</span>w<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span>;<span class="pl-en">q</span>([l,m,o],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> a)a[b].<span class="pl-smi">isActive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>});<span class="pl-k">if</span>(t<span class="pl-k">||</span>h)<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">minorTickInterval</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">categories</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-en">getMinorTickPositions</span>(),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){m[b]<span class="pl-k">||</span>(m[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">$a</span>(a,b,<span class="pl-s"><span class="pl-pds">&quot;</span>minor<span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">K</span><span class="pl-k">&amp;&amp;</span>m[b].<span class="pl-smi">isNew</span><span class="pl-k">&amp;&amp;</span>m[b].<span class="pl-en">render</span>(<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);m[b].<span class="pl-en">render</span>(<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)}),<span class="pl-smi">i</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">slice</span>(),(b<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">||!</span>b<span class="pl-k">&amp;&amp;!</span>c)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-c1">reverse</span>(),x<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>).<span class="pl-c1">concat</span>([k[<span class="pl-c1">0</span>]])),<span class="pl-en">q</span>(k,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){x<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>c<span class="pl-k">===</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>h<span class="pl-k">||</span>b<span class="pl-k">&gt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>)l[b]<span class="pl-k">||</span>(l[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">$a</span>(a,b)),<span class="pl-c1">K</span><span class="pl-k">&amp;&amp;</span>l[b].<span class="pl-smi">isNew</span><span class="pl-k">&amp;&amp;</span>l[b].<span class="pl-en">render</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">0.1</span>),l[b].<span class="pl-en">render</span>(c,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)}),n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(l[<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>(l[<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">$a</span>(a,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)),l[<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-en">render</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>))),<span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(c<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>)o[b]<span class="pl-k">||</span>(o[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Q.PlotLineOrBand</span>(a)),u<span class="pl-k">=</span>b<span class="pl-k">+</span>n,y<span class="pl-k">=</span>i[c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">!==</span>s<span class="pl-k">?</span>i[c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">+</span>n<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>,o[b].<span class="pl-c1">options</span><span class="pl-k">=</span>{from<span class="pl-k">:</span>g<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class="pl-en">la</span>(u)<span class="pl-k">:</span>u,to<span class="pl-k">:</span>g<span class="pl-k">?</span><span class="pl-en">la</span>(y)<span class="pl-k">:</span>y,color<span class="pl-k">:</span><span class="pl-c1">B</span>},o[b].<span class="pl-en">render</span>(),o[b].<span class="pl-smi">isActive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}),<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">_addedPlotLB</span>)<span class="pl-en">q</span>((<span class="pl-smi">f</span>.<span class="pl-smi">plotLines</span><span class="pl-k">||</span>[]).<span class="pl-c1">concat</span>(<span class="pl-smi">f</span>.<span class="pl-smi">plotBands</span><span class="pl-k">||</span>[]),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">addPlotBandOrLine</span>(b)}),<span class="pl-smi">a</span>.<span class="pl-smi">_addedPlotLB</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-en">q</span>([l,m,o],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c,e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>Ba<span class="pl-k">?</span><span class="pl-smi">Ba</span>.<span class="pl-smi">duration</span><span class="pl-k">||</span><span class="pl-c1">500</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;c<span class="pl-k">--</span>;)a[e[c]]<span class="pl-k">&amp;&amp;!</span>a[e[c]].<span class="pl-smi">isActive</span><span class="pl-k">&amp;&amp;</span>(a[e[c]].<span class="pl-en">destroy</span>(),<span class="pl-k">delete</span> a[e[c]])};<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-k">if</span>(<span class="pl-k">!</span>a[b].<span class="pl-smi">isActive</span>)a[b].<span class="pl-en">render</span>(b,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>),a[b].<span class="pl-smi">isActive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(b);a<span class="pl-k">===</span>o<span class="pl-k">||!</span><span class="pl-smi">d</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">||!</span>f<span class="pl-k">?</span><span class="pl-en">g</span>()<span class="pl-k">:</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-c1">setTimeout</span>(g,f)});<span class="pl-k">if</span>(z)b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getLinePath</span>(z),<span class="pl-smi">a</span>.<span class="pl-smi">axisLine</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">axisLine</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>b})<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">axisLine</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">path</span>(b).<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">lineColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>z,zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">axisGroup</span>),<span class="pl-smi">a</span>.<span class="pl-smi">axisLine</span>[v<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>]();<span class="pl-k">if</span>(j<span class="pl-k">&amp;&amp;</span>v)j[<span class="pl-smi">j</span>.<span class="pl-smi">isNew</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](<span class="pl-smi">a</span>.<span class="pl-en">getTitlePosition</span>()),<span class="pl-smi">j</span>.<span class="pl-smi">isNew</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">renderStackTotals</span>();<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">redraw</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">pointer</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">reset</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-en">render</span>();<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotLinesAndBands</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">render</span>()});<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>})},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">stacks</span>,d,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLinesAndBands</span>;a<span class="pl-k">||</span><span class="pl-en">S</span>(b);<span class="pl-k">for</span>(d <span class="pl-k">in</span> c)<span class="pl-en">Ka</span>(c[d]),c[d]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>;<span class="pl-en">q</span>([<span class="pl-smi">b</span>.<span class="pl-smi">ticks</span>,<span class="pl-smi">b</span>.<span class="pl-smi">minorTicks</span>,<span class="pl-smi">b</span>.<span class="pl-smi">alternateBands</span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">Ka</span>(a)});<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;a<span class="pl-k">--</span>;)e[a].<span class="pl-en">destroy</span>();<span class="pl-en">q</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stackTotalGroup,axisLine,axisTitle,axisGroup,cross,gridGroup,labelGroup<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){b[a]<span class="pl-k">&amp;&amp;</span>(b[a]<span class="pl-k">=</span>b[a].<span class="pl-en">destroy</span>())});<span class="pl-c1">this</span>.<span class="pl-smi">cross</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">cross</span>.<span class="pl-en">destroy</span>()},<span class="pl-en">drawCrosshair</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">crosshair</span>)<span class="pl-k">if</span>((<span class="pl-en">r</span>(b)<span class="pl-k">||!</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">crosshair</span>.<span class="pl-smi">snap</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>))<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-c1">this</span>.<span class="pl-en">hideCrosshair</span>();<span class="pl-k">else</span>{<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">crosshair</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">animation</span>;<span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-smi">snap</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">?</span><span class="pl-en">r</span>(b)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">inverted</span><span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">plotX</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotY</span>)<span class="pl-k">:</span>c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">len</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>;c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isRadial</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">getPlotLinePath</span>(<span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">stackY</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>))<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">getPlotLinePath</span>(<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,c);<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-c1">null</span>)<span class="pl-c1">this</span>.<span class="pl-en">hideCrosshair</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">cross</span>)<span class="pl-c1">this</span>.<span class="pl-smi">cross</span>.<span class="pl-en">attr</span>({visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>})[e<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({d<span class="pl-k">:</span>c},e);<span class="pl-k">else</span>{e<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">1</span>,stroke<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">zIndex</span><span class="pl-k">||</span><span class="pl-c1">2</span>};<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">dashStyle</span>)<span class="pl-smi">e</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">dashStyle</span>;<span class="pl-c1">this</span>.<span class="pl-smi">cross</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">path</span>(c).<span class="pl-en">attr</span>(e).<span class="pl-c1">add</span>()}}},<span class="pl-en">hideCrosshair</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">cross</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">cross</span>.<span class="pl-en">hide</span>()}};</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-en">u</span>(<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">getPlotBandPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getPlotLinePath</span>(b),d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getPlotLinePath</span>(a);d<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(c[<span class="pl-c1">4</span>],c[<span class="pl-c1">5</span>],c[<span class="pl-c1">1</span>],c[<span class="pl-c1">2</span>])<span class="pl-k">:</span>d<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> d},<span class="pl-en">addPlotBand</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">addPlotBandOrLine</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>plotBands<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">addPlotLine</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">addPlotBandOrLine</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>plotLines<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">addPlotBandOrLine</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">Q.PlotLineOrBand</span>(<span class="pl-c1">this</span>,a)).<span class="pl-en">render</span>(),d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userOptions</span>;c<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">&amp;&amp;</span>(d[b]<span class="pl-k">=</span>d[b]<span class="pl-k">||</span>[],d[b].<span class="pl-c1">push</span>(a)),<span class="pl-c1">this</span>.<span class="pl-smi">plotLinesAndBands</span>.<span class="pl-c1">push</span>(c));<span class="pl-k">return</span> c},<span class="pl-en">removePlotBandOrLine</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotLinesAndBands</span>,</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userOptions</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)b[e].<span class="pl-c1">id</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>b[e].<span class="pl-en">destroy</span>();<span class="pl-en">q</span>([<span class="pl-smi">c</span>.<span class="pl-smi">plotLines</span><span class="pl-k">||</span>[],<span class="pl-smi">d</span>.<span class="pl-smi">plotLines</span><span class="pl-k">||</span>[],<span class="pl-smi">c</span>.<span class="pl-smi">plotBands</span><span class="pl-k">||</span>[],<span class="pl-smi">d</span>.<span class="pl-smi">plotBands</span><span class="pl-k">||</span>[]],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)b[e].<span class="pl-c1">id</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-en">ma</span>(b,b[e])})}});<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getTimeTicks</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>{},g<span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-smi">global</span>.<span class="pl-smi">useUTC</span>,h,i<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(b<span class="pl-k">-</span>La),k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">unitRange</span>,j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">count</span>;<span class="pl-k">if</span>(<span class="pl-en">r</span>(b)){k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">second</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">i</span>.<span class="pl-c1">setMilliseconds</span>(<span class="pl-c1">0</span>),<span class="pl-smi">i</span>.<span class="pl-c1">setSeconds</span>(k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">minute</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>j<span class="pl-k">*</span><span class="pl-en">T</span>(<span class="pl-smi">i</span>.<span class="pl-c1">getSeconds</span>()<span class="pl-k">/</span>j)));<span class="pl-k">if</span>(k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">minute</span>)i[Mb](k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">hour</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>j<span class="pl-k">*</span><span class="pl-en">T</span>(i[ub]()<span class="pl-k">/</span>j));<span class="pl-k">if</span>(k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">hour</span>)i[Nb](k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">day</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>j<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class="pl-en">T</span>(i[vb]()<span class="pl-k">/</span>j));<span class="pl-k">if</span>(k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">day</span>)i[xb](k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">month</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>j<span class="pl-k">*</span><span class="pl-en">T</span>(i[Va]()<span class="pl-k">/</span>j));k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">month</span><span class="pl-k">&amp;&amp;</span>(i[Ob](k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">year</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>j<span class="pl-k">*</span><span class="pl-en">T</span>(i[jb]()<span class="pl-k">/</span>j)),h<span class="pl-k">=</span>i[kb]());k<span class="pl-k">&gt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">year</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">-=</span>h<span class="pl-k">%</span>j,i[Pb](h));<span class="pl-k">if</span>(k<span class="pl-k">===</span><span class="pl-c1">A</span>.<span class="pl-smi">week</span>)i[xb](i[Va]()<span class="pl-k">-</span>i[wb]()<span class="pl-k">+</span><span class="pl-en">n</span>(d,<span class="pl-c1">1</span>));b<span class="pl-k">=</span><span class="pl-c1">1</span>;La<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-smi">i</span>.<span class="pl-c1">getTime</span>()<span class="pl-k">+</span>La));h<span class="pl-k">=</span>i[kb]();<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">getTime</span>(),l<span class="pl-k">=</span>i[jb](),m<span class="pl-k">=</span>i[Va](),o<span class="pl-k">=</span>g<span class="pl-k">?</span>La<span class="pl-k">:</span>(<span class="pl-c1">864E5</span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-c1">getTimezoneOffset</span>()<span class="pl-k">*</span><span class="pl-c1">6E4</span>)<span class="pl-k">%</span><span class="pl-c1">864E5</span>;d<span class="pl-k">&lt;</span>c;)<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(d),k<span class="pl-k">===</span><span class="pl-c1">A</span>.<span class="pl-smi">year</span><span class="pl-k">?</span>d<span class="pl-k">=</span><span class="pl-en">ib</span>(h<span class="pl-k">+</span>b<span class="pl-k">*</span>j,<span class="pl-c1">0</span>)<span class="pl-k">:</span>k<span class="pl-k">===</span><span class="pl-c1">A</span>.<span class="pl-smi">month</span><span class="pl-k">?</span>d<span class="pl-k">=</span><span class="pl-en">ib</span>(h,l<span class="pl-k">+</span>b<span class="pl-k">*</span>j)<span class="pl-k">:</span><span class="pl-k">!</span>g<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">===</span><span class="pl-c1">A</span>.<span class="pl-smi">day</span><span class="pl-k">||</span>k<span class="pl-k">===</span><span class="pl-c1">A</span>.<span class="pl-smi">week</span>)<span class="pl-k">?</span>d<span class="pl-k">=</span><span class="pl-en">ib</span>(h,l,m<span class="pl-k">+</span>b<span class="pl-k">*</span>j<span class="pl-k">*</span>(k<span class="pl-k">===</span><span class="pl-c1">A</span>.<span class="pl-smi">day</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">7</span>))<span class="pl-k">:</span>d<span class="pl-k">+=</span>k<span class="pl-k">*</span>j,b<span class="pl-k">++</span>;<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(d);<span class="pl-en">q</span>(<span class="pl-en">Cb</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> k<span class="pl-k">&lt;=</span></td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">A</span>.<span class="pl-smi">hour</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">%</span><span class="pl-c1">A</span>.<span class="pl-smi">day</span><span class="pl-k">===</span>o}),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){f[a]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>day<span class="pl-pds">&quot;</span></span>})}<span class="pl-smi">e</span>.<span class="pl-smi">info</span><span class="pl-k">=</span><span class="pl-en">u</span>(a,{higherRanks<span class="pl-k">:</span>f,totalRange<span class="pl-k">:</span>k<span class="pl-k">*</span>j});<span class="pl-k">return</span> e};<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">normalizeTimeTickInterval</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b<span class="pl-k">||</span>[[<span class="pl-s"><span class="pl-pds">&quot;</span>millisecond<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>,<span class="pl-c1">20</span>,<span class="pl-c1">25</span>,<span class="pl-c1">50</span>,<span class="pl-c1">100</span>,<span class="pl-c1">200</span>,<span class="pl-c1">500</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>second<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>,<span class="pl-c1">15</span>,<span class="pl-c1">30</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>minute<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>,<span class="pl-c1">15</span>,<span class="pl-c1">30</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>hour<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>,<span class="pl-c1">8</span>,<span class="pl-c1">12</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>day<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>week<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>]],d<span class="pl-k">=</span>c[<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],e<span class="pl-k">=</span><span class="pl-c1">A</span>[d[<span class="pl-c1">0</span>]],f<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],g;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>)<span class="pl-k">if</span>(d<span class="pl-k">=</span>c[g],e<span class="pl-k">=</span><span class="pl-c1">A</span>[d[<span class="pl-c1">0</span>]],f<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],c[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span>(e<span class="pl-k">*</span>f[<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">A</span>[c[g<span class="pl-k">+</span><span class="pl-c1">1</span>][<span class="pl-c1">0</span>]])<span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">break</span>;e<span class="pl-k">===</span><span class="pl-c1">A</span>.<span class="pl-smi">year</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">&lt;</span><span class="pl-c1">5</span><span class="pl-k">*</span>e<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>]);c<span class="pl-k">=</span><span class="pl-en">sb</span>(a<span class="pl-k">/</span>e,f,d[<span class="pl-c1">0</span>]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-en">v</span>(<span class="pl-en">rb</span>(a<span class="pl-k">/</span>e),<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">1</span>);<span class="pl-k">return</span>{unitRange<span class="pl-k">:</span>e,count<span class="pl-k">:</span>c,unitName<span class="pl-k">:</span>d[<span class="pl-c1">0</span>]}};<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getLogTickPositions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">len</span>,g<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-c1">this</span>.<span class="pl-smi">_minorAutoInterval</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(a<span class="pl-k">&gt;=</span><span class="pl-c1">0.5</span>)a<span class="pl-k">=</span><span class="pl-en">t</span>(a),g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getLinearTickPositions</span>(a,b,c);<span class="pl-k">else</span> <span class="pl-k">if</span>(a<span class="pl-k">&gt;=</span><span class="pl-c1">0.08</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-en">T</span>(b),h,i,k,j,l,e<span class="pl-k">=</span>a<span class="pl-k">&gt;</span><span class="pl-c1">0.3</span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>]<span class="pl-k">:</span>a<span class="pl-k">&gt;</span><span class="pl-c1">0.15</span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>,<span class="pl-c1">8</span>]<span class="pl-k">:</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,<span class="pl-c1">9</span>];f<span class="pl-k">&lt;</span>c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span>l;f<span class="pl-k">++</span>){i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>i<span class="pl-k">&amp;&amp;!</span>l;h<span class="pl-k">++</span>)k<span class="pl-k">=</span><span class="pl-en">Ga</span>(<span class="pl-en">la</span>(f)<span class="pl-k">*</span>e[h]),k<span class="pl-k">&gt;</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>d<span class="pl-k">||</span>j<span class="pl-k">&lt;=</span>c)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">push</span>(j),j<span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),j<span class="pl-k">=</span>k}<span class="pl-k">else</span> <span class="pl-k">if</span>(b<span class="pl-k">=</span><span class="pl-en">la</span>(b),c<span class="pl-k">=</span><span class="pl-en">la</span>(c),</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span>e[d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>minorTickInterval<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tickInterval<span class="pl-pds">&quot;</span></span>],a<span class="pl-k">=</span><span class="pl-en">n</span>(a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span>a,<span class="pl-c1">this</span>.<span class="pl-smi">_minorAutoInterval</span>,(c<span class="pl-k">-</span>b)<span class="pl-k">*</span>(<span class="pl-smi">e</span>.<span class="pl-smi">tickPixelInterval</span><span class="pl-k">/</span>(d<span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">1</span>))<span class="pl-k">/</span>((d<span class="pl-k">?</span>f<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">tickPositions</span>.<span class="pl-c1">length</span><span class="pl-k">:</span>f)<span class="pl-k">||</span><span class="pl-c1">1</span>)),a<span class="pl-k">=</span><span class="pl-en">sb</span>(a,<span class="pl-c1">null</span>,<span class="pl-en">rb</span>(a)),g<span class="pl-k">=</span><span class="pl-en">va</span>(<span class="pl-c1">this</span>.<span class="pl-en">getLinearTickPositions</span>(a,b,c),Ga),<span class="pl-k">!</span>d)<span class="pl-c1">this</span>.<span class="pl-smi">_minorAutoInterval</span><span class="pl-k">=</span>a<span class="pl-k">/</span><span class="pl-c1">5</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-c1">this</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> g};<span class="pl-k">var</span> Gb<span class="pl-k">=</span><span class="pl-c1">Q</span>.<span class="pl-en">Tooltip</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">Gb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">borderWidth</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>,e<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-smi">d</span>.<span class="pl-smi">padding</span>);<span class="pl-c1">this</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">crosshairs</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">now</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-smi">isHidden</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">label</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">label</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-c1">shape</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-smi">b</span>.<span class="pl-smi">useHTML</span>,<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tooltip<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({padding<span class="pl-k">:</span>e,fill<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">backgroundColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c,r<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">borderRadius</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">8</span>}).<span class="pl-en">css</span>(d).<span class="pl-en">css</span>({padding<span class="pl-k">:</span><span class="pl-c1">0</span>}).<span class="pl-c1">add</span>().<span class="pl-en">attr</span>({y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">9999</span>});ga<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>.<span class="pl-en">shadow</span>(<span class="pl-smi">b</span>.<span class="pl-smi">shadow</span>);<span class="pl-c1">this</span>.<span class="pl-smi">shared</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">shared</span>},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">label</span>)<span class="pl-c1">this</span>.<span class="pl-c1">label</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>.<span class="pl-en">destroy</span>();<span class="pl-c1">clearTimeout</span>(<span class="pl-c1">this</span>.<span class="pl-smi">hideTimer</span>);<span class="pl-c1">clearTimeout</span>(<span class="pl-c1">this</span>.<span class="pl-smi">tooltipTimeout</span>)},<span class="pl-en">move</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">now</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-smi">animation</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">isHidden</span>;<span class="pl-en">u</span>(f,{x<span class="pl-k">:</span>g<span class="pl-k">?</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>a)<span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">:</span>a,y<span class="pl-k">:</span>g<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>b)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span>b,anchorX<span class="pl-k">:</span>g<span class="pl-k">?</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">f</span>.<span class="pl-smi">anchorX</span><span class="pl-k">+</span>c)<span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">:</span>c,anchorY<span class="pl-k">:</span>g<span class="pl-k">?</span>(<span class="pl-smi">f</span>.<span class="pl-smi">anchorY</span><span class="pl-k">+</span>d)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span>d});<span class="pl-smi">e</span>.<span class="pl-c1">label</span>.<span class="pl-en">attr</span>(f);<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">O</span>(a<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>)<span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-en">O</span>(b<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>)<span class="pl-k">&gt;</span><span class="pl-c1">1</span>))<span class="pl-c1">clearTimeout</span>(<span class="pl-c1">this</span>.<span class="pl-smi">tooltipTimeout</span>),<span class="pl-c1">this</span>.<span class="pl-smi">tooltipTimeout</span><span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">move</span>(a,b,c,d)},<span class="pl-c1">32</span>)},<span class="pl-en">hide</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b;<span class="pl-c1">clearTimeout</span>(<span class="pl-c1">this</span>.<span class="pl-smi">hideTimer</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">isHidden</span>)b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">hoverPoints</span>,<span class="pl-c1">this</span>.<span class="pl-smi">hideTimer</span><span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-c1">label</span>.<span class="pl-en">fadeOut</span>();<span class="pl-smi">a</span>.<span class="pl-smi">isHidden</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">hideDelay</span>,<span class="pl-c1">500</span>)),b<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>()}),<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">hoverPoints</span><span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">getAnchor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">inverted</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotTop</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,i,a<span class="pl-k">=</span><span class="pl-en">ia</span>(a);c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">tooltipPos</span>;<span class="pl-c1">this</span>.<span class="pl-smi">followPointer</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">chartX</span><span class="pl-k">===</span>s<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">pointer</span>.<span class="pl-c1">normalize</span>(b)),c<span class="pl-k">=</span>[<span class="pl-smi">b</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">b</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span>f]);c<span class="pl-k">||</span>(<span class="pl-en">q</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-smi">yAxis</span>;g<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">plotX</span>;h<span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotLow</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotLow</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">plotHigh</span>)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotY</span>)<span class="pl-k">+</span>(<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-c1">top</span><span class="pl-k">-</span>f<span class="pl-k">:</span><span class="pl-c1">0</span>)}),g<span class="pl-k">/=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,h<span class="pl-k">/=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span>[e<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span>h<span class="pl-k">:</span>g,<span class="pl-c1">this</span>.<span class="pl-smi">shared</span><span class="pl-k">&amp;&amp;!</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span>f<span class="pl-k">:</span>e<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-</span>g<span class="pl-k">:</span>h]);<span class="pl-k">return</span> <span class="pl-en">va</span>(c,t)},<span class="pl-en">getPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotLeft</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotTop</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotWidth</span>,</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotHeight</span>,i<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">distance</span>,<span class="pl-c1">12</span>),k<span class="pl-k">=</span><span class="pl-c1">isNaN</span>(<span class="pl-smi">c</span>.<span class="pl-smi">plotX</span>)<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">plotX</span>,c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">plotY</span>,d<span class="pl-k">=</span>k<span class="pl-k">+</span>e<span class="pl-k">+</span>(<span class="pl-smi">d</span>.<span class="pl-smi">inverted</span><span class="pl-k">?</span>i<span class="pl-k">:</span><span class="pl-k">-</span>a<span class="pl-k">-</span>i),j<span class="pl-k">=</span>c<span class="pl-k">-</span>b<span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-c1">15</span>,l;d<span class="pl-k">&lt;</span><span class="pl-c1">7</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-en">v</span>(k,<span class="pl-c1">0</span>)<span class="pl-k">+</span>i);d<span class="pl-k">+</span>a<span class="pl-k">&gt;</span>e<span class="pl-k">+</span>g<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">-=</span>d<span class="pl-k">+</span>a<span class="pl-k">-</span>(e<span class="pl-k">+</span>g),j<span class="pl-k">=</span>c<span class="pl-k">-</span>b<span class="pl-k">+</span>f<span class="pl-k">-</span>i,l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);j<span class="pl-k">&lt;</span>f<span class="pl-k">+</span><span class="pl-c1">5</span><span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>f<span class="pl-k">+</span><span class="pl-c1">5</span>,l<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&gt;=</span>j<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;=</span>j<span class="pl-k">+</span>b<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>c<span class="pl-k">+</span>f<span class="pl-k">+</span>i));j<span class="pl-k">+</span>b<span class="pl-k">&gt;</span>f<span class="pl-k">+</span>h<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-en">v</span>(f,f<span class="pl-k">+</span>h<span class="pl-k">-</span>b<span class="pl-k">-</span>i));<span class="pl-k">return</span>{x<span class="pl-k">:</span>d,y<span class="pl-k">:</span>j}},<span class="pl-en">defaultFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span><span class="pl-k">||</span><span class="pl-en">ia</span>(<span class="pl-c1">this</span>),c<span class="pl-k">=</span>b[<span class="pl-c1">0</span>].<span class="pl-smi">series</span>,d;d<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">tooltipHeaderFormatter</span>(b[<span class="pl-c1">0</span>])];<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>;<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-smi">c</span>.<span class="pl-smi">tooltipFormatter</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">tooltipFormatter</span>(a)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">point</span>.<span class="pl-en">tooltipFormatter</span>(<span class="pl-smi">c</span>.<span class="pl-smi">tooltipOptions</span>.<span class="pl-smi">pointFormat</span>))});</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">footerFormat</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">refresh</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,f,g,h<span class="pl-k">=</span>{},i,k<span class="pl-k">=</span>[];i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">formatter</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">defaultFormatter</span>;<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hoverPoints</span>,j,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">shared</span>;<span class="pl-c1">clearTimeout</span>(<span class="pl-c1">this</span>.<span class="pl-smi">hideTimer</span>);<span class="pl-c1">this</span>.<span class="pl-smi">followPointer</span><span class="pl-k">=</span><span class="pl-en">ia</span>(a)[<span class="pl-c1">0</span>].<span class="pl-smi">series</span>.<span class="pl-smi">tooltipOptions</span>.<span class="pl-smi">followPointer</span>;g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getAnchor</span>(a,b);f<span class="pl-k">=</span>g[<span class="pl-c1">0</span>];g<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];l<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-smi">noSharedTooltip</span>)<span class="pl-k">?</span>(<span class="pl-smi">c</span>.<span class="pl-smi">hoverPoints</span><span class="pl-k">=</span>a,h<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(h,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>()}),<span class="pl-en">q</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">k</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-en">getLabelConfig</span>())}),h<span class="pl-k">=</span>{x<span class="pl-k">:</span>a[<span class="pl-c1">0</span>].<span class="pl-smi">category</span>,</td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line">y<span class="pl-k">:</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">y</span>},<span class="pl-smi">h</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>k,a<span class="pl-k">=</span>a[<span class="pl-c1">0</span>])<span class="pl-k">:</span>h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getLabelConfig</span>();i<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">call</span>(h,<span class="pl-c1">this</span>);h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>;i<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">hide</span>()<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">isHidden</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">eb</span>(d),<span class="pl-smi">d</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>).<span class="pl-en">show</span>()),<span class="pl-smi">d</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>i}),j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">borderColor</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>#606060<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span>j}),<span class="pl-c1">this</span>.<span class="pl-en">updatePosition</span>({plotX<span class="pl-k">:</span>f,plotY<span class="pl-k">:</span>g}),<span class="pl-c1">this</span>.<span class="pl-smi">isHidden</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">P</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>tooltipRefresh<span class="pl-pds">&quot;</span></span>,{text<span class="pl-k">:</span>i,x<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">plotLeft</span>,y<span class="pl-k">:</span>g<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">plotTop</span>,borderColor<span class="pl-k">:</span>j})},<span class="pl-en">updatePosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>,c<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">positioner</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">getPosition</span>).<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,<span class="pl-smi">c</span>.<span class="pl-c1">width</span>,<span class="pl-smi">c</span>.<span class="pl-c1">height</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">move</span>(<span class="pl-en">t</span>(<span class="pl-smi">c</span>.<span class="pl-c1">x</span>),</td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-en">t</span>(<span class="pl-smi">c</span>.<span class="pl-c1">y</span>),<span class="pl-smi">a</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotY</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>)},<span class="pl-en">tooltipHeaderFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltipOptions</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dateTimeLabelFormats</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">xDateFormat</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>,g<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">options</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>datetime<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">za</span>(<span class="pl-smi">a</span>.<span class="pl-smi">key</span>),c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">headerFormat</span>,f<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">closestPointRange</span>,h;<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;!</span>e){<span class="pl-k">if</span>(f)<span class="pl-k">for</span>(h <span class="pl-k">in</span> <span class="pl-c1">A</span>){<span class="pl-k">if</span>(<span class="pl-c1">A</span>[h]<span class="pl-k">&gt;=</span>f<span class="pl-k">||</span><span class="pl-c1">A</span>[h]<span class="pl-k">&lt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">day</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">key</span><span class="pl-k">%</span><span class="pl-c1">A</span>[h]<span class="pl-k">&gt;</span><span class="pl-c1">0</span>){e<span class="pl-k">=</span>d[h];<span class="pl-k">break</span>}}<span class="pl-k">else</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">day</span>;e<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-smi">year</span>}g<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>{point.key}<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>{point.key:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>));<span class="pl-k">return</span> <span class="pl-en">Ja</span>(c,{point<span class="pl-k">:</span>a,series<span class="pl-k">:</span>b})}};<span class="pl-k">var</span> ja;bb<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">documentElement</span>.<span class="pl-smi">ontouchstart</span><span class="pl-k">!==</span>s;<span class="pl-k">var</span> Ya<span class="pl-k">=</span><span class="pl-c1">Q</span>.<span class="pl-smi">Pointer</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">init</span>(a,b)};<span class="pl-smi">Ya</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">events</span>,e<span class="pl-k">=</span>ga<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">zoomType</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span>,f;<span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">zoomX</span><span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>x<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(e);<span class="pl-c1">this</span>.<span class="pl-smi">zoomY</span><span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>y<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(e);<span class="pl-c1">this</span>.<span class="pl-smi">zoomHor</span><span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">||</span>e<span class="pl-k">&amp;&amp;</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">zoomVert</span><span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">||</span>f<span class="pl-k">&amp;&amp;</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">runChartClick</span><span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;!!</span><span class="pl-smi">d</span>.<span class="pl-smi">click</span>;<span class="pl-c1">this</span>.<span class="pl-smi">pinchDown</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">lastValidTouch</span><span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-c1">Q</span>.<span class="pl-smi">Tooltip</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>.<span class="pl-smi">enabled</span>)<span class="pl-smi">a</span>.<span class="pl-smi">tooltip</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Gb</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>);<span class="pl-c1">this</span>.<span class="pl-en">setDOMEvents</span>()},<span class="pl-en">normalize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-c1">U</span>.<span class="pl-c1">event</span>,a<span class="pl-k">=</span><span class="pl-en">bc</span>(a);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">target</span>)<span class="pl-smi">a</span>.<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">srcElement</span>;d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>.<span class="pl-c1">item</span>(<span class="pl-c1">0</span>)<span class="pl-k">:</span>a;<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-c1">this</span>.<span class="pl-smi">chartPosition</span><span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-en">ac</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>);<span class="pl-smi">d</span>.<span class="pl-c1">pageX</span><span class="pl-k">===</span>s<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-smi">clientX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">left</span>),d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">pageX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">left</span>,d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">pageY</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">top</span>);<span class="pl-k">return</span> <span class="pl-en">u</span>(a,{chartX<span class="pl-k">:</span><span class="pl-en">t</span>(c),chartY<span class="pl-k">:</span><span class="pl-en">t</span>(d)})},<span class="pl-en">getCoordinates</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{xAxis<span class="pl-k">:</span>[],yAxis<span class="pl-k">:</span>[]};<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){b[<span class="pl-smi">c</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">push</span>({axis<span class="pl-k">:</span>c,value<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-en">toValue</span>(a[<span class="pl-smi">c</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>chartX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>chartY<span class="pl-pds">&quot;</span></span>])})});<span class="pl-k">return</span> b},<span class="pl-en">getIndex</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>;<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">inverted</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>},<span class="pl-en">runPointActions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>,e,f,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span>,i,k,j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chartWidth</span>,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getIndex</span>(a);<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tooltip</span>.<span class="pl-smi">shared</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>h<span class="pl-k">||!</span><span class="pl-smi">h</span>.<span class="pl-smi">noSharedTooltip</span>)){f<span class="pl-k">=</span>[];i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span>i;k<span class="pl-k">++</span>)<span class="pl-k">if</span>(c[k].<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>c[k].<span class="pl-c1">options</span>.<span class="pl-smi">enableMouseTracking</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span>c[k].<span class="pl-smi">noSharedTooltip</span><span class="pl-k">&amp;&amp;</span>c[k].<span class="pl-smi">singularTooltips</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>c[k].<span class="pl-smi">tooltipPoints</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>c[k].<span class="pl-smi">tooltipPoints</span>[l])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">series</span>)<span class="pl-smi">e</span>.<span class="pl-smi">_dist</span><span class="pl-k">=</span><span class="pl-en">O</span>(l<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">clientX</span>),j<span class="pl-k">=</span><span class="pl-en">x</span>(j,<span class="pl-smi">e</span>.<span class="pl-smi">_dist</span>),<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(e);<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;i<span class="pl-k">--</span>;)f[i].<span class="pl-smi">_dist</span><span class="pl-k">&gt;</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">splice</span>(i,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">0</span>].<span class="pl-smi">clientX</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">hoverX</span>)<span class="pl-smi">d</span>.<span class="pl-en">refresh</span>(f,</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line">a),<span class="pl-c1">this</span>.<span class="pl-smi">hoverX</span><span class="pl-k">=</span>f[<span class="pl-c1">0</span>].<span class="pl-smi">clientX</span>}<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">tracker</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>d<span class="pl-k">||!</span><span class="pl-smi">d</span>.<span class="pl-smi">followPointer</span>)){<span class="pl-k">if</span>((e<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">tooltipPoints</span>[l])<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span>g)<span class="pl-smi">e</span>.<span class="pl-en">onMouseOver</span>(a)}<span class="pl-k">else</span> d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">followPointer</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-smi">isHidden</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getAnchor</span>([{}],a),<span class="pl-smi">d</span>.<span class="pl-en">updatePosition</span>({plotX<span class="pl-k">:</span>c[<span class="pl-c1">0</span>],plotY<span class="pl-k">:</span>c[<span class="pl-c1">1</span>]}));<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">_onDocumentMouseMove</span>)<span class="pl-c1">this</span>.<span class="pl-en">_onDocumentMouseMove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-en">r</span>(ja))da[ja].<span class="pl-smi">pointer</span>.<span class="pl-en">onDocumentMouseMove</span>(a)},<span class="pl-en">D</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">_onDocumentMouseMove</span>);<span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-en">drawCrosshair</span>(a,<span class="pl-en">n</span>(e,g))})},<span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span>,</td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>,f<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">shared</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoints</span><span class="pl-k">:</span>d;(a<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>f)<span class="pl-k">&amp;&amp;</span><span class="pl-en">ia</span>(f)[<span class="pl-c1">0</span>].<span class="pl-smi">plotX</span><span class="pl-k">===</span>s<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(a)<span class="pl-smi">e</span>.<span class="pl-en">refresh</span>(f),d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">setState</span>(<span class="pl-smi">d</span>.<span class="pl-smi">state</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">else</span>{<span class="pl-k">if</span>(d)<span class="pl-smi">d</span>.<span class="pl-en">onMouseOut</span>();<span class="pl-k">if</span>(c)<span class="pl-smi">c</span>.<span class="pl-en">onMouseOut</span>();e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">hide</span>();<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_onDocumentMouseMove</span>)<span class="pl-en">S</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">_onDocumentMouseMove</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_onDocumentMouseMove</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">hideCrosshair</span>()});<span class="pl-c1">this</span>.<span class="pl-smi">hoverX</span><span class="pl-k">=</span><span class="pl-c1">null</span>}},<span class="pl-en">scaleGroups</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,d;<span class="pl-en">q</span>(<span class="pl-smi">c</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){d<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-en">getPlotBox</span>();<span class="pl-smi">e</span>.<span class="pl-smi">xAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">zoomEnabled</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">group</span>.<span class="pl-en">attr</span>(d),<span class="pl-smi">e</span>.<span class="pl-smi">markerGroup</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">markerGroup</span>.<span class="pl-en">attr</span>(d),</td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">markerGroup</span>.<span class="pl-c1">clip</span>(b<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">clipRect</span><span class="pl-k">:</span><span class="pl-c1">null</span>)),<span class="pl-smi">e</span>.<span class="pl-smi">dataLabelsGroup</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">dataLabelsGroup</span>.<span class="pl-en">attr</span>(d))});<span class="pl-smi">c</span>.<span class="pl-smi">clipRect</span>.<span class="pl-en">attr</span>(b<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">clipBox</span>)},<span class="pl-en">dragStart</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>;<span class="pl-smi">b</span>.<span class="pl-smi">mouseIsDown</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>;<span class="pl-smi">b</span>.<span class="pl-smi">cancelClick</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">mouseDownX</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mouseDownX</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span>;<span class="pl-smi">b</span>.<span class="pl-smi">mouseDownY</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mouseDownY</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span>},<span class="pl-en">drag</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">zoomHor</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">zoomVert</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>,k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span>,j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotHeight</span>,l,m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mouseDownX</span>,o<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mouseDownY</span>;d<span class="pl-k">&lt;</span>h<span class="pl-k">?</span>d<span class="pl-k">=</span>h<span class="pl-k">:</span>d<span class="pl-k">&gt;</span>h<span class="pl-k">+</span>k<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>h<span class="pl-k">+</span>k);e<span class="pl-k">&lt;</span>i<span class="pl-k">?</span>e<span class="pl-k">=</span>i<span class="pl-k">:</span>e<span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">+</span>j<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>i<span class="pl-k">+</span>j);<span class="pl-c1">this</span>.<span class="pl-smi">hasDragged</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(m<span class="pl-k">-</span>d,<span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(o<span class="pl-k">-</span>e,<span class="pl-c1">2</span>));<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">hasDragged</span><span class="pl-k">&gt;</span><span class="pl-c1">10</span>){l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(m<span class="pl-k">-</span>h,o<span class="pl-k">-</span>i);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">hasCartesianSeries</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">zoomX</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">zoomY</span>)<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span>)<span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">rect</span>(h,i,f<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>k,g<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>j,<span class="pl-c1">0</span>).<span class="pl-en">attr</span>({fill<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">selectionMarkerFill</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(69,114,167,0.25)<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>}).<span class="pl-c1">add</span>();<span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span><span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">-=</span>m,<span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span>.<span class="pl-en">attr</span>({width<span class="pl-k">:</span><span class="pl-en">O</span>(d),x<span class="pl-k">:</span>(d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d)<span class="pl-k">+</span>m}));<span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>e<span class="pl-k">-</span>o,<span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span>.<span class="pl-en">attr</span>({height<span class="pl-k">:</span><span class="pl-en">O</span>(d),y<span class="pl-k">:</span>(d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d)<span class="pl-k">+</span>o}));</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">panning</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">pan</span>(a,<span class="pl-smi">c</span>.<span class="pl-smi">panning</span>)}},<span class="pl-en">drop</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">hasPinched</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>{xAxis<span class="pl-k">:</span>[],yAxis<span class="pl-k">:</span>[],originalEvent<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">originalEvent</span><span class="pl-k">||</span>a},e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>,h;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">hasDragged</span><span class="pl-k">||</span>c)<span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">zoomEnabled</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">horiz</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">toValue</span>(b<span class="pl-k">?</span>f<span class="pl-k">:</span>g),b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">toValue</span>(b<span class="pl-k">?</span>f<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">width</span><span class="pl-k">:</span>g<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">height</span>);<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(c)<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(b)<span class="pl-k">&amp;&amp;</span>(d[<span class="pl-smi">a</span>.<span class="pl-smi">coll</span>].<span class="pl-c1">push</span>({axis<span class="pl-k">:</span>a,min<span class="pl-k">:</span><span class="pl-en">x</span>(c,b),max<span class="pl-k">:</span><span class="pl-en">v</span>(c,b)}),h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}}),h<span class="pl-k">&amp;&amp;</span><span class="pl-en">P</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>selection<span class="pl-pds">&quot;</span></span>,d,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-en">zoom</span>(<span class="pl-en">u</span>(a,c<span class="pl-k">?</span>{animation<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>))});<span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">selectionMarker</span>.<span class="pl-en">destroy</span>();c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">scaleGroups</span>()}<span class="pl-k">if</span>(b)<span class="pl-en">J</span>(<span class="pl-smi">b</span>.<span class="pl-smi">container</span>,{cursor<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">_cursor</span>}),<span class="pl-smi">b</span>.<span class="pl-smi">cancelClick</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">hasDragged</span><span class="pl-k">&gt;</span><span class="pl-c1">10</span>,<span class="pl-smi">b</span>.<span class="pl-smi">mouseIsDown</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">hasDragged</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">hasPinched</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">this</span>.<span class="pl-smi">pinchDown</span><span class="pl-k">=</span>[]},<span class="pl-en">onContainerMouseDown</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>(a);<span class="pl-smi">a</span>.<span class="pl-smi">preventDefault</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>();<span class="pl-c1">this</span>.<span class="pl-en">dragStart</span>(a)},<span class="pl-en">onDocumentMouseUp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">r</span>(ja)<span class="pl-k">&amp;&amp;</span>da[ja].<span class="pl-smi">pointer</span>.<span class="pl-en">drop</span>(a)},<span class="pl-en">onDocumentMouseMove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chartPosition</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span>,a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>(a,c);</td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-en">inClass</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">reset</span>()},<span class="pl-en">onContainerMouseLeave</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>da[ja];<span class="pl-k">if</span>(a)<span class="pl-smi">a</span>.<span class="pl-smi">pointer</span>.<span class="pl-c1">reset</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">pointer</span>.<span class="pl-smi">chartPosition</span><span class="pl-k">=</span><span class="pl-c1">null</span>;ja<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">onContainerMouseMove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>;ja<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">index</span>;a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>(a);<span class="pl-smi">b</span>.<span class="pl-smi">mouseIsDown</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">drag</span>(a);(<span class="pl-c1">this</span>.<span class="pl-en">inClass</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>))<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">openMenu</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">runPointActions</span>(a)},<span class="pl-en">inClass</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c;a;){<span class="pl-k">if</span>(c<span class="pl-k">=</span><span class="pl-en">I</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>))<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(b)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-container<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">parentNode</span>}},<span class="pl-en">onTrackerMouseOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">hoverSeries</span>,c<span class="pl-k">=</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">relatedTarget</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">toElement</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">point</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">point</span>.<span class="pl-smi">series</span>;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stickyTracking</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-en">inClass</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tooltip<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span>b)<span class="pl-smi">b</span>.<span class="pl-en">onMouseOut</span>()},<span class="pl-en">onContainerClick</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">inverted</span>,g,h,i,a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>(a);<span class="pl-smi">a</span>.<span class="pl-smi">cancelBubble</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">cancelClick</span>)c<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">inClass</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span>(g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chartPosition</span>,h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">plotX</span>,i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">plotY</span>,<span class="pl-en">u</span>(c,{pageX<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">left</span><span class="pl-k">+</span>d<span class="pl-k">+</span>(f<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span>i<span class="pl-k">:</span>h),pageY<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">top</span><span class="pl-k">+</span>e<span class="pl-k">+</span>(f<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-</span>h<span class="pl-k">:</span>i)}),<span class="pl-en">P</span>(<span class="pl-smi">c</span>.<span class="pl-smi">series</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-en">u</span>(a,{point<span class="pl-k">:</span>c})),<span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,a))<span class="pl-k">:</span>(<span class="pl-en">u</span>(a,<span class="pl-c1">this</span>.<span class="pl-en">getCoordinates</span>(a)),<span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span>d,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-en">P</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,a))},<span class="pl-en">setDOMEvents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>;<span class="pl-smi">b</span>.<span class="pl-en">onmousedown</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">onContainerMouseDown</span>(b)};<span class="pl-smi">b</span>.<span class="pl-en">onmousemove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">onContainerMouseMove</span>(b)};<span class="pl-smi">b</span>.<span class="pl-en">onclick</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">onContainerClick</span>(b)};</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line"><span class="pl-en">D</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">onContainerMouseLeave</span>);<span class="pl-en">D</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">onDocumentMouseUp</span>);<span class="pl-k">if</span>(bb)<span class="pl-smi">b</span>.<span class="pl-en">ontouchstart</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">onContainerTouchStart</span>(b)},<span class="pl-smi">b</span>.<span class="pl-en">ontouchmove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">onContainerTouchMove</span>(b)},<span class="pl-en">D</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">onDocumentTouchEnd</span>)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-en">S</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">onContainerMouseLeave</span>);<span class="pl-en">S</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">onDocumentMouseUp</span>);<span class="pl-en">S</span>(<span class="pl-c1">C</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">onDocumentTouchEnd</span>);<span class="pl-c1">clearInterval</span>(<span class="pl-c1">this</span>.<span class="pl-smi">tooltipTimeout</span>);<span class="pl-k">for</span>(a <span class="pl-k">in</span> <span class="pl-c1">this</span>)<span class="pl-c1">this</span>[a]<span class="pl-k">=</span><span class="pl-c1">null</span>}};<span class="pl-en">u</span>(<span class="pl-c1">Q</span>.<span class="pl-smi">Pointer</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">pinchTranslate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">pinchTranslateDirection</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,c,d,e,f,g,h);b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">pinchTranslateDirection</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,c,d,e,f,g,h)},<span class="pl-en">pinchTranslateDirection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,k<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,j<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>X<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Y<span class="pl-pds">&quot;</span></span>,l<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>chart<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j,m<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,o<span class="pl-k">=</span>i[<span class="pl-s"><span class="pl-pds">&quot;</span>plot<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>Left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Top<span class="pl-pds">&quot;</span></span>)],p,n,q<span class="pl-k">=</span>h<span class="pl-k">||</span><span class="pl-c1">1</span>,z<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">inverted</span>,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">bounds</span>[a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>v<span class="pl-pds">&quot;</span></span>],s<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">1</span>,t<span class="pl-k">=</span>b[<span class="pl-c1">0</span>][l],r<span class="pl-k">=</span>c[<span class="pl-c1">0</span>][l],v<span class="pl-k">=</span><span class="pl-k">!</span>s<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">1</span>][l],u<span class="pl-k">=</span><span class="pl-k">!</span>s<span class="pl-k">&amp;&amp;</span>c[<span class="pl-c1">1</span>][l],w,<span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">!</span>s<span class="pl-k">&amp;&amp;</span><span class="pl-en">O</span>(t<span class="pl-k">-</span>v)<span class="pl-k">&gt;</span><span class="pl-c1">20</span><span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span>h<span class="pl-k">||</span><span class="pl-en">O</span>(r<span class="pl-k">-</span>u)<span class="pl-k">/</span><span class="pl-en">O</span>(t<span class="pl-k">-</span>v));n<span class="pl-k">=</span>(o<span class="pl-k">-</span>r)<span class="pl-k">/</span>q<span class="pl-k">+</span>t;p<span class="pl-k">=</span>i[<span class="pl-s"><span class="pl-pds">&quot;</span>plot<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Height<span class="pl-pds">&quot;</span></span>)]<span class="pl-k">/</span>q};<span class="pl-en">c</span>();b<span class="pl-k">=</span>n;b<span class="pl-k">&lt;</span><span class="pl-c1">K</span>.<span class="pl-smi">min</span><span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-smi">min</span>,w<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">+</span>p<span class="pl-k">&gt;</span><span class="pl-c1">K</span>.<span class="pl-smi">max</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-smi">max</span><span class="pl-k">-</span>p,w<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);w<span class="pl-k">?</span>(r<span class="pl-k">-=</span><span class="pl-c1">0.8</span><span class="pl-k">*</span>(r<span class="pl-k">-</span>g[k][<span class="pl-c1">0</span>]),s<span class="pl-k">||</span>(u<span class="pl-k">-=</span><span class="pl-c1">0.8</span><span class="pl-k">*</span>(u<span class="pl-k">-</span>g[k][<span class="pl-c1">1</span>])),<span class="pl-en">c</span>())<span class="pl-k">:</span>g[k]<span class="pl-k">=</span>[r,u];z<span class="pl-k">||</span>(f[k]<span class="pl-k">=</span>n<span class="pl-k">-</span>o,f[m]<span class="pl-k">=</span>p);f<span class="pl-k">=</span>z<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span>q<span class="pl-k">:</span>q;e[m]<span class="pl-k">=</span>p;e[k]<span class="pl-k">=</span>b;d[z<span class="pl-k">?</span>a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>scaleY<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>scaleX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>scale<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j]<span class="pl-k">=</span>q;d[<span class="pl-s"><span class="pl-pds">&quot;</span>translate<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j]<span class="pl-k">=</span>f<span class="pl-k">*</span>o<span class="pl-k">+</span>(r<span class="pl-k">-</span>f<span class="pl-k">*</span>t)},<span class="pl-en">pinch</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pinchDown</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">tooltip</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">tooltip</span>.<span class="pl-c1">options</span>.<span class="pl-smi">followTouchMove</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">lastValidTouch</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">zoomHor</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">pinchHor</span>,k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">zoomVert</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">pinchVert</span>,j<span class="pl-k">=</span>i<span class="pl-k">||</span>k,l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">selectionMarker</span>,m<span class="pl-k">=</span>{},o<span class="pl-k">=</span>g<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-en">inClass</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">runTrackerClick</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">runChartClick</span>),</td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line">p<span class="pl-k">=</span>{};(j<span class="pl-k">||</span>e)<span class="pl-k">&amp;&amp;!</span>o<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>();<span class="pl-en">va</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">normalize</span>(a)});<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>)<span class="pl-en">q</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){d[b]<span class="pl-k">=</span>{chartX<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">chartX</span>,chartY<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">chartY</span>}}),<span class="pl-smi">h</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>[d[<span class="pl-c1">0</span>].<span class="pl-smi">chartX</span>,d[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>d[<span class="pl-c1">1</span>].<span class="pl-smi">chartX</span>],<span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>[d[<span class="pl-c1">0</span>].<span class="pl-smi">chartY</span>,d[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>d[<span class="pl-c1">1</span>].<span class="pl-smi">chartY</span>],<span class="pl-en">q</span>(<span class="pl-smi">c</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">zoomEnabled</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">bounds</span>[<span class="pl-smi">a</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>v<span class="pl-pds">&quot;</span></span>],d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">minPixelPadding</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span>),f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataMax</span>),g<span class="pl-k">=</span><span class="pl-en">x</span>(e,f),e<span class="pl-k">=</span><span class="pl-en">v</span>(e,f);<span class="pl-smi">b</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-en">x</span>(<span class="pl-smi">a</span>.<span class="pl-smi">pos</span>,g<span class="pl-k">-</span>d);<span class="pl-smi">b</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-smi">a</span>.<span class="pl-smi">pos</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">len</span>,e<span class="pl-k">+</span>d)}});<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">length</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>l)<span class="pl-smi">b</span>.<span class="pl-smi">selectionMarker</span><span class="pl-k">=</span>l<span class="pl-k">=</span><span class="pl-en">u</span>({destroy<span class="pl-k">:</span>ta},<span class="pl-smi">c</span>.<span class="pl-smi">plotBox</span>);</td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">pinchTranslate</span>(i,k,d,f,m,l,p,h);<span class="pl-smi">b</span>.<span class="pl-smi">hasPinched</span><span class="pl-k">=</span>j;<span class="pl-smi">b</span>.<span class="pl-en">scaleGroups</span>(m,p);<span class="pl-k">!</span>j<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">runPointActions</span>(<span class="pl-smi">b</span>.<span class="pl-c1">normalize</span>(a))}},<span class="pl-en">onContainerTouchStart</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>;ja<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">index</span>;<span class="pl-smi">a</span>.<span class="pl-smi">touches</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>(a),<span class="pl-smi">b</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chartX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">a</span>.<span class="pl-smi">chartY</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotTop</span>)<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-en">runPointActions</span>(a),<span class="pl-c1">this</span>.<span class="pl-en">pinch</span>(a))<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">reset</span>())<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">pinch</span>(a)},<span class="pl-en">onContainerTouchMove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){(<span class="pl-smi">a</span>.<span class="pl-smi">touches</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">2</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">pinch</span>(a)},<span class="pl-en">onDocumentTouchEnd</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">r</span>(ja)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line">da[ja].<span class="pl-smi">pointer</span>.<span class="pl-en">drop</span>(a)}});<span class="pl-k">if</span>(<span class="pl-c1">U</span>.<span class="pl-smi">PointerEvent</span><span class="pl-k">||</span><span class="pl-c1">U</span>.<span class="pl-smi">MSPointerEvent</span>){<span class="pl-k">var</span> wa<span class="pl-k">=</span>{},Hb<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-c1">U</span>.<span class="pl-smi">PointerEvent</span>,<span class="pl-en">fc</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span>[];<span class="pl-smi">b</span>.<span class="pl-en">item</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>[a]};<span class="pl-k">for</span>(a <span class="pl-k">in</span> wa)<span class="pl-smi">wa</span>.<span class="pl-en">hasOwnProperty</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>({pageX<span class="pl-k">:</span>wa[a].<span class="pl-c1">pageX</span>,pageY<span class="pl-k">:</span>wa[a].<span class="pl-c1">pageY</span>,target<span class="pl-k">:</span>wa[a].<span class="pl-c1">target</span>});<span class="pl-k">return</span> b},<span class="pl-en">Ib</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">originalEvent</span><span class="pl-k">||</span>a;<span class="pl-k">if</span>((<span class="pl-smi">a</span>.<span class="pl-smi">pointerType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>touch<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">pointerType</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">MSPOINTER_TYPE_TOUCH</span>)<span class="pl-k">&amp;&amp;</span>da[ja])<span class="pl-en">d</span>(a),d<span class="pl-k">=</span>da[ja].<span class="pl-smi">pointer</span>,d[b]({type<span class="pl-k">:</span>c,target<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">currentTarget</span>,preventDefault<span class="pl-k">:</span>ta,touches<span class="pl-k">:</span><span class="pl-en">fc</span>()})};<span class="pl-en">u</span>(<span class="pl-smi">Ya</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">onContainerPointerDown</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">Ib</span>(a,</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>onContainerTouchStart<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){wa[<span class="pl-smi">a</span>.<span class="pl-smi">pointerId</span>]<span class="pl-k">=</span>{pageX<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">pageX</span>,pageY<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">pageY</span>,target<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">currentTarget</span>}})},<span class="pl-en">onContainerPointerMove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">Ib</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>onContainerTouchMove<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchmove<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){wa[<span class="pl-smi">a</span>.<span class="pl-smi">pointerId</span>]<span class="pl-k">=</span>{pageX<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">pageX</span>,pageY<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">pageY</span>};<span class="pl-k">if</span>(<span class="pl-k">!</span>wa[<span class="pl-smi">a</span>.<span class="pl-smi">pointerId</span>].<span class="pl-c1">target</span>)wa[<span class="pl-smi">a</span>.<span class="pl-smi">pointerId</span>].<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">currentTarget</span>})},<span class="pl-en">onDocumentPointerUp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">Ib</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>onContainerTouchEnd<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">delete</span> wa[<span class="pl-smi">a</span>.<span class="pl-smi">pointerId</span>]})},<span class="pl-en">batchMSEvents</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">a</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>,Hb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointerdown<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>MSPointerDown<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">onContainerPointerDown</span>);<span class="pl-en">a</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>,Hb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointermove<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>MSPointerMove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">onContainerPointerMove</span>);<span class="pl-en">a</span>(<span class="pl-c1">C</span>,Hb<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointerup<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>MSPointerUp<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">onDocumentPointerUp</span>)}});<span class="pl-en">R</span>(<span class="pl-smi">Ya</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">J</span>(<span class="pl-smi">b</span>.<span class="pl-smi">container</span>,{<span class="pl-s"><span class="pl-pds">&quot;</span>-ms-touch-action<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">X</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touch-action<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">X</span>});<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,c)});<span class="pl-en">R</span>(<span class="pl-smi">Ya</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>setDOMEvents<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-en">batchMSEvents</span>(<span class="pl-c1">D</span>)});<span class="pl-en">R</span>(<span class="pl-smi">Ya</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">batchMSEvents</span>(<span class="pl-c1">S</span>);<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>)})}<span class="pl-k">var</span> pb<span class="pl-k">=</span><span class="pl-c1">Q</span>.<span class="pl-en">Legend</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">init</span>(a,b)};<span class="pl-smi">pb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">itemStyle</span>,e<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">padding</span>,<span class="pl-c1">8</span>),f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">itemMarginTop</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>b;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">enabled</span>)<span class="pl-smi">c</span>.<span class="pl-smi">baseline</span><span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-smi">d</span>.<span class="pl-c1">fontSize</span>)<span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">+</span>f,<span class="pl-smi">c</span>.<span class="pl-smi">itemStyle</span><span class="pl-k">=</span>d,<span class="pl-smi">c</span>.<span class="pl-smi">itemHiddenStyle</span><span class="pl-k">=</span><span class="pl-en">w</span>(d,<span class="pl-smi">b</span>.<span class="pl-smi">itemHiddenStyle</span>),<span class="pl-smi">c</span>.<span class="pl-smi">itemMarginTop</span><span class="pl-k">=</span>f,<span class="pl-smi">c</span>.<span class="pl-smi">padding</span><span class="pl-k">=</span>e,<span class="pl-smi">c</span>.<span class="pl-smi">initialItemX</span><span class="pl-k">=</span>e,<span class="pl-smi">c</span>.<span class="pl-smi">initialItemY</span><span class="pl-k">=</span>e<span class="pl-k">-</span><span class="pl-c1">5</span>,<span class="pl-smi">c</span>.<span class="pl-smi">maxItemWidth</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a,<span class="pl-smi">c</span>.<span class="pl-smi">itemHeight</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-smi">symbolWidth</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">symbolWidth</span>,<span class="pl-c1">16</span>),<span class="pl-smi">c</span>.<span class="pl-smi">pages</span><span class="pl-k">=</span>[],<span class="pl-smi">c</span>.<span class="pl-en">render</span>(),<span class="pl-en">D</span>(<span class="pl-smi">c</span>.<span class="pl-smi">chart</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>endResize<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">c</span>.<span class="pl-en">positionCheckboxes</span>()})},<span class="pl-en">colorizeItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">legendLine</span>,</td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">legendSymbol</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">itemHiddenStyle</span>.<span class="pl-c1">color</span>,c<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">itemStyle</span>.<span class="pl-c1">color</span><span class="pl-k">:</span>g,h<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">legendColor</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>g,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span>,i<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>h,fill<span class="pl-k">:</span>h},k;d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">css</span>({fill<span class="pl-k">:</span>c,color<span class="pl-k">:</span>c});e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span>h});<span class="pl-k">if</span>(f){<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">isMarker</span>)<span class="pl-k">for</span>(k <span class="pl-k">in</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(g),g)d<span class="pl-k">=</span>g[k],d<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(i[k]<span class="pl-k">=</span>d);<span class="pl-smi">f</span>.<span class="pl-en">attr</span>(i)}},<span class="pl-en">positionItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">symbolPadding</span>,b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">rtl</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_legendItemPos</span>,e<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],d<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">checkbox</span>;<span class="pl-smi">a</span>.<span class="pl-smi">legendGroup</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">legendGroup</span>.<span class="pl-en">translate</span>(b<span class="pl-k">?</span>e<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">legendWidth</span><span class="pl-k">-</span>e<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">-</span><span class="pl-c1">4</span>,d);<span class="pl-k">if</span>(f)<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>e,<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line">d},<span class="pl-en">destroyItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">checkbox</span>;<span class="pl-en">q</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>legendItem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>legendLine<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>legendSymbol<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>legendGroup<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){a[b]<span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">=</span>a[b].<span class="pl-en">destroy</span>())});b<span class="pl-k">&amp;&amp;</span><span class="pl-en">Ta</span>(<span class="pl-smi">a</span>.<span class="pl-smi">checkbox</span>)},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">group</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">box</span>;<span class="pl-k">if</span>(b)<span class="pl-c1">this</span>.<span class="pl-smi">box</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">destroy</span>();<span class="pl-k">if</span>(a)<span class="pl-c1">this</span>.<span class="pl-smi">group</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">destroy</span>()},<span class="pl-en">positionCheckboxes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">group</span>.<span class="pl-smi">alignAttr</span>,c,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">clipHeight</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">legendHeight</span>;<span class="pl-k">if</span>(b)c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">translateY</span>,<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">allItems</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">checkbox</span>,g;f<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>(a<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">3</span>,<span class="pl-en">J</span>(f,{left<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">translateX</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">legendItemWidth</span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">20</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line">top<span class="pl-k">:</span>g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,display<span class="pl-k">:</span>g<span class="pl-k">&gt;</span>c<span class="pl-k">-</span><span class="pl-c1">6</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&lt;</span>c<span class="pl-k">+</span>d<span class="pl-k">-</span><span class="pl-c1">6</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">X</span>}))})},<span class="pl-en">renderTitle</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">padding</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">title</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">text</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-c1">title</span>)<span class="pl-c1">this</span>.<span class="pl-c1">title</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">label</span>(<span class="pl-smi">b</span>.<span class="pl-c1">text</span>,a<span class="pl-k">-</span><span class="pl-c1">3</span>,a<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>legend-title<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-en">css</span>(<span class="pl-smi">b</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">group</span>);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">title</span>.<span class="pl-en">getBBox</span>();c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>;<span class="pl-c1">this</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>;<span class="pl-c1">this</span>.<span class="pl-smi">contentGroup</span>.<span class="pl-en">attr</span>({translateY<span class="pl-k">:</span>c})}<span class="pl-c1">this</span>.<span class="pl-smi">titleHeight</span><span class="pl-k">=</span>c},<span class="pl-en">renderItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">layout</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">symbolWidth</span>,</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">symbolPadding</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">itemStyle</span>,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">itemHiddenStyle</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">padding</span>,j<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-smi">itemDistance</span>,<span class="pl-c1">8</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-smi">rtl</span>,m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span>,o<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">itemMarginBottom</span><span class="pl-k">||</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">itemMarginTop</span>,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">initialItemX</span>,q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span>,z<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-smi">drawLegendSymbol</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">:</span>a,s<span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-c1">options</span>,s<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">createCheckboxForItem</span><span class="pl-k">&amp;&amp;</span>s<span class="pl-k">&amp;&amp;</span><span class="pl-smi">s</span>.<span class="pl-smi">showCheckbox</span>,r<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">useHTML</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>q)<span class="pl-smi">a</span>.<span class="pl-smi">legendGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>legend-item<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">scrollGroup</span>),<span class="pl-smi">z</span>.<span class="pl-en">drawLegendSymbol</span>(<span class="pl-c1">this</span>,a),<span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span><span class="pl-k">=</span>q<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">text</span>(<span class="pl-smi">d</span>.<span class="pl-smi">labelFormat</span><span class="pl-k">?</span><span class="pl-en">Ja</span>(<span class="pl-smi">d</span>.<span class="pl-smi">labelFormat</span>,a)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">labelFormatter</span>.<span class="pl-c1">call</span>(a),</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">?</span>f<span class="pl-k">+</span>g<span class="pl-k">:</span><span class="pl-k">-</span>g,<span class="pl-c1">this</span>.<span class="pl-smi">baseline</span>,r).<span class="pl-en">css</span>(<span class="pl-en">w</span>(<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">?</span>h<span class="pl-k">:</span>i)).<span class="pl-en">attr</span>({align<span class="pl-k">:</span>l<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">2</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">legendGroup</span>),<span class="pl-c1">this</span>.<span class="pl-smi">setItemEvents</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">setItemEvents</span>(a,q,r,h,i),<span class="pl-c1">this</span>.<span class="pl-en">colorizeItem</span>(a,<span class="pl-smi">a</span>.<span class="pl-smi">visible</span>),s<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">createCheckboxForItem</span>(a);c<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">getBBox</span>();f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">legendItemWidth</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">itemWidth</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">legendItemWidth</span><span class="pl-k">||</span>f<span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">+</span>j<span class="pl-k">+</span>(s<span class="pl-k">?</span><span class="pl-c1">20</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">itemHeight</span><span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">a</span>.<span class="pl-smi">legendItemHeight</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">height</span>);<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">itemX</span><span class="pl-k">-</span><span class="pl-c1">B</span><span class="pl-k">+</span>f<span class="pl-k">&gt;</span>(m<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>k<span class="pl-k">-</span><span class="pl-c1">B</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span>))<span class="pl-c1">this</span>.<span class="pl-smi">itemX</span><span class="pl-k">=</span><span class="pl-c1">B</span>,<span class="pl-c1">this</span>.<span class="pl-smi">itemY</span><span class="pl-k">+=</span>p<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">+</span>o,<span class="pl-c1">this</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">maxItemWidth</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">maxItemWidth</span>,</td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line">f);<span class="pl-c1">this</span>.<span class="pl-smi">lastItemY</span><span class="pl-k">=</span>p<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">itemY</span><span class="pl-k">+</span>o;<span class="pl-c1">this</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">=</span><span class="pl-en">v</span>(g,<span class="pl-c1">this</span>.<span class="pl-smi">lastLineHeight</span>);<span class="pl-smi">a</span>.<span class="pl-smi">_legendItemPos</span><span class="pl-k">=</span>[<span class="pl-c1">this</span>.<span class="pl-smi">itemX</span>,<span class="pl-c1">this</span>.<span class="pl-smi">itemY</span>];e<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">itemX</span><span class="pl-k">+=</span>f<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">itemY</span><span class="pl-k">+=</span>p<span class="pl-k">+</span>g<span class="pl-k">+</span>o,<span class="pl-c1">this</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">=</span>g);<span class="pl-c1">this</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">=</span>m<span class="pl-k">||</span><span class="pl-en">v</span>((e<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">itemX</span><span class="pl-k">-</span><span class="pl-c1">B</span><span class="pl-k">-</span>j<span class="pl-k">:</span>f)<span class="pl-k">+</span>k,<span class="pl-c1">this</span>.<span class="pl-smi">offsetWidth</span>)},<span class="pl-en">getAllItems</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[];<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>;<span class="pl-k">if</span>(<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">showInLegend</span>,<span class="pl-k">!</span><span class="pl-en">r</span>(<span class="pl-smi">c</span>.<span class="pl-smi">linkedTo</span>)<span class="pl-k">?</span>s<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>))a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">b</span>.<span class="pl-smi">legendItems</span><span class="pl-k">||</span>(<span class="pl-smi">c</span>.<span class="pl-smi">legendType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">data</span><span class="pl-k">:</span>b))});<span class="pl-k">return</span> a},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">group</span>,e,</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line">f,g,h,i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">box</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">padding</span>,l<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">borderWidth</span>,m<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">backgroundColor</span>;<span class="pl-smi">a</span>.<span class="pl-smi">itemX</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">initialItemX</span>;<span class="pl-smi">a</span>.<span class="pl-smi">itemY</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">initialItemY</span>;<span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">lastItemY</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-smi">a</span>.<span class="pl-smi">group</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>legend<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>}).<span class="pl-c1">add</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">contentGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>().<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(d),<span class="pl-smi">a</span>.<span class="pl-smi">scrollGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>().<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">contentGroup</span>);<span class="pl-smi">a</span>.<span class="pl-en">renderTitle</span>();e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getAllItems</span>();<span class="pl-en">tb</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">legendIndex</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">-</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">legendIndex</span><span class="pl-k">||</span><span class="pl-c1">0</span>)});<span class="pl-smi">k</span>.<span class="pl-smi">reversed</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">reverse</span>();<span class="pl-smi">a</span>.<span class="pl-smi">allItems</span><span class="pl-k">=</span>e;<span class="pl-smi">a</span>.<span class="pl-c1">display</span><span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;<span class="pl-en">q</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">renderItem</span>(b)});</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span>;h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lastItemY</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">lastLineHeight</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">titleHeight</span>;h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">handleOverflow</span>(h);<span class="pl-k">if</span>(l<span class="pl-k">||</span>m){g<span class="pl-k">+=</span>j;h<span class="pl-k">+=</span>j;<span class="pl-k">if</span>(i){<span class="pl-k">if</span>(g<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span><span class="pl-c1">0</span>)i[<span class="pl-smi">i</span>.<span class="pl-smi">isNew</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](<span class="pl-smi">i</span>.<span class="pl-en">crisp</span>({width<span class="pl-k">:</span>g,height<span class="pl-k">:</span>h})),<span class="pl-smi">i</span>.<span class="pl-smi">isNew</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-smi">box</span><span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">rect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,g,h,<span class="pl-smi">k</span>.<span class="pl-smi">borderRadius</span>,l<span class="pl-k">||</span><span class="pl-c1">0</span>).<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">borderColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>l<span class="pl-k">||</span><span class="pl-c1">0</span>,fill<span class="pl-k">:</span>m<span class="pl-k">||</span><span class="pl-c1">X</span>}).<span class="pl-c1">add</span>(d).<span class="pl-en">shadow</span>(<span class="pl-smi">k</span>.<span class="pl-smi">shadow</span>),<span class="pl-smi">i</span>.<span class="pl-smi">isNew</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;i[f<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>]()}<span class="pl-smi">a</span>.<span class="pl-smi">legendWidth</span><span class="pl-k">=</span>g;<span class="pl-smi">a</span>.<span class="pl-smi">legendHeight</span><span class="pl-k">=</span>h;<span class="pl-en">q</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">positionItem</span>(b)});f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">align</span>(<span class="pl-en">u</span>({width<span class="pl-k">:</span>g,height<span class="pl-k">:</span>h},k),<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>spacingBox<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-smi">isResizing</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">positionCheckboxes</span>()},</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line"><span class="pl-en">handleOverflow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">spacingBox</span>.<span class="pl-c1">height</span><span class="pl-k">+</span>(<span class="pl-smi">e</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-k">-</span>f<span class="pl-k">:</span>f)<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">padding</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">maxHeight</span>,h,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">clipRect</span>,k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">navigation</span>,j<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">k</span>.<span class="pl-smi">animation</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),l<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">arrowSize</span><span class="pl-k">||</span><span class="pl-c1">12</span>,m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">nav</span>,o<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pages</span>,p,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">allItems</span>;<span class="pl-smi">e</span>.<span class="pl-smi">layout</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">/=</span><span class="pl-c1">2</span>);g<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-en">x</span>(f,g));<span class="pl-smi">o</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(a<span class="pl-k">&gt;</span>f<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">useHTML</span>){<span class="pl-c1">this</span>.<span class="pl-smi">clipHeight</span><span class="pl-k">=</span>h<span class="pl-k">=</span>f<span class="pl-k">-</span><span class="pl-c1">20</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">titleHeight</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">padding</span>;<span class="pl-c1">this</span>.<span class="pl-smi">currentPage</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">currentPage</span>,<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">fullHeight</span><span class="pl-k">=</span>a;<span class="pl-en">q</span>(<span class="pl-c1">B</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_legendItemPos</span>[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">height</span>),e<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">||</span>c<span class="pl-k">-</span>o[e<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">||</span>c)<span class="pl-k">!==</span>o[e<span class="pl-k">-</span><span class="pl-c1">1</span>])<span class="pl-smi">o</span>.<span class="pl-c1">push</span>(p<span class="pl-k">||</span>c),e<span class="pl-k">++</span>;b<span class="pl-k">===</span><span class="pl-c1">B</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">+</span>d<span class="pl-k">-</span>o[e<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-c1">push</span>(c);c<span class="pl-k">!==</span>p<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span>c)});<span class="pl-k">if</span>(<span class="pl-k">!</span>i)i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">clipRect</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">clipRect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">padding</span>,<span class="pl-c1">9999</span>,<span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-smi">contentGroup</span>.<span class="pl-c1">clip</span>(i);<span class="pl-smi">i</span>.<span class="pl-en">attr</span>({height<span class="pl-k">:</span>h});<span class="pl-k">if</span>(<span class="pl-k">!</span>m)<span class="pl-c1">this</span>.<span class="pl-smi">nav</span><span class="pl-k">=</span>m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">g</span>().<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">group</span>),<span class="pl-c1">this</span>.<span class="pl-smi">up</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">symbol</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>triangle<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,l,l).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-c1">scroll</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,j)}).<span class="pl-c1">add</span>(m),<span class="pl-c1">this</span>.<span class="pl-smi">pager</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">text</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">15</span>,<span class="pl-c1">10</span>).<span class="pl-en">css</span>(<span class="pl-smi">k</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>(m),<span class="pl-c1">this</span>.<span class="pl-smi">down</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">symbol</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>triangle-down<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,l,l).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-c1">scroll</span>(<span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line">j)}).<span class="pl-c1">add</span>(m);<span class="pl-smi">b</span>.<span class="pl-c1">scroll</span>(<span class="pl-c1">0</span>);a<span class="pl-k">=</span>f}<span class="pl-k">else</span> <span class="pl-k">if</span>(m)<span class="pl-smi">i</span>.<span class="pl-en">attr</span>({height<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">chartHeight</span>}),<span class="pl-smi">m</span>.<span class="pl-en">hide</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">scrollGroup</span>.<span class="pl-en">attr</span>({translateY<span class="pl-k">:</span><span class="pl-c1">1</span>}),<span class="pl-c1">this</span>.<span class="pl-smi">clipHeight</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> a},<span class="pl-en">scroll</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pages</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">currentPage</span><span class="pl-k">+</span>a,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">clipHeight</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">navigation</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">activeColor</span>,g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">inactiveColor</span>,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pager</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">padding</span>;e<span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>d);<span class="pl-k">if</span>(e<span class="pl-k">&gt;</span><span class="pl-c1">0</span>)b<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span><span class="pl-en">Za</span>(b,<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>),<span class="pl-c1">this</span>.<span class="pl-smi">nav</span>.<span class="pl-en">attr</span>({translateX<span class="pl-k">:</span>k,translateY<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">padding</span><span class="pl-k">+</span><span class="pl-c1">7</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">titleHeight</span>,visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>}),<span class="pl-c1">this</span>.<span class="pl-smi">up</span>.<span class="pl-en">attr</span>({fill<span class="pl-k">:</span>e<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>g<span class="pl-k">:</span>h}).<span class="pl-en">css</span>({cursor<span class="pl-k">:</span>e<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>}),<span class="pl-smi">i</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d}),<span class="pl-c1">this</span>.<span class="pl-smi">down</span>.<span class="pl-en">attr</span>({x<span class="pl-k">:</span><span class="pl-c1">18</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">pager</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">width</span>,fill<span class="pl-k">:</span>e<span class="pl-k">===</span>d<span class="pl-k">?</span>g<span class="pl-k">:</span>h}).<span class="pl-en">css</span>({cursor<span class="pl-k">:</span>e<span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>}),c<span class="pl-k">=</span><span class="pl-k">-</span>c[e<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">initialItemY</span>,<span class="pl-c1">this</span>.<span class="pl-smi">scrollGroup</span>.<span class="pl-c1">animate</span>({translateY<span class="pl-k">:</span>c}),<span class="pl-c1">this</span>.<span class="pl-smi">currentPage</span><span class="pl-k">=</span>e,<span class="pl-c1">this</span>.<span class="pl-en">positionCheckboxes</span>(c)}};<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">Q</span>.<span class="pl-smi">LegendSymbolMixin</span><span class="pl-k">=</span>{<span class="pl-en">drawRectangle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">symbolHeight</span><span class="pl-k">||</span><span class="pl-c1">12</span>;<span class="pl-smi">b</span>.<span class="pl-smi">legendSymbol</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">rect</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">baseline</span><span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">-</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-smi">a</span>.<span class="pl-smi">symbolWidth</span>,c,<span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">symbolRadius</span>,<span class="pl-c1">2</span>)).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">3</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">b</span>.<span class="pl-smi">legendGroup</span>)},<span class="pl-en">drawLineMarker</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">marker</span>,d;d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">symbolWidth</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">legendGroup</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">baseline</span><span class="pl-k">-</span><span class="pl-en">t</span>(<span class="pl-smi">e</span>.<span class="pl-en">fontMetrics</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">itemStyle</span>.<span class="pl-c1">fontSize</span>).<span class="pl-smi">b</span><span class="pl-k">*</span><span class="pl-c1">0.3</span>),g;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">lineWidth</span>){g<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">lineWidth</span>};<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dashStyle</span>)<span class="pl-smi">g</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dashStyle</span>;<span class="pl-c1">this</span>.<span class="pl-smi">legendLine</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">path</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,a,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,d,a]).<span class="pl-en">attr</span>(g).<span class="pl-c1">add</span>(f)}<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">enabled</span>)b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">radius</span>,<span class="pl-c1">this</span>.<span class="pl-smi">legendSymbol</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">symbol</span>(<span class="pl-c1">this</span>.<span class="pl-smi">symbol</span>,d<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>b,a<span class="pl-k">-</span>b,<span class="pl-c1">2</span><span class="pl-k">*</span>b,<span class="pl-c1">2</span><span class="pl-k">*</span>b).<span class="pl-c1">add</span>(f),<span class="pl-smi">d</span>.<span class="pl-smi">isMarker</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}};(<span class="pl-sr"><span class="pl-pds">/</span>Trident<span class="pl-cce">\/</span>7<span class="pl-cce">\.</span>0<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(Da)<span class="pl-k">||</span>ab)<span class="pl-k">&amp;&amp;</span><span class="pl-en">R</span>(<span class="pl-smi">pb</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>positionItem<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-smi">_legendItemPos</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(c,b)};<span class="pl-smi">c</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">forExport</span><span class="pl-k">?</span><span class="pl-en">d</span>()<span class="pl-k">:</span><span class="pl-c1">setTimeout</span>(d)});<span class="pl-smi">sa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>;<span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">=</span><span class="pl-c1">null</span>;c<span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">G</span>,a);<span class="pl-smi">c</span>.<span class="pl-smi">series</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">userOptions</span><span class="pl-k">=</span>a;d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>;<span class="pl-c1">this</span>.<span class="pl-smi">margin</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">splashArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>margin<span class="pl-pds">&quot;</span></span>,d);<span class="pl-c1">this</span>.<span class="pl-smi">spacing</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">splashArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>spacing<span class="pl-pds">&quot;</span></span>,d);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">events</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bounds</span><span class="pl-k">=</span>{h<span class="pl-k">:</span>{},v<span class="pl-k">:</span>{}};<span class="pl-c1">this</span>.<span class="pl-smi">callback</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">isResizing</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">axes</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">series</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">hasCartesianSeries</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">showAxes</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>,g;<span class="pl-smi">f</span>.<span class="pl-c1">index</span><span class="pl-k">=</span><span class="pl-smi">da</span>.<span class="pl-c1">length</span>;<span class="pl-smi">da</span>.<span class="pl-c1">push</span>(f);<span class="pl-smi">d</span>.<span class="pl-smi">reflow</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">D</span>(f,<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">f</span>.<span class="pl-en">initReflow</span>()});</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(e)<span class="pl-k">for</span>(g <span class="pl-k">in</span> e)<span class="pl-en">D</span>(f,g,e[g]);<span class="pl-smi">f</span>.<span class="pl-smi">xAxis</span><span class="pl-k">=</span>[];<span class="pl-smi">f</span>.<span class="pl-smi">yAxis</span><span class="pl-k">=</span>[];<span class="pl-smi">f</span>.<span class="pl-smi">animation</span><span class="pl-k">=</span>ga<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-smi">animation</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">f</span>.<span class="pl-smi">pointCount</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">f</span>.<span class="pl-smi">counters</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Kb</span>;<span class="pl-smi">f</span>.<span class="pl-en">firstRender</span>()},<span class="pl-en">initSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>;(b<span class="pl-k">=</span><span class="pl-c1">H</span>[<span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">defaultSeriesType</span>])<span class="pl-k">||</span><span class="pl-en">na</span>(<span class="pl-c1">17</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">b</span>;<span class="pl-smi">b</span>.<span class="pl-en">init</span>(<span class="pl-c1">this</span>,a);<span class="pl-k">return</span> b},<span class="pl-en">isInsidePlot</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>c<span class="pl-k">?</span>b<span class="pl-k">:</span>a,a<span class="pl-k">=</span>c<span class="pl-k">?</span>a<span class="pl-k">:</span>b;<span class="pl-k">return</span> d<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotHeight</span>},<span class="pl-en">adjustTickAmounts</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">alignTicks</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">adjustTickAmount</span>()});<span class="pl-c1">this</span>.<span class="pl-smi">maxTicks</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>},<span class="pl-en">redraw</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">axes</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointer</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">legend</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isDirtyLegend</span>,g,h,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isDirtyBox</span>,k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,j<span class="pl-k">=</span>k,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>,m<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">isHidden</span>(),o<span class="pl-k">=</span>[];<span class="pl-en">Za</span>(a,<span class="pl-c1">this</span>);m<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">cloneRenderTo</span>();<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-en">layOutTitles</span>();j<span class="pl-k">--</span>;)<span class="pl-k">if</span>(a<span class="pl-k">=</span>c[j],<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span>)){h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}<span class="pl-k">if</span>(h)<span class="pl-k">for</span>(j<span class="pl-k">=</span>k;j<span class="pl-k">--</span>;)<span class="pl-k">if</span>(a<span class="pl-k">=</span>c[j],<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span>)<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-en">q</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">legendType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)});<span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-smi">enabled</span>)<span class="pl-smi">e</span>.<span class="pl-en">render</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">isDirtyLegend</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;g<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">getStacks</span>();</td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">hasCartesianSeries</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">isResizing</span>)<span class="pl-c1">this</span>.<span class="pl-smi">maxTicks</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setScale</span>()});<span class="pl-c1">this</span>.<span class="pl-en">adjustTickAmounts</span>();<span class="pl-c1">this</span>.<span class="pl-en">getMargins</span>();<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)});<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isDirtyExtremes</span>)<span class="pl-smi">a</span>.<span class="pl-smi">isDirtyExtremes</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">o</span>.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(){<span class="pl-en">P</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>afterSetExtremes<span class="pl-pds">&quot;</span></span>,<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-smi">eventArgs</span>,<span class="pl-smi">a</span>.<span class="pl-en">getExtremes</span>()));<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-smi">eventArgs</span>});(i<span class="pl-k">||</span>g)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">redraw</span>()})}i<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">drawChartBox</span>();<span class="pl-en">q</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">isCartesian</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">redraw</span>()});d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">reset</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">l</span>.<span class="pl-en">draw</span>();<span class="pl-en">P</span>(<span class="pl-c1">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>redraw<span class="pl-pds">&quot;</span></span>);m<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">cloneRenderTo</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line"><span class="pl-en">q</span>(o,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>()})},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">axes</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,d,e;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(b[d].<span class="pl-c1">options</span>.<span class="pl-c1">id</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> b[d];<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(c[d].<span class="pl-c1">options</span>.<span class="pl-c1">id</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> c[d];<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){e<span class="pl-k">=</span>c[d].<span class="pl-smi">points</span><span class="pl-k">||</span>[];<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-k">if</span>(e[b].<span class="pl-c1">id</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> e[b]}<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">getAxes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span><span class="pl-k">=</span><span class="pl-en">ia</span>(<span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span><span class="pl-k">||</span>{}),b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span><span class="pl-k">=</span><span class="pl-en">ia</span>(<span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span><span class="pl-k">||</span>{});<span class="pl-en">q</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">index</span><span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-smi">isX</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">index</span><span class="pl-k">=</span>b});c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">concat</span>(b);<span class="pl-en">q</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">new</span> <span class="pl-en">N</span>(a,</td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line">b)});<span class="pl-smi">a</span>.<span class="pl-en">adjustTickAmounts</span>()},<span class="pl-en">getSelectedPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[];<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(<span class="pl-en">Cb</span>(<span class="pl-smi">b</span>.<span class="pl-smi">points</span><span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">selected</span>}))});<span class="pl-k">return</span> a},<span class="pl-en">getSelectedSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">Cb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">selected</span>})},<span class="pl-en">getStacks</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">stacks</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">hasVisibleSeries</span>)<span class="pl-smi">a</span>.<span class="pl-smi">oldStacks</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stacks</span>});<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">ignoreHiddenSeries</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>))<span class="pl-smi">b</span>.<span class="pl-smi">stackKey</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">+</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stack</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)})},</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line"><span class="pl-en">setTitle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> g;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>,f;f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">title</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-smi">e</span>.<span class="pl-c1">title</span>,a);g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">subtitle</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-smi">e</span>.<span class="pl-smi">subtitle</span>,b),e<span class="pl-k">=</span>g;<span class="pl-en">q</span>([[<span class="pl-s"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>,a,f],[<span class="pl-s"><span class="pl-pds">&quot;</span>subtitle<span class="pl-pds">&quot;</span></span>,b,e]],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],c<span class="pl-k">=</span>d[b],e<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],a<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];c<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>(d[b]<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">destroy</span>());a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">text</span><span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">&amp;&amp;</span>(d[b]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">text</span>(<span class="pl-smi">a</span>.<span class="pl-c1">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">attr</span>({align<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">align</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b,zIndex<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">zIndex</span><span class="pl-k">||</span><span class="pl-c1">4</span>}).<span class="pl-en">css</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>())});<span class="pl-smi">d</span>.<span class="pl-en">layOutTitles</span>(c)},<span class="pl-en">layOutTitles</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">title</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">subtitle</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">title</span>,e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">subtitle</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">spacingBox</span>.<span class="pl-c1">width</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">44</span>;<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-en">css</span>({width<span class="pl-k">:</span>(<span class="pl-smi">f</span>.<span class="pl-c1">width</span><span class="pl-k">||</span>g)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">align</span>(<span class="pl-en">u</span>({y<span class="pl-k">:</span><span class="pl-c1">15</span>},f),<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>spacingBox<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-smi">floating</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">f</span>.<span class="pl-smi">verticalAlign</span>))b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">height</span>,b<span class="pl-k">&gt;=</span><span class="pl-c1">18</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&lt;=</span><span class="pl-c1">25</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">15</span>);d<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-en">css</span>({width<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-c1">width</span><span class="pl-k">||</span>g)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">align</span>(<span class="pl-en">u</span>({y<span class="pl-k">:</span>b<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">margin</span>},e),<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>spacingBox<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-smi">floating</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-en">Wa</span>(b<span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">height</span>)));c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">titleOffset</span><span class="pl-k">!==</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">titleOffset</span><span class="pl-k">=</span>b;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">&amp;&amp;</span>c)<span class="pl-c1">this</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">redraw</span>()},<span class="pl-en">getChartSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>,</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderToClone</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">renderTo</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">r</span>(b))<span class="pl-c1">this</span>.<span class="pl-smi">containerWidth</span><span class="pl-k">=</span><span class="pl-en">nb</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">r</span>(a))<span class="pl-c1">this</span>.<span class="pl-smi">containerHeight</span><span class="pl-k">=</span><span class="pl-en">nb</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">0</span>,b<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">containerWidth</span><span class="pl-k">||</span><span class="pl-c1">600</span>);<span class="pl-c1">this</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">0</span>,<span class="pl-en">n</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">containerHeight</span><span class="pl-k">&gt;</span><span class="pl-c1">19</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">containerHeight</span><span class="pl-k">:</span><span class="pl-c1">400</span>))},<span class="pl-en">cloneRenderTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderToClone</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">container</span>;a<span class="pl-k">?</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">renderTo</span>.<span class="pl-c1">appendChild</span>(c),<span class="pl-en">Ta</span>(b),<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">renderToClone</span>)<span class="pl-k">:</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">parentNode</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">renderTo</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">renderTo</span>.<span class="pl-c1">removeChild</span>(c),<span class="pl-c1">this</span>.<span class="pl-smi">renderToClone</span><span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderTo</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-c1">0</span>),<span class="pl-en">J</span>(b,</td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line">{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-9999px<span class="pl-pds">&quot;</span></span>,display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>}),<span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-smi">setProperty</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">style</span>.<span class="pl-en">setProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>important<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">C</span>.<span class="pl-c1">body</span>.<span class="pl-c1">appendChild</span>(b),c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">appendChild</span>(c))},<span class="pl-en">getContainer</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,c,d,e;<span class="pl-c1">this</span>.<span class="pl-smi">renderTo</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderTo</span>;e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>Ab<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-en">ka</span>(a))<span class="pl-c1">this</span>.<span class="pl-smi">renderTo</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-c1">C</span>.<span class="pl-c1">getElementById</span>(a);a<span class="pl-k">||</span><span class="pl-en">na</span>(<span class="pl-c1">13</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);c<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-en">I</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>));<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(c)<span class="pl-k">&amp;&amp;</span>da[c]<span class="pl-k">&amp;&amp;</span>da[c].<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span>da[c].<span class="pl-en">destroy</span>();<span class="pl-en">I</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-c1">index</span>);<span class="pl-smi">a</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">skipClone</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">cloneRenderTo</span>();<span class="pl-c1">this</span>.<span class="pl-en">getChartSize</span>();c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chartWidth</span>;d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chartHeight</span>;<span class="pl-c1">this</span>.<span class="pl-smi">container</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-en">Y</span>(Ua,{className<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-container<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">b</span>.<span class="pl-c1">className</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">className</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),id<span class="pl-k">:</span>e},<span class="pl-en">u</span>({position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>,overflow<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,textAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,lineHeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-tap-highlight-color<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,0)<span class="pl-pds">&quot;</span></span>},<span class="pl-smi">b</span>.<span class="pl-c1">style</span>),<span class="pl-c1">this</span>.<span class="pl-smi">renderToClone</span><span class="pl-k">||</span>a);<span class="pl-c1">this</span>.<span class="pl-smi">_cursor</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-smi">cursor</span>;<span class="pl-c1">this</span>.<span class="pl-smi">renderer</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">forExport</span><span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">ha</span>(a,c,d,<span class="pl-smi">b</span>.<span class="pl-c1">style</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Xa</span>(a,c,d,<span class="pl-smi">b</span>.<span class="pl-c1">style</span>);ga<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">create</span>(<span class="pl-c1">this</span>,a,c,</td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line">d)},<span class="pl-en">getMargins</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">spacing</span>,b,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">legend</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">margin</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">legend</span>,f<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">e</span>.<span class="pl-smi">margin</span>,<span class="pl-c1">10</span>),g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>,i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">align</span>,k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">verticalAlign</span>,j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">titleOffset</span>;<span class="pl-c1">this</span>.<span class="pl-en">resetMargins</span>();b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">axisOffset</span>;<span class="pl-k">if</span>(j<span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(d[<span class="pl-c1">0</span>]))<span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span>,j<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">title</span>.<span class="pl-smi">margin</span><span class="pl-k">+</span>a[<span class="pl-c1">0</span>]);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">display</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">floating</span>)<span class="pl-k">if</span>(i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">r</span>(d[<span class="pl-c1">1</span>]))<span class="pl-c1">this</span>.<span class="pl-c1">marginRight</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-c1">marginRight</span>,<span class="pl-smi">c</span>.<span class="pl-smi">legendWidth</span><span class="pl-k">-</span>g<span class="pl-k">+</span>f<span class="pl-k">+</span>a[<span class="pl-c1">1</span>])}<span class="pl-k">else</span> <span class="pl-k">if</span>(i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">r</span>(d[<span class="pl-c1">3</span>]))<span class="pl-c1">this</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">c</span>.<span class="pl-smi">legendWidth</span><span class="pl-k">+</span>g<span class="pl-k">+</span>f<span class="pl-k">+</span>a[<span class="pl-c1">3</span>])}<span class="pl-k">else</span> <span class="pl-k">if</span>(k<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">r</span>(d[<span class="pl-c1">0</span>]))<span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line"><span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span>,<span class="pl-smi">c</span>.<span class="pl-smi">legendHeight</span><span class="pl-k">+</span>h<span class="pl-k">+</span>f<span class="pl-k">+</span>a[<span class="pl-c1">0</span>])}<span class="pl-k">else</span> <span class="pl-k">if</span>(k<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(d[<span class="pl-c1">2</span>]))<span class="pl-c1">this</span>.<span class="pl-c1">marginBottom</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-c1">marginBottom</span>,<span class="pl-smi">c</span>.<span class="pl-smi">legendHeight</span><span class="pl-k">-</span>h<span class="pl-k">+</span>f<span class="pl-k">+</span>a[<span class="pl-c1">2</span>]);<span class="pl-c1">this</span>.<span class="pl-smi">extraBottomMargin</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-c1">marginBottom</span><span class="pl-k">+=</span><span class="pl-c1">this</span>.<span class="pl-smi">extraBottomMargin</span>);<span class="pl-c1">this</span>.<span class="pl-smi">extraTopMargin</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span><span class="pl-k">+=</span><span class="pl-c1">this</span>.<span class="pl-smi">extraTopMargin</span>);<span class="pl-c1">this</span>.<span class="pl-smi">hasCartesianSeries</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">getOffset</span>()});<span class="pl-en">r</span>(d[<span class="pl-c1">3</span>])<span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">+=</span>b[<span class="pl-c1">3</span>]);<span class="pl-en">r</span>(d[<span class="pl-c1">0</span>])<span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span><span class="pl-k">+=</span>b[<span class="pl-c1">0</span>]);<span class="pl-en">r</span>(d[<span class="pl-c1">2</span>])<span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-c1">marginBottom</span><span class="pl-k">+=</span>b[<span class="pl-c1">2</span>]);<span class="pl-en">r</span>(d[<span class="pl-c1">1</span>])<span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-c1">marginRight</span><span class="pl-k">+=</span>b[<span class="pl-c1">1</span>]);<span class="pl-c1">this</span>.<span class="pl-en">setChartSize</span>()},<span class="pl-en">reflow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderTo</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-en">nb</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-en">nb</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">target</span><span class="pl-k">:</span><span class="pl-c1">U</span>,<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">container</span>)<span class="pl-smi">b</span>.<span class="pl-en">setSize</span>(e,f,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">b</span>.<span class="pl-smi">hasUserSize</span><span class="pl-k">=</span><span class="pl-c1">null</span>};<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">hasUserSize</span><span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">===</span><span class="pl-c1">U</span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-c1">C</span>)){<span class="pl-k">if</span>(e<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">containerWidth</span><span class="pl-k">||</span>f<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">containerHeight</span>)<span class="pl-c1">clearTimeout</span>(<span class="pl-smi">b</span>.<span class="pl-smi">reflowTimeout</span>),a<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">reflowTimeout</span><span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(d,<span class="pl-c1">100</span>)<span class="pl-k">:</span><span class="pl-en">d</span>();<span class="pl-smi">b</span>.<span class="pl-smi">containerWidth</span><span class="pl-k">=</span>e;<span class="pl-smi">b</span>.<span class="pl-smi">containerHeight</span><span class="pl-k">=</span>f}},<span class="pl-en">initReflow</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">reflow</span>(b)};<span class="pl-en">D</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,b);<span class="pl-en">D</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-en">S</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,b)})},<span class="pl-en">setSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>,e,f,g;<span class="pl-smi">d</span>.<span class="pl-smi">isResizing</span><span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(){d<span class="pl-k">&amp;&amp;</span><span class="pl-en">P</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>endResize<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-k">function</span>(){<span class="pl-smi">d</span>.<span class="pl-smi">isResizing</span><span class="pl-k">-=</span><span class="pl-c1">1</span>})};<span class="pl-en">Za</span>(c,d);<span class="pl-smi">d</span>.<span class="pl-smi">oldChartHeight</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chartHeight</span>;<span class="pl-smi">d</span>.<span class="pl-smi">oldChartWidth</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chartWidth</span>;<span class="pl-k">if</span>(<span class="pl-en">r</span>(a))<span class="pl-smi">d</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">0</span>,<span class="pl-en">t</span>(a)),<span class="pl-smi">d</span>.<span class="pl-smi">hasUserSize</span><span class="pl-k">=</span><span class="pl-k">!!</span>e;<span class="pl-k">if</span>(<span class="pl-en">r</span>(b))<span class="pl-smi">d</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">0</span>,<span class="pl-en">t</span>(b));(Ba<span class="pl-k">?</span>ob<span class="pl-k">:</span><span class="pl-c1">J</span>)(<span class="pl-smi">d</span>.<span class="pl-smi">container</span>,{width<span class="pl-k">:</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},Ba);<span class="pl-smi">d</span>.<span class="pl-en">setChartSize</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">d</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">setSize</span>(e,f,c);<span class="pl-smi">d</span>.<span class="pl-smi">maxTicks</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">q</span>(<span class="pl-smi">d</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-en">setScale</span>()});<span class="pl-en">q</span>(<span class="pl-smi">d</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-smi">d</span>.<span class="pl-smi">isDirtyLegend</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-en">getMargins</span>();</td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-en">redraw</span>(c);<span class="pl-smi">d</span>.<span class="pl-smi">oldChartHeight</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">P</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>);Ba<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-en">g</span>()<span class="pl-k">:</span><span class="pl-c1">setTimeout</span>(g,Ba<span class="pl-k">&amp;&amp;</span><span class="pl-smi">Ba</span>.<span class="pl-smi">duration</span><span class="pl-k">||</span><span class="pl-c1">500</span>)},<span class="pl-en">setChartSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">inverted</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chartWidth</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chartHeight</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">spacing</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">clipOffset</span>,i,k,j,l;<span class="pl-c1">this</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotLeft</span>);<span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span><span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span>);<span class="pl-c1">this</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">=</span>j<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">0</span>,<span class="pl-en">t</span>(d<span class="pl-k">-</span>i<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">marginRight</span>));<span class="pl-c1">this</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">=</span>l<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">0</span>,<span class="pl-en">t</span>(e<span class="pl-k">-</span>k<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">marginBottom</span>));<span class="pl-c1">this</span>.<span class="pl-smi">plotSizeX</span><span class="pl-k">=</span>b<span class="pl-k">?</span>l<span class="pl-k">:</span>j;<span class="pl-c1">this</span>.<span class="pl-smi">plotSizeY</span><span class="pl-k">=</span>b<span class="pl-k">?</span>j<span class="pl-k">:</span>l;<span class="pl-c1">this</span>.<span class="pl-smi">plotBorderWidth</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">plotBorderWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">spacingBox</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">spacingBox</span><span class="pl-k">=</span>{x<span class="pl-k">:</span>g[<span class="pl-c1">3</span>],y<span class="pl-k">:</span>g[<span class="pl-c1">0</span>],width<span class="pl-k">:</span>d<span class="pl-k">-</span>g[<span class="pl-c1">3</span>]<span class="pl-k">-</span>g[<span class="pl-c1">1</span>],height<span class="pl-k">:</span>e<span class="pl-k">-</span>g[<span class="pl-c1">0</span>]<span class="pl-k">-</span>g[<span class="pl-c1">2</span>]};<span class="pl-c1">this</span>.<span class="pl-smi">plotBox</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">plotBox</span><span class="pl-k">=</span>{x<span class="pl-k">:</span>i,y<span class="pl-k">:</span>k,width<span class="pl-k">:</span>j,height<span class="pl-k">:</span>l};d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-en">T</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotBorderWidth</span><span class="pl-k">/</span><span class="pl-c1">2</span>);b<span class="pl-k">=</span><span class="pl-en">Wa</span>(<span class="pl-en">v</span>(d,h[<span class="pl-c1">3</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>);c<span class="pl-k">=</span><span class="pl-en">Wa</span>(<span class="pl-en">v</span>(d,h[<span class="pl-c1">0</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-c1">this</span>.<span class="pl-smi">clipBox</span><span class="pl-k">=</span>{x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span><span class="pl-en">T</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotSizeX</span><span class="pl-k">-</span><span class="pl-en">v</span>(d,h[<span class="pl-c1">1</span>])<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>b),height<span class="pl-k">:</span><span class="pl-en">T</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plotSizeY</span><span class="pl-k">-</span><span class="pl-en">v</span>(d,h[<span class="pl-c1">2</span>])<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>c)};a<span class="pl-k">||</span><span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setAxisSize</span>();<span class="pl-smi">a</span>.<span class="pl-en">setAxisTranslation</span>()})},<span class="pl-en">resetMargins</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">spacing</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">margin</span>;<span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span><span class="pl-k">=</span><span class="pl-en">n</span>(b[<span class="pl-c1">0</span>],a[<span class="pl-c1">0</span>]);<span class="pl-c1">this</span>.<span class="pl-c1">marginRight</span><span class="pl-k">=</span><span class="pl-en">n</span>(b[<span class="pl-c1">1</span>],a[<span class="pl-c1">1</span>]);<span class="pl-c1">this</span>.<span class="pl-c1">marginBottom</span><span class="pl-k">=</span><span class="pl-en">n</span>(b[<span class="pl-c1">2</span>],a[<span class="pl-c1">2</span>]);<span class="pl-c1">this</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line"><span class="pl-en">n</span>(b[<span class="pl-c1">3</span>],a[<span class="pl-c1">3</span>]);<span class="pl-c1">this</span>.<span class="pl-smi">axisOffset</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-smi">clipOffset</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]},<span class="pl-en">drawChartBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chartWidth</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chartHeight</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chartBackground</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotBackground</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotBorder</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotBGImage</span>,i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">borderWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">backgroundColor</span>,j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">plotBackgroundColor</span>,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">plotBackgroundImage</span>,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">plotBorderWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span>,o,p<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotLeft</span>,n<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span>,q<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotWidth</span>,z<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotHeight</span>,s<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotBox</span>,r<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">clipRect</span>,t<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">clipBox</span>;o<span class="pl-k">=</span>i<span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shadow</span><span class="pl-k">?</span><span class="pl-c1">8</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(i<span class="pl-k">||</span>k)<span class="pl-k">if</span>(e)<span class="pl-smi">e</span>.<span class="pl-c1">animate</span>(<span class="pl-smi">e</span>.<span class="pl-en">crisp</span>({width<span class="pl-k">:</span>c<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line">o,height<span class="pl-k">:</span>d<span class="pl-k">-</span>o}));<span class="pl-k">else</span>{e<span class="pl-k">=</span>{fill<span class="pl-k">:</span>k<span class="pl-k">||</span><span class="pl-c1">X</span>};<span class="pl-k">if</span>(i)<span class="pl-smi">e</span>.<span class="pl-smi">stroke</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">borderColor</span>,e[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>i;<span class="pl-c1">this</span>.<span class="pl-smi">chartBackground</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">rect</span>(o<span class="pl-k">/</span><span class="pl-c1">2</span>,o<span class="pl-k">/</span><span class="pl-c1">2</span>,c<span class="pl-k">-</span>o,d<span class="pl-k">-</span>o,<span class="pl-smi">a</span>.<span class="pl-smi">borderRadius</span>,i).<span class="pl-en">attr</span>(e).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-background<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>().<span class="pl-en">shadow</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>)}<span class="pl-k">if</span>(j)f<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">animate</span>(s)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">plotBackground</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">rect</span>(p,n,q,z,<span class="pl-c1">0</span>).<span class="pl-en">attr</span>({fill<span class="pl-k">:</span>j}).<span class="pl-c1">add</span>().<span class="pl-en">shadow</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotShadow</span>);<span class="pl-k">if</span>(l)h<span class="pl-k">?</span><span class="pl-smi">h</span>.<span class="pl-c1">animate</span>(s)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">plotBGImage</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">image</span>(l,p,n,q,z).<span class="pl-c1">add</span>();r<span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-c1">animate</span>({width<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-c1">width</span>,height<span class="pl-k">:</span><span class="pl-smi">t</span>.<span class="pl-c1">height</span>})<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">clipRect</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">clipRect</span>(t);<span class="pl-k">if</span>(m)g<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-c1">animate</span>(<span class="pl-smi">g</span>.<span class="pl-en">crisp</span>({x<span class="pl-k">:</span>p,y<span class="pl-k">:</span>n,width<span class="pl-k">:</span>q,height<span class="pl-k">:</span>z}))<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">plotBorder</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">rect</span>(p,n,q,z,<span class="pl-c1">0</span>,<span class="pl-k">-</span>m).<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotBorderColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>m,fill<span class="pl-k">:</span><span class="pl-c1">X</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>();<span class="pl-c1">this</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">propFromSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>,c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">series</span>,e,f;<span class="pl-en">q</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>inverted<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>angular<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>polar<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">g</span>){c<span class="pl-k">=</span><span class="pl-c1">H</span>[<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">defaultSeriesType</span>];f<span class="pl-k">=</span>a[g]<span class="pl-k">||</span>b[g]<span class="pl-k">||</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">prototype</span>[g];<span class="pl-k">for</span>(e<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-k">!</span>f<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">--</span>;)(c<span class="pl-k">=</span><span class="pl-c1">H</span>[d[e].<span class="pl-c1">type</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">prototype</span>[g]<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);a[g]<span class="pl-k">=</span>f})},<span class="pl-en">linkSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>;<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">linkedSeries</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>});<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">linkedTo</span>;</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-en">ka</span>(d)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>:previous<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>[<span class="pl-smi">b</span>.<span class="pl-c1">index</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">get</span>(d)))<span class="pl-smi">d</span>.<span class="pl-smi">linkedSeries</span>.<span class="pl-c1">push</span>(b),<span class="pl-smi">b</span>.<span class="pl-smi">linkedParent</span><span class="pl-k">=</span>d})},<span class="pl-en">renderSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">translate</span>();<span class="pl-smi">a</span>.<span class="pl-smi">setTooltipPoints</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">setTooltipPoints</span>();<span class="pl-smi">a</span>.<span class="pl-en">render</span>()})},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">axes</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">labels</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">credits</span>,g;<span class="pl-smi">a</span>.<span class="pl-en">setTitle</span>();<span class="pl-smi">a</span>.<span class="pl-smi">legend</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">pb</span>(a,<span class="pl-smi">d</span>.<span class="pl-smi">legend</span>);<span class="pl-smi">a</span>.<span class="pl-en">getStacks</span>();<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setScale</span>()});<span class="pl-smi">a</span>.<span class="pl-en">getMargins</span>();<span class="pl-smi">a</span>.<span class="pl-smi">maxTicks</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setTickPositions</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-en">setMaxTicks</span>()});<span class="pl-smi">a</span>.<span class="pl-en">adjustTickAmounts</span>();</td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">getMargins</span>();<span class="pl-smi">a</span>.<span class="pl-en">drawChartBox</span>();<span class="pl-smi">a</span>.<span class="pl-smi">hasCartesianSeries</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">render</span>()});<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">seriesGroup</span>)<span class="pl-smi">a</span>.<span class="pl-smi">seriesGroup</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>series-group<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">3</span>}).<span class="pl-c1">add</span>();<span class="pl-smi">a</span>.<span class="pl-en">renderSeries</span>();<span class="pl-smi">e</span>.<span class="pl-smi">items</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(<span class="pl-smi">e</span>.<span class="pl-smi">items</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">u</span>(<span class="pl-smi">e</span>.<span class="pl-c1">style</span>,<span class="pl-smi">b</span>.<span class="pl-c1">style</span>),f<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-smi">d</span>.<span class="pl-c1">left</span>)<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">plotLeft</span>,g<span class="pl-k">=</span><span class="pl-en">y</span>(<span class="pl-smi">d</span>.<span class="pl-c1">top</span>)<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">plotTop</span><span class="pl-k">+</span><span class="pl-c1">12</span>;<span class="pl-k">delete</span> <span class="pl-smi">d</span>.<span class="pl-c1">left</span>;<span class="pl-k">delete</span> <span class="pl-smi">d</span>.<span class="pl-c1">top</span>;<span class="pl-smi">c</span>.<span class="pl-c1">text</span>(<span class="pl-smi">b</span>.<span class="pl-smi">html</span>,f,g).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">2</span>}).<span class="pl-en">css</span>(d).<span class="pl-c1">add</span>()});<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">credits</span>)g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">href</span>,<span class="pl-smi">a</span>.<span class="pl-smi">credits</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">text</span>(<span class="pl-smi">f</span>.<span class="pl-c1">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">if</span>(g)<span class="pl-smi">location</span>.<span class="pl-c1">href</span><span class="pl-k">=</span>g}).<span class="pl-en">attr</span>({align<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">position</span>.<span class="pl-c1">align</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">8</span>}).<span class="pl-en">css</span>(<span class="pl-smi">f</span>.<span class="pl-c1">style</span>).<span class="pl-c1">add</span>().<span class="pl-c1">align</span>(<span class="pl-smi">f</span>.<span class="pl-smi">position</span>);</td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">axes</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">container</span>,e,f<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">parentNode</span>;<span class="pl-en">P</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>);da[<span class="pl-smi">a</span>.<span class="pl-c1">index</span>]<span class="pl-k">=</span>s;<span class="pl-smi">a</span>.<span class="pl-smi">renderTo</span>.<span class="pl-c1">removeAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>);<span class="pl-en">S</span>(a);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)b[e]<span class="pl-k">=</span>b[e].<span class="pl-en">destroy</span>();<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)c[e]<span class="pl-k">=</span>c[e].<span class="pl-en">destroy</span>();<span class="pl-en">q</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>title,subtitle,chartBackground,plotBackground,plotBGImage,plotBorder,seriesGroup,clipRect,credits,pointer,scroller,rangeSelector,legend,resetZoomButton,tooltip,renderer<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[b];c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">destroy</span><span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">destroy</span>())});</td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(d)<span class="pl-smi">d</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-en">S</span>(d),f<span class="pl-k">&amp;&amp;</span><span class="pl-en">Ta</span>(d);<span class="pl-k">for</span>(e <span class="pl-k">in</span> a)<span class="pl-k">delete</span> a[e]},<span class="pl-en">isReadyToRender</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-k">return</span><span class="pl-k">!</span>$<span class="pl-k">&amp;&amp;</span><span class="pl-c1">U</span><span class="pl-k">==</span><span class="pl-c1">U</span>.<span class="pl-c1">top</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">C</span>.<span class="pl-c1">readyState</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>complete<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>ga<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">U</span>.<span class="pl-smi">canvg</span><span class="pl-k">?</span>(ga<span class="pl-k">?</span><span class="pl-smi">Vb</span>.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">firstRender</span>()},<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">global</span>.<span class="pl-smi">canvasToolsURL</span>)<span class="pl-k">:</span><span class="pl-c1">C</span>.<span class="pl-c1">attachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>onreadystatechange<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-c1">C</span>.<span class="pl-c1">detachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>onreadystatechange<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">firstRender</span>);<span class="pl-c1">C</span>.<span class="pl-c1">readyState</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>complete<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">firstRender</span>()}),<span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">firstRender</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">callback</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">isReadyToRender</span>()){<span class="pl-smi">a</span>.<span class="pl-en">getContainer</span>();<span class="pl-en">P</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-en">resetMargins</span>();</td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">setChartSize</span>();<span class="pl-smi">a</span>.<span class="pl-en">propFromSeries</span>();<span class="pl-smi">a</span>.<span class="pl-en">getAxes</span>();<span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span><span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">initSeries</span>(b)});<span class="pl-smi">a</span>.<span class="pl-en">linkSeries</span>();<span class="pl-en">P</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>beforeRender<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">Q</span>.<span class="pl-smi">Pointer</span>)<span class="pl-smi">a</span>.<span class="pl-smi">pointer</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ya</span>(a,b);<span class="pl-smi">a</span>.<span class="pl-en">render</span>();<span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">draw</span>();c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">apply</span>(a,[a]);<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">callbacks</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-c1">apply</span>(a,[a])});<span class="pl-smi">a</span>.<span class="pl-en">cloneRenderTo</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-en">P</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>)}},<span class="pl-en">splashArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b[a],c<span class="pl-k">=</span><span class="pl-en">ba</span>(c)<span class="pl-k">?</span>c<span class="pl-k">:</span>[c,c,c,c];<span class="pl-k">return</span>[<span class="pl-en">n</span>(b[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Top<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">0</span>]),<span class="pl-en">n</span>(b[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Right<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">1</span>]),<span class="pl-en">n</span>(b[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Bottom<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">2</span>]),<span class="pl-en">n</span>(b[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Left<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">3</span>])]}};<span class="pl-smi">sa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">callbacks</span><span class="pl-k">=</span>[];pa<span class="pl-k">=</span><span class="pl-c1">Q</span>.<span class="pl-smi">CenteredSeriesMixin</span><span class="pl-k">=</span>{<span class="pl-en">getCenter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>(<span class="pl-smi">a</span>.<span class="pl-smi">slicedOffset</span><span class="pl-k">||</span><span class="pl-c1">0</span>),d,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">center</span>,a<span class="pl-k">=</span>[<span class="pl-en">n</span>(b[<span class="pl-c1">0</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>50%<span class="pl-pds">&quot;</span></span>),<span class="pl-en">n</span>(b[<span class="pl-c1">1</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>50%<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-c1">size</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>100%<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">innerSize</span><span class="pl-k">||</span><span class="pl-c1">0</span>],g<span class="pl-k">=</span><span class="pl-en">x</span>(e,f),h;<span class="pl-k">return</span> <span class="pl-en">va</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){h<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>%<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(a);d<span class="pl-k">=</span>b<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>h;<span class="pl-k">return</span>(h<span class="pl-k">?</span>[e,f,g,g][b]<span class="pl-k">*</span><span class="pl-en">y</span>(a)<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">:</span>a)<span class="pl-k">+</span>(d<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">0</span>)})}};<span class="pl-k">var</span> <span class="pl-en">xa</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">series</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">applyOptions</span>(b,c);<span class="pl-c1">this</span>.<span class="pl-smi">pointAttr</span><span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colorByPoint</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colors</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colors</span>,<span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">||</span>b[<span class="pl-smi">a</span>.<span class="pl-smi">colorCounter</span><span class="pl-k">++</span>],<span class="pl-smi">a</span>.<span class="pl-smi">colorCounter</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">length</span>))<span class="pl-smi">a</span>.<span class="pl-smi">colorCounter</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">pointCount</span><span class="pl-k">++</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">applyOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">pointValKey</span>,a<span class="pl-k">=</span><span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">optionsToObject</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-en">u</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">?</span><span class="pl-en">u</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>,a)<span class="pl-k">:</span>a;<span class="pl-k">if</span>(d)<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">this</span>[d];<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">===</span>s<span class="pl-k">&amp;&amp;</span>c)<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>b<span class="pl-k">===</span>s<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">autoIncrement</span>()<span class="pl-k">:</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">optionsToObject</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{},c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">pointArrayMap</span><span class="pl-k">||</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>],e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-c1">null</span>)b[d[<span class="pl-c1">0</span>]]<span class="pl-k">=</span>a;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">Qa</span>(a)){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span>e){c<span class="pl-k">=</span><span class="pl-k">typeof</span> a[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">b</span>.<span class="pl-c1">name</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line">a[<span class="pl-c1">0</span>];<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>];f<span class="pl-k">++</span>}<span class="pl-k">for</span>(;g<span class="pl-k">&lt;</span>e;)b[d[g<span class="pl-k">++</span>]]<span class="pl-k">=</span>a[f<span class="pl-k">++</span>]}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>){b<span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataLabels</span>)<span class="pl-smi">c</span>.<span class="pl-smi">_hasPointLabels</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">marker</span>)<span class="pl-smi">c</span>.<span class="pl-smi">_hasPointMarkers</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span> b},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hoverPoints</span>,c;<span class="pl-smi">a</span>.<span class="pl-smi">pointCount</span><span class="pl-k">--</span>;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">setState</span>(),<span class="pl-en">ma</span>(b,<span class="pl-c1">this</span>),<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>))<span class="pl-smi">a</span>.<span class="pl-smi">hoverPoints</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">hoverPoint</span>)<span class="pl-c1">this</span>.<span class="pl-en">onMouseOut</span>();<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">graphic</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">dataLabel</span>)<span class="pl-en">S</span>(<span class="pl-c1">this</span>),<span class="pl-c1">this</span>.<span class="pl-en">destroyElements</span>();<span class="pl-c1">this</span>.<span class="pl-smi">legendItem</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">legend</span>.<span class="pl-en">destroyItem</span>(<span class="pl-c1">this</span>);<span class="pl-k">for</span>(c <span class="pl-k">in</span> <span class="pl-c1">this</span>)<span class="pl-c1">this</span>[c]<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">destroyElements</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>graphic,dataLabel,dataLabelUpper,group,connector,shadowGroup<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),b,c<span class="pl-k">=</span><span class="pl-c1">6</span>;c<span class="pl-k">--</span>;)b<span class="pl-k">=</span>a[c],<span class="pl-c1">this</span>[b]<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>[b]<span class="pl-k">=</span><span class="pl-c1">this</span>[b].<span class="pl-en">destroy</span>())},<span class="pl-en">getLabelConfig</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{x<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">category</span>,y<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>,key<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">category</span>,series<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,point<span class="pl-k">:</span><span class="pl-c1">this</span>,percentage<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">percentage</span>,total<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">total</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">stackTotal</span>}},<span class="pl-en">tooltipFormatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltipOptions</span>,d<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">valueDecimals</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">valuePrefix</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">valueSuffix</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pointArrayMap</span><span class="pl-k">||</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>{point.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b;<span class="pl-k">if</span>(e<span class="pl-k">||</span>f)a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f);a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:,.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>f}<span class="pl-pds">&quot;</span></span>)});<span class="pl-k">return</span> <span class="pl-en">Ja</span>(a,{point<span class="pl-k">:</span><span class="pl-c1">this</span>,series<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>})}};<span class="pl-k">var</span> <span class="pl-en">M</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{isCartesian<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>,pointClass<span class="pl-k">:</span>xa,sorted<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,requireSorting<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineColor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineWidth<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fillColor<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>radius<span class="pl-pds">&quot;</span></span>},axisTypes<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>],colorCounter<span class="pl-k">:</span><span class="pl-c1">0</span>,parallelArrays<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>],<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d,e,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">index</span>,<span class="pl-smi">a</span>.<span class="pl-smi">_i</span>)<span class="pl-k">-</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-c1">index</span>,<span class="pl-smi">b</span>.<span class="pl-smi">_i</span>)};<span class="pl-smi">c</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a;</td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">setOptions</span>(b);<span class="pl-smi">c</span>.<span class="pl-smi">linkedSeries</span><span class="pl-k">=</span>[];<span class="pl-smi">c</span>.<span class="pl-en">bindAxes</span>();<span class="pl-en">u</span>(c,{name<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">name</span>,state<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,pointAttr<span class="pl-k">:</span>{},visible<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>,selected<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">selected</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">if</span>(ga)<span class="pl-smi">b</span>.<span class="pl-smi">animation</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">events</span>;<span class="pl-k">for</span>(d <span class="pl-k">in</span> e)<span class="pl-en">D</span>(c,d,e[d]);<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">click</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">point</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">point</span>.<span class="pl-smi">events</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">point</span>.<span class="pl-smi">events</span>.<span class="pl-smi">click</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">allowPointSelect</span>)<span class="pl-smi">a</span>.<span class="pl-smi">runTrackerClick</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-en">getColor</span>();<span class="pl-smi">c</span>.<span class="pl-en">getSymbol</span>();<span class="pl-en">q</span>(<span class="pl-smi">c</span>.<span class="pl-smi">parallelArrays</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){c[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>[]});<span class="pl-smi">c</span>.<span class="pl-en">setData</span>(<span class="pl-smi">b</span>.<span class="pl-c1">data</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">isCartesian</span>)<span class="pl-smi">a</span>.<span class="pl-smi">hasCartesianSeries</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(c);<span class="pl-smi">c</span>.<span class="pl-smi">_i</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-en">tb</span>(f,g);<span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">tb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">series</span>,</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line">g);<span class="pl-en">q</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">index</span><span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>Series <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>)})},<span class="pl-en">bindAxes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,d;<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">axisTypes</span><span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-en">q</span>(c[e],<span class="pl-k">function</span>(<span class="pl-smi">c</span>){d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>;<span class="pl-k">if</span>(b[e]<span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">index</span><span class="pl-k">||</span>b[e]<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>b[e]<span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">id</span><span class="pl-k">||</span>b[e]<span class="pl-k">===</span>s<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">index</span><span class="pl-k">===</span><span class="pl-c1">0</span>)<span class="pl-smi">c</span>.<span class="pl-smi">series</span>.<span class="pl-c1">push</span>(a),a[e]<span class="pl-k">=</span>c,<span class="pl-smi">c</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">!</span>a[e]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">optionalAxis</span><span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-en">na</span>(<span class="pl-c1">18</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)})},<span class="pl-en">updateParallelArrays</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-c1">arguments</span>;<span class="pl-en">q</span>(<span class="pl-smi">c</span>.<span class="pl-smi">parallelArrays</span>,<span class="pl-k">typeof</span> b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">toYData</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">toYData</span>(a)<span class="pl-k">:</span>a[d];c[d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>][b]<span class="pl-k">=</span>f}<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>[b].<span class="pl-c1">apply</span>(c[a<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>],<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(d,<span class="pl-c1">2</span>))})},<span class="pl-en">autoIncrement</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xIncrement</span>,b<span class="pl-k">=</span><span class="pl-en">n</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">pointStart</span>,<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">pointInterval</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pointInterval</span>,<span class="pl-smi">a</span>.<span class="pl-smi">pointInterval</span>,<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">xIncrement</span><span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">pointInterval</span>;<span class="pl-k">return</span> b},<span class="pl-en">getSegments</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span>[],c,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(e)<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">connectNulls</span>){<span class="pl-k">for</span>(c<span class="pl-k">=</span>e;c<span class="pl-k">--</span>;)d[c].<span class="pl-c1">y</span><span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(c,<span class="pl-c1">1</span>);<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>[d])}<span class="pl-k">else</span> <span class="pl-en">q</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">g</span>){<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">?</span>(g<span class="pl-k">&gt;</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">d</span>.<span class="pl-c1">slice</span>(a<span class="pl-k">+</span><span class="pl-c1">1</span>,g)),a<span class="pl-k">=</span>g)<span class="pl-k">:</span>g<span class="pl-k">===</span>e<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">d</span>.<span class="pl-c1">slice</span>(a<span class="pl-k">+</span><span class="pl-c1">1</span>,g<span class="pl-k">+</span><span class="pl-c1">1</span>))});<span class="pl-c1">this</span>.<span class="pl-smi">segments</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line">b},<span class="pl-en">setOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">plotOptions</span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">userOptions</span><span class="pl-k">||</span>{},d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotOptions</span><span class="pl-k">||</span>{},e<span class="pl-k">=</span>c[<span class="pl-c1">this</span>.<span class="pl-c1">type</span>];<span class="pl-c1">this</span>.<span class="pl-smi">userOptions</span><span class="pl-k">=</span>a;c<span class="pl-k">=</span><span class="pl-en">w</span>(e,<span class="pl-smi">c</span>.<span class="pl-smi">series</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">tooltipOptions</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">G</span>.<span class="pl-smi">tooltip</span>,<span class="pl-c1">G</span>.<span class="pl-smi">plotOptions</span>[<span class="pl-c1">this</span>.<span class="pl-c1">type</span>].<span class="pl-smi">tooltip</span>,<span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>,<span class="pl-smi">d</span>.<span class="pl-smi">series</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">series</span>.<span class="pl-smi">tooltip</span>,d[<span class="pl-c1">this</span>.<span class="pl-c1">type</span>]<span class="pl-k">&amp;&amp;</span>d[<span class="pl-c1">this</span>.<span class="pl-c1">type</span>].<span class="pl-smi">tooltip</span>,<span class="pl-smi">a</span>.<span class="pl-smi">tooltip</span>);<span class="pl-smi">e</span>.<span class="pl-smi">marker</span><span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">c</span>.<span class="pl-smi">marker</span>;<span class="pl-k">return</span> c},<span class="pl-en">getColor</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userOptions</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">colors</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">counters</span>,e;e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-c1">V</span>[<span class="pl-c1">this</span>.<span class="pl-c1">type</span>].<span class="pl-c1">color</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">colorByPoint</span>)<span class="pl-en">r</span>(<span class="pl-smi">b</span>.<span class="pl-smi">_colorIndex</span>)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_colorIndex</span><span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-smi">_colorIndex</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">color</span>,a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">color</span><span class="pl-k">++</span>),e<span class="pl-k">=</span>c[a];<span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">=</span>e;<span class="pl-smi">d</span>.<span class="pl-en">wrapColor</span>(<span class="pl-smi">c</span>.<span class="pl-c1">length</span>)},<span class="pl-en">getSymbol</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userOptions</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">symbols</span>,c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">counters</span>;<span class="pl-c1">this</span>.<span class="pl-smi">symbol</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">symbol</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">symbol</span>)<span class="pl-en">r</span>(<span class="pl-smi">a</span>.<span class="pl-smi">_symbolIndex</span>)<span class="pl-k">?</span>a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_symbolIndex</span><span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-smi">_symbolIndex</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">symbol</span>,a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">symbol</span><span class="pl-k">++</span>),<span class="pl-c1">this</span>.<span class="pl-smi">symbol</span><span class="pl-k">=</span>d[a];<span class="pl-k">if</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>url<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-c1">this</span>.<span class="pl-smi">symbol</span>))<span class="pl-smi">b</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-en">wrapSymbol</span>(<span class="pl-smi">d</span>.<span class="pl-c1">length</span>)},drawLegendSymbol<span class="pl-k">:</span><span class="pl-c1">F</span>.<span class="pl-smi">drawLineMarker</span>,<span class="pl-en">setData</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">points</span>,g<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">0</span>,h,i<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-c1">options</span>,k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">chart</span>,j<span class="pl-k">=</span><span class="pl-c1">null</span>,l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">xAxis</span>,m<span class="pl-k">=</span>l<span class="pl-k">&amp;&amp;!!</span><span class="pl-smi">l</span>.<span class="pl-smi">categories</span>,o<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">tooltipPoints</span>,p<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">turboThreshold</span>,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xData</span>,Oa<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yData</span>,z<span class="pl-k">=</span>(h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">pointArrayMap</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>,a<span class="pl-k">=</span>a<span class="pl-k">||</span>[];h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">=</span><span class="pl-en">n</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(d<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">cropped</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">hasGroupedData</span>)<span class="pl-en">q</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){f[b].<span class="pl-en">update</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>)});<span class="pl-k">else</span>{<span class="pl-smi">e</span>.<span class="pl-smi">xIncrement</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">e</span>.<span class="pl-smi">pointRange</span><span class="pl-k">=</span>m<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-smi">pointRange</span>;<span class="pl-smi">e</span>.<span class="pl-smi">colorCounter</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parallelArrays</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){e[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>});<span class="pl-k">if</span>(p<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span>p){<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span>h;)j<span class="pl-k">=</span>a[c],c<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-en">za</span>(j)){m<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">i</span>.<span class="pl-smi">pointStart</span>,<span class="pl-c1">0</span>);i<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">i</span>.<span class="pl-smi">pointInterval</span>,<span class="pl-c1">1</span>);<span class="pl-k">for</span>(c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)<span class="pl-c1">B</span>[c]<span class="pl-k">=</span>m,Oa[c]<span class="pl-k">=</span>a[c],m<span class="pl-k">+=</span>i;<span class="pl-smi">e</span>.<span class="pl-smi">xIncrement</span><span class="pl-k">=</span>m}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">Qa</span>(j))<span class="pl-k">if</span>(z)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)i<span class="pl-k">=</span>a[c],<span class="pl-c1">B</span>[c]<span class="pl-k">=</span>i[<span class="pl-c1">0</span>],Oa[c]<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>,z<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">else</span> <span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)i<span class="pl-k">=</span>a[c],<span class="pl-c1">B</span>[c]<span class="pl-k">=</span>i[<span class="pl-c1">0</span>],Oa[c]<span class="pl-k">=</span>i[<span class="pl-c1">1</span>];<span class="pl-k">else</span> <span class="pl-en">na</span>(<span class="pl-c1">12</span>)}<span class="pl-k">else</span> <span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[c]<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span>{series<span class="pl-k">:</span>e},<span class="pl-smi">e</span>.<span class="pl-smi">pointClass</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">applyOptions</span>.<span class="pl-c1">apply</span>(i,[a[c]]),<span class="pl-smi">e</span>.<span class="pl-en">updateParallelArrays</span>(i,c),m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">name</span>))<span class="pl-smi">l</span>.<span class="pl-smi">names</span>[<span class="pl-smi">i</span>.<span class="pl-c1">x</span>]<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">name</span>;<span class="pl-en">ka</span>(Oa[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-en">na</span>(<span class="pl-c1">14</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">e</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>[];<span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>a;<span class="pl-k">for</span>(c<span class="pl-k">=</span>g;c<span class="pl-k">--</span>;)f[c]<span class="pl-k">&amp;&amp;</span>f[c].<span class="pl-smi">destroy</span><span class="pl-k">&amp;&amp;</span>f[c].<span class="pl-en">destroy</span>();<span class="pl-k">if</span>(o)<span class="pl-smi">o</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(l)<span class="pl-smi">l</span>.<span class="pl-smi">minRange</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">userMinRange</span>;<span class="pl-smi">e</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">redraw</span>(c)},<span class="pl-en">processData</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xData</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yData</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,e;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> f,g,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,k<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">cropThreshold</span>,j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isCartesian</span>;<span class="pl-k">if</span>(j<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">h</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;!</span>a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(j<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">sorted</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>k<span class="pl-k">||</span>d<span class="pl-k">&gt;</span>k<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">forceCrop</span>))<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">min</span>,h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">max</span>,b[d<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&lt;</span>a<span class="pl-k">||</span>b[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>h)b<span class="pl-k">=</span>[],c<span class="pl-k">=</span>[];<span class="pl-k">else</span> <span class="pl-k">if</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span>a<span class="pl-k">||</span>b[d<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>h)e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">cropData</span>(<span class="pl-c1">this</span>.<span class="pl-smi">xData</span>,<span class="pl-c1">this</span>.<span class="pl-smi">yData</span>,a,h),b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">xData</span>,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">yData</span>,e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">start</span>,f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;h<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;h<span class="pl-k">--</span>)d<span class="pl-k">=</span>b[h]<span class="pl-k">-</span>b[h<span class="pl-k">-</span><span class="pl-c1">1</span>],d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">===</span>s<span class="pl-k">||</span>d<span class="pl-k">&lt;</span>g)<span class="pl-k">?</span>g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">:</span>d<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">requireSorting</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">na</span>(<span class="pl-c1">15</span>);<span class="pl-c1">this</span>.<span class="pl-smi">cropped</span><span class="pl-k">=</span>f;<span class="pl-c1">this</span>.<span class="pl-smi">cropStart</span><span class="pl-k">=</span>e;<span class="pl-c1">this</span>.<span class="pl-smi">processedXData</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">processedYData</span><span class="pl-k">=</span>c;<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-smi">pointRange</span><span class="pl-k">===</span><span class="pl-c1">null</span>)<span class="pl-c1">this</span>.<span class="pl-smi">pointRange</span><span class="pl-k">=</span>g<span class="pl-k">||</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">=</span>g},<span class="pl-en">cropData</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span>e,h<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">cropShoulder</span>,<span class="pl-c1">1</span>),i;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>e;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[i]<span class="pl-k">&gt;=</span>c){f<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">0</span>,i<span class="pl-k">-</span>h);<span class="pl-k">break</span>}<span class="pl-k">for</span>(;i<span class="pl-k">&lt;</span>e;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[i]<span class="pl-k">&gt;</span>d){g<span class="pl-k">=</span>i<span class="pl-k">+</span>h;<span class="pl-k">break</span>}<span class="pl-k">return</span>{xData<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(f,g),yData<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(f,g),start<span class="pl-k">:</span>f,end<span class="pl-k">:</span>g}},<span class="pl-en">generatePoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>,c,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">processedXData</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">processedYData</span>,</td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointClass</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">cropStart</span><span class="pl-k">||</span><span class="pl-c1">0</span>,i,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">hasGroupedData</span>,j,l<span class="pl-k">=</span>[],m;<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;!</span>k)b<span class="pl-k">=</span>[],<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>b;<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>g;m<span class="pl-k">++</span>)i<span class="pl-k">=</span>h<span class="pl-k">+</span>m,k<span class="pl-k">?</span>l[m]<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">f</span>).<span class="pl-en">init</span>(<span class="pl-c1">this</span>,[d[m]].<span class="pl-c1">concat</span>(<span class="pl-en">ia</span>(e[m])))<span class="pl-k">:</span>(b[i]<span class="pl-k">?</span>j<span class="pl-k">=</span>b[i]<span class="pl-k">:</span>a[i]<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(b[i]<span class="pl-k">=</span>j<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">f</span>).<span class="pl-en">init</span>(<span class="pl-c1">this</span>,a[i],d[m])),l[m]<span class="pl-k">=</span>j);<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">!==</span>(c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">||</span>k))<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>c;m<span class="pl-k">++</span>)<span class="pl-k">if</span>(m<span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;!</span>k<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">+=</span>g),b[m])b[m].<span class="pl-en">destroyElements</span>(),b[m].<span class="pl-smi">plotX</span><span class="pl-k">=</span>s;<span class="pl-c1">this</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>l},<span class="pl-en">getExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">processedXData</span>,d,e<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>.<span class="pl-en">getExtremes</span>();</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">min</span>,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">max</span>,i,k,j,l,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">stackedYData</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">processedYData</span>;d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>d;l<span class="pl-k">++</span>)<span class="pl-k">if</span>(k<span class="pl-k">=</span>c[l],j<span class="pl-k">=</span>a[l],i<span class="pl-k">=</span>j<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>j<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">isLog</span><span class="pl-k">||</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span><span class="pl-k">||</span>j<span class="pl-k">&gt;</span><span class="pl-c1">0</span>),k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">getExtremesFromAll</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">cropped</span><span class="pl-k">||</span>(c[l<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>k)<span class="pl-k">&gt;=</span>g<span class="pl-k">&amp;&amp;</span>(c[l<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>k)<span class="pl-k">&lt;=</span>h,i<span class="pl-k">&amp;&amp;</span>k)<span class="pl-k">if</span>(i<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(;i<span class="pl-k">--</span>;)j[i]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(e[f<span class="pl-k">++</span>]<span class="pl-k">=</span>j[i]);<span class="pl-k">else</span> e[f<span class="pl-k">++</span>]<span class="pl-k">=</span>j;<span class="pl-c1">this</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-en">Sa</span>(e));<span class="pl-c1">this</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-en">Aa</span>(e))},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">processedXData</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">processData</span>();<span class="pl-c1">this</span>.<span class="pl-en">generatePoints</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stacking</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">categories</span>,</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>,h<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-c1">this</span>.<span class="pl-smi">modifyValue</span>,i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pointPlacement</span>,k<span class="pl-k">=</span>i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-en">za</span>(i),j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">threshold</span>,a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>g;a<span class="pl-k">++</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span>f[a],m<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">x</span>,o<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span>,p<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">low</span>,q<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">stacks</span>[(<span class="pl-c1">this</span>.<span class="pl-smi">negStacks</span><span class="pl-k">&amp;&amp;</span>o<span class="pl-k">&lt;</span>j<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">stackKey</span>];<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>o<span class="pl-k">&lt;=</span><span class="pl-c1">0</span>)<span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>o<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">l</span>.<span class="pl-smi">plotX</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">translate</span>(m,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,i,<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>flags<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>q<span class="pl-k">&amp;&amp;</span>q[m])q<span class="pl-k">=</span>q[m],o<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-smi">points</span>[<span class="pl-c1">this</span>.<span class="pl-c1">index</span>],p<span class="pl-k">=</span>o[<span class="pl-c1">0</span>],o<span class="pl-k">=</span>o[<span class="pl-c1">1</span>],p<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-en">n</span>(j,<span class="pl-smi">e</span>.<span class="pl-smi">min</span>)),<span class="pl-smi">e</span>.<span class="pl-smi">isLog</span><span class="pl-k">&amp;&amp;</span>p<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-c1">null</span>),<span class="pl-smi">l</span>.<span class="pl-smi">total</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">stackTotal</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-smi">total</span>,<span class="pl-smi">l</span>.<span class="pl-smi">percentage</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-smi">total</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">/</span><span class="pl-smi">q</span>.<span class="pl-smi">total</span><span class="pl-k">*</span><span class="pl-c1">100</span>,<span class="pl-smi">l</span>.<span class="pl-smi">stackY</span><span class="pl-k">=</span>o,<span class="pl-smi">q</span>.<span class="pl-en">setOffset</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pointXOffset</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">barW</span><span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-smi">l</span>.<span class="pl-smi">yBottom</span><span class="pl-k">=</span><span class="pl-en">r</span>(p)<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-en">translate</span>(p,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">null</span>;h<span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">modifyValue</span>(o,l));<span class="pl-smi">l</span>.<span class="pl-smi">plotY</span><span class="pl-k">=</span><span class="pl-k">typeof</span> o<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>o<span class="pl-k">!==</span><span class="pl-c1">Infinity</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-en">translate</span>(o,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">:</span>s;<span class="pl-smi">l</span>.<span class="pl-smi">clientX</span><span class="pl-k">=</span>k<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">translate</span>(m,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-smi">plotX</span>;<span class="pl-smi">l</span>.<span class="pl-smi">negative</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span>(j<span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-smi">l</span>.<span class="pl-smi">category</span><span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>d[<span class="pl-smi">l</span>.<span class="pl-c1">x</span>]<span class="pl-k">!==</span>s<span class="pl-k">?</span>d[<span class="pl-smi">l</span>.<span class="pl-c1">x</span>]<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-c1">x</span>}<span class="pl-c1">this</span>.<span class="pl-en">getSegments</span>()},<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>,e;e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">animation</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">clipBox</span>,g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">inverted</span>,h;<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;!</span><span class="pl-en">ba</span>(e))e<span class="pl-k">=</span><span class="pl-c1">V</span>[<span class="pl-smi">b</span>.<span class="pl-c1">type</span>].<span class="pl-smi">animation</span>;h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>_sharedClip<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">duration</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">easing</span>;<span class="pl-k">if</span>(a)a<span class="pl-k">=</span>c[h],e<span class="pl-k">=</span>c[h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>],a<span class="pl-k">||</span>(c[h]<span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">clipRect</span>(<span class="pl-en">u</span>(f,</td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line">{width<span class="pl-k">:</span><span class="pl-c1">0</span>})),c[h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">clipRect</span>(<span class="pl-k">-</span><span class="pl-c1">99</span>,g<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">plotTop</span>,<span class="pl-c1">99</span>,g<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">chartWidth</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">chartHeight</span>)),<span class="pl-smi">b</span>.<span class="pl-smi">group</span>.<span class="pl-c1">clip</span>(a),<span class="pl-smi">b</span>.<span class="pl-smi">markerGroup</span>.<span class="pl-c1">clip</span>(e),<span class="pl-smi">b</span>.<span class="pl-smi">sharedClipKey</span><span class="pl-k">=</span>h;<span class="pl-k">else</span>{<span class="pl-k">if</span>(a<span class="pl-k">=</span>c[h])<span class="pl-smi">a</span>.<span class="pl-c1">animate</span>({width<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">plotSizeX</span>},e),c[h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">animate</span>({width<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">plotSizeX</span><span class="pl-k">+</span><span class="pl-c1">99</span>},e);<span class="pl-smi">b</span>.<span class="pl-smi">animate</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">b</span>.<span class="pl-smi">animationTimeout</span><span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-en">afterAnimate</span>()},<span class="pl-smi">e</span>.<span class="pl-smi">duration</span>)}},<span class="pl-en">afterAnimate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">sharedClipKey</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">group</span>;c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">clip</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-c1">clip</span>(<span class="pl-smi">a</span>.<span class="pl-smi">clipRect</span>),<span class="pl-c1">this</span>.<span class="pl-smi">markerGroup</span>.<span class="pl-c1">clip</span>());<span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){b<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line">a[b]<span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">=</span>a[b].<span class="pl-en">destroy</span>(),a[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>].<span class="pl-en">destroy</span>())},<span class="pl-c1">100</span>)},<span class="pl-en">drawPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,d,e,f,g,h,i,k,j,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span>,m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>],o,p<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">markerGroup</span>;<span class="pl-k">if</span>(<span class="pl-smi">l</span>.<span class="pl-smi">enabled</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_hasPointMarkers</span>)<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;f<span class="pl-k">--</span>;)<span class="pl-k">if</span>(g<span class="pl-k">=</span>b[f],d<span class="pl-k">=</span><span class="pl-en">T</span>(<span class="pl-smi">g</span>.<span class="pl-smi">plotX</span>),e<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">plotY</span>,j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">graphic</span>,i<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">marker</span><span class="pl-k">||</span>{},a<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-smi">enabled</span><span class="pl-k">===</span>s<span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-smi">enabled</span>,o<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-en">t</span>(d),e,<span class="pl-smi">c</span>.<span class="pl-smi">inverted</span>),a<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-smi">g</span>.<span class="pl-c1">selected</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span>m,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>,i<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">i</span>.<span class="pl-smi">symbol</span>,<span class="pl-c1">this</span>.<span class="pl-smi">symbol</span>),k<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>url<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,j)<span class="pl-smi">j</span>.<span class="pl-en">attr</span>({visibility<span class="pl-k">:</span>o<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">animate</span>(<span class="pl-en">u</span>({x<span class="pl-k">:</span>d<span class="pl-k">-</span>h,y<span class="pl-k">:</span>e<span class="pl-k">-</span>h},<span class="pl-smi">j</span>.<span class="pl-smi">symbolName</span><span class="pl-k">?</span>{width<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>h,height<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>h}<span class="pl-k">:</span>{}));<span class="pl-k">else</span>{<span class="pl-k">if</span>(o<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>k))<span class="pl-smi">g</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">symbol</span>(i,d<span class="pl-k">-</span>h,e<span class="pl-k">-</span>h,<span class="pl-c1">2</span><span class="pl-k">*</span>h,<span class="pl-c1">2</span><span class="pl-k">*</span>h).<span class="pl-en">attr</span>(a).<span class="pl-c1">add</span>(p)}<span class="pl-k">else</span> <span class="pl-k">if</span>(j)<span class="pl-smi">g</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">destroy</span>()},<span class="pl-en">convertAttribs</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointAttrToOptions</span>,f,g,h<span class="pl-k">=</span>{},a<span class="pl-k">=</span>a<span class="pl-k">||</span>{},b<span class="pl-k">=</span>b<span class="pl-k">||</span>{},c<span class="pl-k">=</span>c<span class="pl-k">||</span>{},d<span class="pl-k">=</span>d<span class="pl-k">||</span>{};<span class="pl-k">for</span>(f <span class="pl-k">in</span> e)g<span class="pl-k">=</span>e[f],h[f]<span class="pl-k">=</span><span class="pl-en">n</span>(a[g],b[f],c[f],d[f]);<span class="pl-k">return</span> h},<span class="pl-en">getAttribs</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-c1">V</span>[<span class="pl-smi">a</span>.<span class="pl-c1">type</span>].<span class="pl-smi">marker</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">marker</span><span class="pl-k">:</span>b,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">states</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">hover</span>,f,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span>;f<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>g,</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line">fill<span class="pl-k">:</span>g};<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">points</span><span class="pl-k">||</span>[],i,k<span class="pl-k">=</span>[],j,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pointAttrToOptions</span>;j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hasPointSpecificOptions</span>;<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">negativeColor</span>,o<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">lineColor</span>,p<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">fillColor</span>;i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">turboThreshold</span>;<span class="pl-k">var</span> n;<span class="pl-smi">b</span>.<span class="pl-smi">marker</span><span class="pl-k">?</span>(<span class="pl-smi">e</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">radius</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">radius</span><span class="pl-k">+</span><span class="pl-c1">2</span>,<span class="pl-smi">e</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-en">Ea</span>(<span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">||</span>g).<span class="pl-en">brighten</span>(<span class="pl-smi">e</span>.<span class="pl-smi">brightness</span>).<span class="pl-c1">get</span>();k[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(c,f);<span class="pl-en">q</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){k[b]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(d[b],k[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>])});<span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span><span class="pl-k">=</span>k;g<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>i<span class="pl-k">||</span>g<span class="pl-k">&lt;</span>i<span class="pl-k">||</span>j)<span class="pl-k">for</span>(;g<span class="pl-k">--</span>;){i<span class="pl-k">=</span>h[g];<span class="pl-k">if</span>((c<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-c1">options</span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-smi">c</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-smi">negative</span><span class="pl-k">&amp;&amp;</span>m)<span class="pl-smi">i</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">fillColor</span><span class="pl-k">=</span>m;j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">colorByPoint</span><span class="pl-k">||</span><span class="pl-smi">i</span>.<span class="pl-c1">color</span>;<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-c1">options</span>)<span class="pl-k">for</span>(n <span class="pl-k">in</span> l)<span class="pl-en">r</span>(c[l[n]])<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(j){c<span class="pl-k">=</span>c<span class="pl-k">||</span>{};j<span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">states</span><span class="pl-k">||</span>{};f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">hover</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">hover</span><span class="pl-k">||</span>{};<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">marker</span>)<span class="pl-smi">f</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">color</span><span class="pl-k">||!</span><span class="pl-smi">i</span>.<span class="pl-c1">options</span>.<span class="pl-c1">color</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-en">Ea</span>(<span class="pl-smi">i</span>.<span class="pl-c1">color</span>).<span class="pl-en">brighten</span>(<span class="pl-smi">f</span>.<span class="pl-smi">brightness</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">brightness</span>).<span class="pl-c1">get</span>();f<span class="pl-k">=</span>{color<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-c1">color</span>};<span class="pl-k">if</span>(<span class="pl-k">!</span>p)<span class="pl-smi">f</span>.<span class="pl-smi">fillColor</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">color</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>o)<span class="pl-smi">f</span>.<span class="pl-smi">lineColor</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">color</span>;j[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(<span class="pl-en">u</span>(f,c),k[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]);<span class="pl-smi">j</span>.<span class="pl-smi">hover</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(<span class="pl-smi">d</span>.<span class="pl-smi">hover</span>,<span class="pl-smi">k</span>.<span class="pl-smi">hover</span>,j[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]);<span class="pl-smi">j</span>.<span class="pl-smi">select</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">convertAttribs</span>(<span class="pl-smi">d</span>.<span class="pl-smi">select</span>,<span class="pl-smi">k</span>.<span class="pl-smi">select</span>,</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line">j[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>])}<span class="pl-k">else</span> j<span class="pl-k">=</span>k;<span class="pl-smi">i</span>.<span class="pl-smi">pointAttr</span><span class="pl-k">=</span>j}},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>AppleWebKit<span class="pl-cce">\/</span>533<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(Da),d,e,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span><span class="pl-k">||</span>[],g,h,i;<span class="pl-en">P</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>);<span class="pl-en">S</span>(a);<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">axisTypes</span><span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(i<span class="pl-k">=</span>a[b])<span class="pl-en">ma</span>(<span class="pl-smi">i</span>.<span class="pl-smi">series</span>,a),<span class="pl-smi">i</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">forceRedraw</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-smi">a</span>.<span class="pl-smi">legendItem</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">legend</span>.<span class="pl-en">destroyItem</span>(a);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)(g<span class="pl-k">=</span>f[e])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">destroy</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">destroy</span>();<span class="pl-smi">a</span>.<span class="pl-smi">points</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">clearTimeout</span>(<span class="pl-smi">a</span>.<span class="pl-smi">animationTimeout</span>);<span class="pl-en">q</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>area,graph,dataLabelsGroup,group,markerGroup,tracker,graphNeg,areaNeg,posClip,negClip<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){a[b]<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,a[b][d]())});<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">===</span>a)<span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">ma</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,a);<span class="pl-k">for</span>(h <span class="pl-k">in</span> a)<span class="pl-k">delete</span> a[h]},<span class="pl-en">getSegmentPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">step</span>;<span class="pl-en">q</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">plotX</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">plotY</span>,i;<span class="pl-smi">b</span>.<span class="pl-smi">getPointSpline</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">push</span>.<span class="pl-c1">apply</span>(c,<span class="pl-smi">b</span>.<span class="pl-en">getPointSpline</span>(a,e,f))<span class="pl-k">:</span>(<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(f<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span>a[f<span class="pl-k">-</span><span class="pl-c1">1</span>],d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">i</span>.<span class="pl-smi">plotX</span>,h)<span class="pl-k">:</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>((<span class="pl-smi">i</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>g)<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-smi">i</span>.<span class="pl-smi">plotY</span>,(<span class="pl-smi">i</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>g)<span class="pl-k">/</span><span class="pl-c1">2</span>,h)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(g,<span class="pl-smi">i</span>.<span class="pl-smi">plotY</span>)),<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">e</span>.<span class="pl-smi">plotX</span>,<span class="pl-smi">e</span>.<span class="pl-smi">plotY</span>))});<span class="pl-k">return</span> c},<span class="pl-en">getGraphPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span>[],c,d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line">[];<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">segments</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getSegmentPath</span>(e);<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(c)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(e[<span class="pl-c1">0</span>])});<span class="pl-smi">a</span>.<span class="pl-smi">singlePoints</span><span class="pl-k">=</span>d;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">graphPath</span><span class="pl-k">=</span>b},<span class="pl-en">drawGraph</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span>[[<span class="pl-s"><span class="pl-pds">&quot;</span>graph<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-smi">lineColor</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span>]],d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">lineWidth</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dashStyle</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">linecap</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>square<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getGraphPath</span>(),h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">negativeColor</span>;h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>graphNeg<span class="pl-pds">&quot;</span></span>,h]);<span class="pl-en">q</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> j<span class="pl-k">=</span>c[<span class="pl-c1">0</span>],l<span class="pl-k">=</span>a[j];<span class="pl-k">if</span>(l)<span class="pl-en">eb</span>(l),<span class="pl-smi">l</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>g});<span class="pl-k">else</span> <span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>)l<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>c[<span class="pl-c1">1</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>d,fill<span class="pl-k">:</span><span class="pl-c1">X</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>},e<span class="pl-k">?</span><span class="pl-smi">l</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">=</span>e<span class="pl-k">:</span>f<span class="pl-k">&amp;&amp;</span>(l[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-linecap<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line">l[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-linejoin<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>),a[j]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">path</span>(g).<span class="pl-en">attr</span>(l).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>).<span class="pl-en">shadow</span>(<span class="pl-k">!</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">shadow</span>)})},<span class="pl-en">clipNeg</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">negativeColor</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">negativeFillColor</span>,e,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">graph</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">area</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">posClip</span>,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">negClip</span>;e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chartWidth</span>;<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chartHeight</span>,j<span class="pl-k">=</span><span class="pl-en">v</span>(e,k),l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>;<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">||</span>g)){d<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">l</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">a</span>.<span class="pl-smi">threshold</span><span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>));d<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">-=</span>d);a<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span>j,height<span class="pl-k">:</span>d};j<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span>d,width<span class="pl-k">:</span>j,height<span class="pl-k">:</span>j};<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">inverted</span>)<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span>d,<span class="pl-smi">c</span>.<span class="pl-smi">isVML</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span>e,height<span class="pl-k">:</span>k},j<span class="pl-k">=</span>{x<span class="pl-k">:</span>d<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">-</span>e,y<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">+</span>d,height<span class="pl-k">:</span>e});<span class="pl-smi">l</span>.<span class="pl-smi">reversed</span><span class="pl-k">?</span>(b<span class="pl-k">=</span>j,e<span class="pl-k">=</span>a)<span class="pl-k">:</span>(b<span class="pl-k">=</span>a,e<span class="pl-k">=</span>j);h<span class="pl-k">?</span>(<span class="pl-smi">h</span>.<span class="pl-c1">animate</span>(b),<span class="pl-smi">i</span>.<span class="pl-c1">animate</span>(e))<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">posClip</span><span class="pl-k">=</span>h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">clipRect</span>(b),<span class="pl-c1">this</span>.<span class="pl-smi">negClip</span><span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">clipRect</span>(e),f<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">graphNeg</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-c1">clip</span>(h),<span class="pl-c1">this</span>.<span class="pl-smi">graphNeg</span>.<span class="pl-c1">clip</span>(i)),g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">g</span>.<span class="pl-c1">clip</span>(h),<span class="pl-c1">this</span>.<span class="pl-smi">areaNeg</span>.<span class="pl-c1">clip</span>(i)))}},<span class="pl-en">invertGroups</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">len</span>,height<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">len</span>};<span class="pl-en">q</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">c</span>){b[c]<span class="pl-k">&amp;&amp;</span>b[c].<span class="pl-en">attr</span>(a).<span class="pl-en">invert</span>()})}<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>)<span class="pl-en">D</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,a),<span class="pl-en">D</span>(b,</td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-en">S</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,a)}),<span class="pl-en">a</span>(),<span class="pl-smi">b</span>.<span class="pl-smi">invertGroups</span><span class="pl-k">=</span>a},<span class="pl-en">plotGroup</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>[a],g<span class="pl-k">=</span><span class="pl-k">!</span>f;g<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>[a]<span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">g</span>(b).<span class="pl-en">attr</span>({visibility<span class="pl-k">:</span>c,zIndex<span class="pl-k">:</span>d<span class="pl-k">||</span><span class="pl-c1">0.1</span>}).<span class="pl-c1">add</span>(e));f[g<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](<span class="pl-c1">this</span>.<span class="pl-en">getPlotBox</span>());<span class="pl-k">return</span> f},<span class="pl-en">getPlotBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{translateX<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>.<span class="pl-c1">left</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">plotLeft</span>,translateY<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>.<span class="pl-c1">top</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">plotTop</span>,scaleX<span class="pl-k">:</span><span class="pl-c1">1</span>,scaleY<span class="pl-k">:</span><span class="pl-c1">1</span>}},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">animation</span><span class="pl-k">&amp;&amp;!!</span><span class="pl-c1">this</span>.<span class="pl-smi">animate</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">isSVG</span>,</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">zIndex</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">hasRendered</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">seriesGroup</span>;b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">plotGroup</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>series<span class="pl-pds">&quot;</span></span>,e,f,h);<span class="pl-c1">this</span>.<span class="pl-smi">markerGroup</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">plotGroup</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>markers<span class="pl-pds">&quot;</span></span>,e,f,h);d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">animate</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-en">getAttribs</span>();<span class="pl-smi">b</span>.<span class="pl-smi">inverted</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isCartesian</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">drawGraph</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">drawGraph</span>(),<span class="pl-c1">this</span>.<span class="pl-en">clipNeg</span>());<span class="pl-c1">this</span>.<span class="pl-smi">drawDataLabels</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">drawDataLabels</span>();<span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">drawPoints</span>();<span class="pl-c1">this</span>.<span class="pl-smi">drawTracker</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">enableMouseTracking</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">drawTracker</span>();<span class="pl-smi">a</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">invertGroups</span>();<span class="pl-smi">c</span>.<span class="pl-c1">clip</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">sharedClipKey</span><span class="pl-k">&amp;&amp;!</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">clip</span>(<span class="pl-smi">a</span>.<span class="pl-smi">clipRect</span>);d<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">animate</span>()<span class="pl-k">:</span>g<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">afterAnimate</span>();<span class="pl-c1">this</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">redraw</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isDirtyData</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">group</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>;c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">attr</span>({width<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotWidth</span>,height<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">plotHeight</span>}),<span class="pl-smi">c</span>.<span class="pl-c1">animate</span>({translateX<span class="pl-k">:</span><span class="pl-en">n</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">left</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotLeft</span>),translateY<span class="pl-k">:</span><span class="pl-en">n</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">top</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotTop</span>)}));<span class="pl-c1">this</span>.<span class="pl-en">translate</span>();<span class="pl-c1">this</span>.<span class="pl-en">setTooltipPoints</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-en">render</span>();b<span class="pl-k">&amp;&amp;</span><span class="pl-en">P</span>(<span class="pl-c1">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>updatedData<span class="pl-pds">&quot;</span></span>)}};<span class="pl-smi">Qb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">Ka</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>)},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">format</span>,c<span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-en">Ja</span>(c,<span class="pl-c1">this</span>)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">formatter</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-c1">label</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>c,visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>})<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">text</span>(c,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">css</span>(<span class="pl-smi">b</span>.<span class="pl-c1">style</span>).<span class="pl-en">attr</span>({align<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">textAlign</span>,rotation<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">rotation</span>,visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">add</span>(a)},<span class="pl-en">setOffset</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">axis</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">inverted</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isNegative</span>,g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">translate</span>(<span class="pl-c1">this</span>.<span class="pl-smi">percent</span><span class="pl-k">?</span><span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">total</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>),c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">translate</span>(<span class="pl-c1">0</span>),c<span class="pl-k">=</span><span class="pl-en">O</span>(g<span class="pl-k">-</span>c),h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>].<span class="pl-en">translate</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">+</span>a,i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotHeight</span>,</td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span>{x<span class="pl-k">:</span>e<span class="pl-k">?</span>f<span class="pl-k">?</span>g<span class="pl-k">:</span>g<span class="pl-k">-</span>c<span class="pl-k">:</span>h,y<span class="pl-k">:</span>e<span class="pl-k">?</span>i<span class="pl-k">-</span>h<span class="pl-k">-</span>b<span class="pl-k">:</span>f<span class="pl-k">?</span>i<span class="pl-k">-</span>g<span class="pl-k">-</span>c<span class="pl-k">:</span>i<span class="pl-k">-</span>g,width<span class="pl-k">:</span>e<span class="pl-k">?</span>c<span class="pl-k">:</span>b,height<span class="pl-k">:</span>e<span class="pl-k">?</span>b<span class="pl-k">:</span>c};<span class="pl-k">if</span>(e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">label</span>)<span class="pl-smi">e</span>.<span class="pl-c1">align</span>(<span class="pl-c1">this</span>.<span class="pl-smi">alignOptions</span>,<span class="pl-c1">null</span>,f),f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">alignAttr</span>,e[<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">crop</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>](<span class="pl-k">!</span><span class="pl-c1">0</span>)}};<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">buildStacks</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,b<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">reversedStacks</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span>){<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">usePercentage</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;c<span class="pl-k">--</span>;)a[b<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-en">setStackedPoints</span>();<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">usePercentage</span>)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)a[c].<span class="pl-en">setPercentStacks</span>()}};<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">renderStackTotals</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">stacks</span>,d,e,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">stackTotalGroup</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>f)<span class="pl-c1">this</span>.<span class="pl-smi">stackTotalGroup</span><span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stack-labels<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">6</span>}).<span class="pl-c1">add</span>();<span class="pl-smi">f</span>.<span class="pl-en">translate</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotLeft</span>,<span class="pl-smi">a</span>.<span class="pl-smi">plotTop</span>);<span class="pl-k">for</span>(d <span class="pl-k">in</span> c)<span class="pl-k">for</span>(e <span class="pl-k">in</span> a<span class="pl-k">=</span>c[d],a)a[e].<span class="pl-en">render</span>(f)};<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setStackedPoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;!</span>(<span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">ignoreHiddenSeries</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>)){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">processedXData</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">processedYData</span>,c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">threshold</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">stack</span>,e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">stacking</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">stackKey</span>,</td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">negStacks</span>,j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>,l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">stacks</span>,m<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">oldStacks</span>,o,p,n,q,z;<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>d;n<span class="pl-k">++</span>){q<span class="pl-k">=</span>a[n];z<span class="pl-k">=</span>b[n];p<span class="pl-k">=</span>(o<span class="pl-k">=</span>k<span class="pl-k">&amp;&amp;</span>z<span class="pl-k">&lt;</span>f)<span class="pl-k">?</span>i<span class="pl-k">:</span>h;l[p]<span class="pl-k">||</span>(l[p]<span class="pl-k">=</span>{});<span class="pl-k">if</span>(<span class="pl-k">!</span>l[p][q])m[p]<span class="pl-k">&amp;&amp;</span>m[p][q]<span class="pl-k">?</span>(l[p][q]<span class="pl-k">=</span>m[p][q],l[p][q].<span class="pl-smi">total</span><span class="pl-k">=</span><span class="pl-c1">null</span>)<span class="pl-k">:</span>l[p][q]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Qb</span>(j,<span class="pl-smi">j</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stackLabels</span>,o,q,g,e);p<span class="pl-k">=</span>l[p][q];<span class="pl-smi">p</span>.<span class="pl-smi">points</span>[<span class="pl-c1">this</span>.<span class="pl-c1">index</span>]<span class="pl-k">=</span>[<span class="pl-smi">p</span>.<span class="pl-smi">cum</span><span class="pl-k">||</span><span class="pl-c1">0</span>];e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>percent<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(o<span class="pl-k">=</span>o<span class="pl-k">?</span>h<span class="pl-k">:</span>i,k<span class="pl-k">&amp;&amp;</span>l[o]<span class="pl-k">&amp;&amp;</span>l[o][q]<span class="pl-k">?</span>(o<span class="pl-k">=</span>l[o][q],<span class="pl-smi">p</span>.<span class="pl-smi">total</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">total</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-smi">o</span>.<span class="pl-smi">total</span>,<span class="pl-smi">p</span>.<span class="pl-smi">total</span>)<span class="pl-k">+</span><span class="pl-en">O</span>(z)<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">p</span>.<span class="pl-smi">total</span><span class="pl-k">=</span><span class="pl-en">ea</span>(<span class="pl-smi">p</span>.<span class="pl-smi">total</span><span class="pl-k">+</span>(<span class="pl-en">O</span>(z)<span class="pl-k">||</span><span class="pl-c1">0</span>)))<span class="pl-k">:</span><span class="pl-smi">p</span>.<span class="pl-smi">total</span><span class="pl-k">=</span><span class="pl-en">ea</span>(<span class="pl-smi">p</span>.<span class="pl-smi">total</span><span class="pl-k">+</span>(z<span class="pl-k">||</span><span class="pl-c1">0</span>));<span class="pl-smi">p</span>.<span class="pl-smi">cum</span><span class="pl-k">=</span>(<span class="pl-smi">p</span>.<span class="pl-smi">cum</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(z<span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-smi">p</span>.<span class="pl-smi">points</span>[<span class="pl-c1">this</span>.<span class="pl-c1">index</span>].<span class="pl-c1">push</span>(<span class="pl-smi">p</span>.<span class="pl-smi">cum</span>);c[n]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">p</span>.<span class="pl-smi">cum</span>}<span class="pl-k">if</span>(e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>percent<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">j</span>.<span class="pl-smi">usePercentage</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">stackedYData</span><span class="pl-k">=</span>c;<span class="pl-smi">j</span>.<span class="pl-smi">oldStacks</span><span class="pl-k">=</span>{}}};<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setPercentStacks</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stackKey</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>.<span class="pl-smi">stacks</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">processedXData</span>;<span class="pl-en">q</span>([b,<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> e;<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,g,h;f<span class="pl-k">--</span>;)<span class="pl-k">if</span>(g<span class="pl-k">=</span>d[f],e<span class="pl-k">=</span>(h<span class="pl-k">=</span>c[b]<span class="pl-k">&amp;&amp;</span>c[b][g])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">points</span>[<span class="pl-smi">a</span>.<span class="pl-c1">index</span>],g<span class="pl-k">=</span>e)h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">total</span><span class="pl-k">?</span><span class="pl-c1">100</span><span class="pl-k">/</span><span class="pl-smi">h</span>.<span class="pl-smi">total</span><span class="pl-k">:</span><span class="pl-c1">0</span>,g[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-en">ea</span>(g[<span class="pl-c1">0</span>]<span class="pl-k">*</span>h),g[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-en">ea</span>(g[<span class="pl-c1">1</span>]<span class="pl-k">*</span>h),<span class="pl-smi">a</span>.<span class="pl-smi">stackedYData</span>[f]<span class="pl-k">=</span>g[<span class="pl-c1">1</span>]})};<span class="pl-en">u</span>(<span class="pl-smi">sa</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">addSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-c1">this</span>;a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-en">n</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-en">P</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>addSeries<span class="pl-pds">&quot;</span></span>,{options<span class="pl-k">:</span>a},<span class="pl-k">function</span>(){d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">initSeries</span>(a);<span class="pl-smi">e</span>.<span class="pl-smi">isDirtyLegend</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">e</span>.<span class="pl-en">linkSeries</span>();b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">redraw</span>(c)}));<span class="pl-k">return</span> d},<span class="pl-en">addAxis</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>;<span class="pl-k">new</span> <span class="pl-en">N</span>(<span class="pl-c1">this</span>,<span class="pl-en">w</span>(a,{index<span class="pl-k">:</span><span class="pl-c1">this</span>[e].<span class="pl-c1">length</span>,isX<span class="pl-k">:</span>b}));f[e]<span class="pl-k">=</span><span class="pl-en">ia</span>(f[e]<span class="pl-k">||</span>{});f[e].<span class="pl-c1">push</span>(a);<span class="pl-en">n</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">redraw</span>(d)},<span class="pl-en">showLoading</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">loadingDiv</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">loading</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>c)<span class="pl-c1">this</span>.<span class="pl-smi">loadingDiv</span><span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-en">Y</span>(Ua,{className<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-loading<span class="pl-pds">&quot;</span></span>},<span class="pl-en">u</span>(<span class="pl-smi">d</span>.<span class="pl-c1">style</span>,{zIndex<span class="pl-k">:</span><span class="pl-c1">10</span>,display<span class="pl-k">:</span><span class="pl-c1">X</span>}),<span class="pl-c1">this</span>.<span class="pl-smi">container</span>),<span class="pl-c1">this</span>.<span class="pl-smi">loadingSpan</span><span class="pl-k">=</span><span class="pl-en">Y</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-smi">d</span>.<span class="pl-smi">labelStyle</span>,c);<span class="pl-c1">this</span>.<span class="pl-smi">loadingSpan</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">lang</span>.<span class="pl-smi">loading</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">loadingShown</span>)<span class="pl-en">J</span>(c,</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line">{opacity<span class="pl-k">:</span><span class="pl-c1">0</span>,display<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">plotTop</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>}),<span class="pl-en">ob</span>(c,{opacity<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">style</span>.<span class="pl-smi">opacity</span>},{duration<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">showDuration</span><span class="pl-k">||</span><span class="pl-c1">0</span>}),<span class="pl-c1">this</span>.<span class="pl-smi">loadingShown</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">hideLoading</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">loadingDiv</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-en">ob</span>(b,{opacity<span class="pl-k">:</span><span class="pl-c1">0</span>},{duration<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">loading</span>.<span class="pl-smi">hideDuration</span><span class="pl-k">||</span><span class="pl-c1">100</span>,<span class="pl-en">complete</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">J</span>(b,{display<span class="pl-k">:</span><span class="pl-c1">X</span>})}});<span class="pl-c1">this</span>.<span class="pl-smi">loadingShown</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}});<span class="pl-en">u</span>(<span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">series</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">graphic</span>,g,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">data</span>,i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">chart</span>,k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-en">n</span>(b,</td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">d</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>update<span class="pl-pds">&quot;</span></span>,{options<span class="pl-k">:</span>a},<span class="pl-k">function</span>(){<span class="pl-smi">d</span>.<span class="pl-en">applyOptions</span>(a);<span class="pl-k">if</span>(<span class="pl-en">ba</span>(a)){<span class="pl-smi">e</span>.<span class="pl-en">getAttribs</span>();<span class="pl-k">if</span>(f)a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">marker</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">marker</span>.<span class="pl-smi">symbol</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">destroy</span>()<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-en">attr</span>(<span class="pl-smi">d</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-smi">d</span>.<span class="pl-smi">state</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]);<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">dataLabels</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">dataLabel</span>)<span class="pl-smi">d</span>.<span class="pl-smi">dataLabel</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">dataLabel</span>.<span class="pl-en">destroy</span>()}g<span class="pl-k">=</span><span class="pl-en">ua</span>(d,h);<span class="pl-smi">e</span>.<span class="pl-en">updateParallelArrays</span>(d,g);<span class="pl-smi">k</span>.<span class="pl-c1">data</span>[g]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>;<span class="pl-smi">e</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-smi">fixedBox</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">hasCartesianSeries</span>)<span class="pl-smi">i</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">legendType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-smi">legend</span>.<span class="pl-en">destroyItem</span>(d);b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-en">redraw</span>(c)})},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">series</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">points</span>,</td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chart</span>,g,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">data</span>;<span class="pl-en">Za</span>(b,f);a<span class="pl-k">=</span><span class="pl-en">n</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">c</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>remove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-k">function</span>(){g<span class="pl-k">=</span><span class="pl-en">ua</span>(c,h);<span class="pl-smi">h</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">splice</span>(g,<span class="pl-c1">1</span>);<span class="pl-smi">h</span>.<span class="pl-c1">splice</span>(g,<span class="pl-c1">1</span>);<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>.<span class="pl-c1">splice</span>(g,<span class="pl-c1">1</span>);<span class="pl-smi">d</span>.<span class="pl-en">updateParallelArrays</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>splice<span class="pl-pds">&quot;</span></span>,g,<span class="pl-c1">1</span>);<span class="pl-smi">c</span>.<span class="pl-en">destroy</span>();<span class="pl-smi">d</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">redraw</span>()})}});<span class="pl-en">u</span>(<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">addPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">graph</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">area</span>,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">names</span>,j<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">shift</span><span class="pl-k">||</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">data</span>,m,o<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xData</span>;<span class="pl-en">Za</span>(d,i);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>([g,h,<span class="pl-c1">this</span>.<span class="pl-smi">graphNeg</span>,<span class="pl-c1">this</span>.<span class="pl-smi">areaNeg</span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a)<span class="pl-smi">a</span>.<span class="pl-smi">shift</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">+</span><span class="pl-c1">1</span>});<span class="pl-k">if</span>(h)<span class="pl-smi">h</span>.<span class="pl-smi">isArea</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;b<span class="pl-k">=</span><span class="pl-en">n</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);d<span class="pl-k">=</span>{series<span class="pl-k">:</span><span class="pl-c1">this</span>};<span class="pl-c1">this</span>.<span class="pl-smi">pointClass</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">applyOptions</span>.<span class="pl-c1">apply</span>(d,[a]);g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span>;h<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">requireSorting</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&lt;</span>o[h<span class="pl-k">-</span><span class="pl-c1">1</span>])<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;h<span class="pl-k">&amp;&amp;</span>o[h<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>g;)h<span class="pl-k">--</span>;<span class="pl-c1">this</span>.<span class="pl-en">updateParallelArrays</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>splice<span class="pl-pds">&quot;</span></span>,h,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-en">updateParallelArrays</span>(d,h);<span class="pl-k">if</span>(k)k[g]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">name</span>;<span class="pl-smi">l</span>.<span class="pl-c1">splice</span>(h,<span class="pl-c1">0</span>,a);m<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">splice</span>(h,<span class="pl-c1">0</span>,<span class="pl-c1">null</span>),<span class="pl-c1">this</span>.<span class="pl-en">processData</span>());<span class="pl-smi">e</span>.<span class="pl-smi">legendType</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">generatePoints</span>();c<span class="pl-k">&amp;&amp;</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">0</span>].<span class="pl-smi">remove</span><span class="pl-k">?</span>f[<span class="pl-c1">0</span>].<span class="pl-c1">remove</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>(<span class="pl-smi">f</span>.<span class="pl-c1">shift</span>(),<span class="pl-c1">this</span>.<span class="pl-en">updateParallelArrays</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>shift<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">l</span>.<span class="pl-c1">shift</span>()));<span class="pl-c1">this</span>.<span class="pl-smi">isDirtyData</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;b<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">getAttribs</span>(),<span class="pl-smi">i</span>.<span class="pl-en">redraw</span>())},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>,a<span class="pl-k">=</span><span class="pl-en">n</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">isRemoving</span>)<span class="pl-smi">c</span>.<span class="pl-smi">isRemoving</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">P</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>remove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-k">function</span>(){<span class="pl-smi">c</span>.<span class="pl-en">destroy</span>();<span class="pl-smi">d</span>.<span class="pl-smi">isDirtyLegend</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-en">linkSeries</span>();a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">redraw</span>(b)});<span class="pl-smi">c</span>.<span class="pl-smi">isRemoving</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span>,e<span class="pl-k">=</span><span class="pl-c1">H</span>[d].<span class="pl-c1">prototype</span>,f,a<span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">this</span>.<span class="pl-smi">userOptions</span>,{animation<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,index<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">index</span>,pointStart<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">xData</span>[<span class="pl-c1">0</span>]},{data<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>},a);<span class="pl-c1">this</span>.<span class="pl-c1">remove</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(f <span class="pl-k">in</span> e)<span class="pl-smi">e</span>.<span class="pl-en">hasOwnProperty</span>(f)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>[f]<span class="pl-k">=</span>s);<span class="pl-en">u</span>(<span class="pl-c1">this</span>,<span class="pl-c1">H</span>[<span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">||</span>d].<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">init</span>(c,a);<span class="pl-en">n</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">redraw</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>)}});<span class="pl-en">u</span>(<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>[<span class="pl-c1">this</span>.<span class="pl-smi">coll</span>][<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">index</span>]<span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">this</span>.<span class="pl-smi">userOptions</span>,a);<span class="pl-c1">this</span>.<span class="pl-en">destroy</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_addedPlotLB</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userMin</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userMax</span><span class="pl-k">=</span>s;<span class="pl-c1">this</span>.<span class="pl-en">init</span>(c,<span class="pl-en">u</span>(a,{events<span class="pl-k">:</span>s}));<span class="pl-smi">c</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-en">n</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">redraw</span>()},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">coll</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">--</span>;)d[e]<span class="pl-k">&amp;&amp;</span>d[e].<span class="pl-c1">remove</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">ma</span>(<span class="pl-smi">b</span>.<span class="pl-smi">axes</span>,<span class="pl-c1">this</span>);<span class="pl-en">ma</span>(b[c],<span class="pl-c1">this</span>);<span class="pl-smi">b</span>.<span class="pl-c1">options</span>[c].<span class="pl-c1">splice</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">index</span>,<span class="pl-c1">1</span>);<span class="pl-en">q</span>(b[c],<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">index</span><span class="pl-k">=</span>b});</td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">destroy</span>();<span class="pl-smi">b</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-en">n</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">redraw</span>()},<span class="pl-en">setTitle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">update</span>({title<span class="pl-k">:</span>a},b)},<span class="pl-en">setCategories</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">update</span>({categories<span class="pl-k">:</span>a},b)}});<span class="pl-k">var</span> ya<span class="pl-k">=</span><span class="pl-en">ca</span>(<span class="pl-c1">M</span>);<span class="pl-c1">H</span>.<span class="pl-smi">line</span><span class="pl-k">=</span>ya;<span class="pl-c1">V</span>.<span class="pl-smi">area</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">L</span>,{threshold<span class="pl-k">:</span><span class="pl-c1">0</span>});<span class="pl-k">var</span> qa<span class="pl-k">=</span><span class="pl-en">ca</span>(<span class="pl-c1">M</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>area<span class="pl-pds">&quot;</span></span>,<span class="pl-en">getSegments</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[],b<span class="pl-k">=</span>[],c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">stacks</span>[<span class="pl-c1">this</span>.<span class="pl-smi">stackKey</span>],g<span class="pl-k">=</span>{},h,i,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>,j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">connectNulls</span>,l,m,o;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">cropped</span>){<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;m<span class="pl-k">++</span>)g[k[m].<span class="pl-c1">x</span>]<span class="pl-k">=</span>k[m];<span class="pl-k">for</span>(o <span class="pl-k">in</span> f)f[o].<span class="pl-smi">total</span><span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-k">+</span>o);</td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a<span class="pl-k">-</span>b});<span class="pl-en">q</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>j<span class="pl-k">||</span>g[a]<span class="pl-k">&amp;&amp;</span>g[a].<span class="pl-c1">y</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)g[a]<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(g[a])<span class="pl-k">:</span>(h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">translate</span>(a),l<span class="pl-k">=</span>f[a].<span class="pl-smi">percent</span><span class="pl-k">?</span>f[a].<span class="pl-smi">total</span><span class="pl-k">?</span>f[a].<span class="pl-smi">cum</span><span class="pl-k">*</span><span class="pl-c1">100</span><span class="pl-k">/</span>f[a].<span class="pl-smi">total</span><span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">:</span>f[a].<span class="pl-smi">cum</span>,i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">toPixels</span>(l,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-c1">push</span>({y<span class="pl-k">:</span><span class="pl-c1">null</span>,plotX<span class="pl-k">:</span>h,clientX<span class="pl-k">:</span>h,plotY<span class="pl-k">:</span>i,yBottom<span class="pl-k">:</span>i,onMouseOver<span class="pl-k">:</span>ta}))});<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(b)}<span class="pl-k">else</span> <span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getSegments</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>),a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">segments</span>;<span class="pl-c1">this</span>.<span class="pl-smi">segments</span><span class="pl-k">=</span>a},<span class="pl-en">getSegmentPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getSegmentPath</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a),c<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(b),d,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>;d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>.<span class="pl-en">getThreshold</span>(<span class="pl-smi">e</span>.<span class="pl-smi">threshold</span>),</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line">g;d<span class="pl-k">===</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,b[<span class="pl-c1">1</span>],b[<span class="pl-c1">2</span>]);<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">closedStacks</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;d<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;d<span class="pl-k">--</span>)g<span class="pl-k">=</span><span class="pl-en">n</span>(a[d].<span class="pl-smi">yBottom</span>,f),d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">step</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(a[d<span class="pl-k">+</span><span class="pl-c1">1</span>].<span class="pl-smi">plotX</span>,g),<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(a[d].<span class="pl-smi">plotX</span>,g);<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-en">closeSegment</span>(c,a,f);<span class="pl-c1">this</span>.<span class="pl-smi">areaPath</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">areaPath</span>.<span class="pl-c1">concat</span>(c);<span class="pl-k">return</span> b},<span class="pl-en">closeSegment</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-smi">plotX</span>,c,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,b[<span class="pl-c1">0</span>].<span class="pl-smi">plotX</span>,c)},<span class="pl-en">drawGraph</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">areaPath</span><span class="pl-k">=</span>[];<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawGraph</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">areaPath</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">negativeColor</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">negativeFillColor</span>,f<span class="pl-k">=</span>[[<span class="pl-s"><span class="pl-pds">&quot;</span>area<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">color</span>,<span class="pl-smi">c</span>.<span class="pl-smi">fillColor</span>]];(d<span class="pl-k">||</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">push</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>areaNeg<span class="pl-pds">&quot;</span></span>,d,e]);<span class="pl-en">q</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],f<span class="pl-k">=</span>a[e];f<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>b})<span class="pl-k">:</span>a[e]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">path</span>(b).<span class="pl-en">attr</span>({fill<span class="pl-k">:</span><span class="pl-en">n</span>(d[<span class="pl-c1">2</span>],<span class="pl-en">Ea</span>(d[<span class="pl-c1">1</span>]).<span class="pl-en">setOpacity</span>(<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">fillOpacity</span>,<span class="pl-c1">0.75</span>)).<span class="pl-c1">get</span>()),zIndex<span class="pl-k">:</span><span class="pl-c1">0</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>)})},drawLegendSymbol<span class="pl-k">:</span><span class="pl-c1">F</span>.<span class="pl-smi">drawRectangle</span>});<span class="pl-c1">H</span>.<span class="pl-smi">area</span><span class="pl-k">=</span>qa;<span class="pl-c1">V</span>.<span class="pl-smi">spline</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">L</span>);ya<span class="pl-k">=</span><span class="pl-en">ca</span>(<span class="pl-c1">M</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>spline<span class="pl-pds">&quot;</span></span>,<span class="pl-en">getPointSpline</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotX</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotY</span>,f<span class="pl-k">=</span>a[c<span class="pl-k">-</span><span class="pl-c1">1</span>],g<span class="pl-k">=</span>a[c<span class="pl-k">+</span><span class="pl-c1">1</span>],h,i,k,j;<span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span>g){a<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">plotY</span>;k<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">plotX</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">plotY</span>,l;h<span class="pl-k">=</span>(<span class="pl-c1">1.5</span><span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">plotX</span>)<span class="pl-k">/</span><span class="pl-c1">2.5</span>;i<span class="pl-k">=</span>(<span class="pl-c1">1.5</span><span class="pl-k">*</span>e<span class="pl-k">+</span>a)<span class="pl-k">/</span><span class="pl-c1">2.5</span>;k<span class="pl-k">=</span>(<span class="pl-c1">1.5</span><span class="pl-k">*</span>d<span class="pl-k">+</span>k)<span class="pl-k">/</span><span class="pl-c1">2.5</span>;j<span class="pl-k">=</span>(<span class="pl-c1">1.5</span><span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">+</span>g)<span class="pl-k">/</span><span class="pl-c1">2.5</span>;l<span class="pl-k">=</span>(j<span class="pl-k">-</span>i)<span class="pl-k">*</span>(k<span class="pl-k">-</span>d)<span class="pl-k">/</span>(k<span class="pl-k">-</span>h)<span class="pl-k">+</span>e<span class="pl-k">-</span>j;i<span class="pl-k">+=</span>l;j<span class="pl-k">+=</span>l;i<span class="pl-k">&gt;</span>a<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&gt;</span>e<span class="pl-k">?</span>(i<span class="pl-k">=</span><span class="pl-en">v</span>(a,e),j<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">-</span>i)<span class="pl-k">:</span>i<span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&lt;</span>e<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span><span class="pl-en">x</span>(a,e),j<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">-</span>i);j<span class="pl-k">&gt;</span>g<span class="pl-k">&amp;&amp;</span>j<span class="pl-k">&gt;</span>e<span class="pl-k">?</span>(j<span class="pl-k">=</span><span class="pl-en">v</span>(g,e),i<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">-</span>j)<span class="pl-k">:</span>j<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>j<span class="pl-k">&lt;</span>e<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-en">x</span>(g,e),i<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">-</span>j);<span class="pl-smi">b</span>.<span class="pl-smi">rightContX</span><span class="pl-k">=</span>k;<span class="pl-smi">b</span>.<span class="pl-smi">rightContY</span><span class="pl-k">=</span>j}c<span class="pl-k">?</span>(b<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">rightContX</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">plotX</span>,<span class="pl-smi">f</span>.<span class="pl-smi">rightContY</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">plotY</span>,h<span class="pl-k">||</span>d,i<span class="pl-k">||</span>e,d,e],<span class="pl-smi">f</span>.<span class="pl-smi">rightContX</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">rightContY</span><span class="pl-k">=</span><span class="pl-c1">null</span>)<span class="pl-k">:</span>b<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,d,e];<span class="pl-k">return</span> b}});<span class="pl-c1">H</span>.<span class="pl-smi">spline</span><span class="pl-k">=</span>ya;<span class="pl-c1">V</span>.<span class="pl-smi">areaspline</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">V</span>.<span class="pl-smi">area</span>);qa<span class="pl-k">=</span><span class="pl-smi">qa</span>.<span class="pl-c1">prototype</span>;ya<span class="pl-k">=</span><span class="pl-en">ca</span>(ya,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>areaspline<span class="pl-pds">&quot;</span></span>,closedStacks<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,getSegmentPath<span class="pl-k">:</span><span class="pl-smi">qa</span>.<span class="pl-smi">getSegmentPath</span>,closeSegment<span class="pl-k">:</span><span class="pl-smi">qa</span>.<span class="pl-smi">closeSegment</span>,drawGraph<span class="pl-k">:</span><span class="pl-smi">qa</span>.<span class="pl-smi">drawGraph</span>,drawLegendSymbol<span class="pl-k">:</span><span class="pl-c1">F</span>.<span class="pl-smi">drawRectangle</span>});</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">H</span>.<span class="pl-smi">areaspline</span><span class="pl-k">=</span>ya;<span class="pl-c1">V</span>.<span class="pl-smi">column</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">L</span>,{borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,borderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">0</span>,groupPadding<span class="pl-k">:</span><span class="pl-c1">0.2</span>,marker<span class="pl-k">:</span><span class="pl-c1">null</span>,pointPadding<span class="pl-k">:</span><span class="pl-c1">0.1</span>,minPointLength<span class="pl-k">:</span><span class="pl-c1">0</span>,cropThreshold<span class="pl-k">:</span><span class="pl-c1">50</span>,pointRange<span class="pl-k">:</span><span class="pl-c1">null</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{brightness<span class="pl-k">:</span><span class="pl-c1">0.1</span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},select<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>,borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}},dataLabels<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-c1">null</span>,verticalAlign<span class="pl-k">:</span><span class="pl-c1">null</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},stickyTracking<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,threshold<span class="pl-k">:</span><span class="pl-c1">0</span>});ya<span class="pl-k">=</span><span class="pl-en">ca</span>(<span class="pl-c1">M</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column<span class="pl-pds">&quot;</span></span>,pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>borderColor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>borderWidth<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>borderRadius<span class="pl-pds">&quot;</span></span>},cropShoulder<span class="pl-k">:</span><span class="pl-c1">0</span>,trackerGroups<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],negStacks<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>;<span class="pl-smi">b</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>)<span class="pl-smi">b</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>})},<span class="pl-en">getColumnMetrics</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">reversed</span>,f,g<span class="pl-k">=</span>{},h,i<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">b</span>.<span class="pl-smi">grouping</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span>i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">len</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">len</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">pos</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">pos</span>)<span class="pl-smi">c</span>.<span class="pl-smi">stacking</span><span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">stackKey</span>,g[f]<span class="pl-k">===</span>s<span class="pl-k">&amp;&amp;</span>(g[f]<span class="pl-k">=</span>i<span class="pl-k">++</span>),h<span class="pl-k">=</span>g[f])<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">grouping</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>i<span class="pl-k">++</span>),<span class="pl-smi">b</span>.<span class="pl-smi">columnIndex</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line">h});<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">x</span>(<span class="pl-en">O</span>(<span class="pl-smi">c</span>.<span class="pl-smi">transA</span>)<span class="pl-k">*</span>(<span class="pl-smi">c</span>.<span class="pl-smi">ordinalSlope</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">tickInterval</span><span class="pl-k">||</span><span class="pl-c1">1</span>),<span class="pl-smi">c</span>.<span class="pl-smi">len</span>),k<span class="pl-k">=</span>c<span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-smi">groupPadding</span>,j<span class="pl-k">=</span>(c<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>k)<span class="pl-k">/</span>i,l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pointWidth</span>,b<span class="pl-k">=</span><span class="pl-en">r</span>(l)<span class="pl-k">?</span>(j<span class="pl-k">-</span>l)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span>j<span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-smi">pointPadding</span>,l<span class="pl-k">=</span><span class="pl-en">n</span>(l,j<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>b);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">columnMetrics</span><span class="pl-k">=</span>{width<span class="pl-k">:</span>l,offset<span class="pl-k">:</span>b<span class="pl-k">+</span>(k<span class="pl-k">+</span>((e<span class="pl-k">?</span>i<span class="pl-k">-</span>(<span class="pl-smi">a</span>.<span class="pl-smi">columnIndex</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">columnIndex</span>)<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">*</span>j<span class="pl-k">-</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">*</span>(e<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)}},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">borderWidth</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">translatedThreshold</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getThreshold</span>(<span class="pl-smi">b</span>.<span class="pl-smi">threshold</span>),f<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">b</span>.<span class="pl-smi">minPointLength</span>,<span class="pl-c1">5</span>),b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getColumnMetrics</span>(),g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">width</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">barW</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line"><span class="pl-en">Wa</span>(<span class="pl-en">v</span>(g,<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>c)),i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointXOffset</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">offset</span>,k<span class="pl-k">=</span><span class="pl-k">-</span>(c<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">0</span>),j<span class="pl-k">=</span>c<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">isVML</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">inverted</span><span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">+=</span><span class="pl-c1">1</span>);<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">translate</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>);<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">yBottom</span>,e),c<span class="pl-k">=</span><span class="pl-en">x</span>(<span class="pl-en">v</span>(<span class="pl-k">-</span><span class="pl-c1">999</span><span class="pl-k">-</span>b,<span class="pl-smi">a</span>.<span class="pl-smi">plotY</span>),<span class="pl-smi">d</span>.<span class="pl-smi">len</span><span class="pl-k">+</span><span class="pl-c1">999</span><span class="pl-k">+</span>b),p<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>i,q<span class="pl-k">=</span>h,s<span class="pl-k">=</span><span class="pl-en">x</span>(c,b),z,c<span class="pl-k">=</span><span class="pl-en">v</span>(c,b)<span class="pl-k">-</span>s;<span class="pl-en">O</span>(c)<span class="pl-k">&lt;</span>f<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>f,s<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-en">O</span>(s<span class="pl-k">-</span>e)<span class="pl-k">&gt;</span>f<span class="pl-k">?</span>b<span class="pl-k">-</span>f<span class="pl-k">:</span>e<span class="pl-k">-</span>(<span class="pl-smi">d</span>.<span class="pl-en">translate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">&lt;=</span>e<span class="pl-k">?</span>f<span class="pl-k">:</span><span class="pl-c1">0</span>)));<span class="pl-smi">a</span>.<span class="pl-smi">barX</span><span class="pl-k">=</span>p;<span class="pl-smi">a</span>.<span class="pl-smi">pointWidth</span><span class="pl-k">=</span>g;b<span class="pl-k">=</span><span class="pl-en">O</span>(p)<span class="pl-k">&lt;</span><span class="pl-c1">0.5</span>;q<span class="pl-k">=</span><span class="pl-en">t</span>(p<span class="pl-k">+</span>q)<span class="pl-k">+</span>k;p<span class="pl-k">=</span><span class="pl-en">t</span>(p)<span class="pl-k">+</span>k;q<span class="pl-k">-=</span>p;z<span class="pl-k">=</span><span class="pl-en">O</span>(s)<span class="pl-k">&lt;</span><span class="pl-c1">0.5</span>;c<span class="pl-k">=</span><span class="pl-en">t</span>(s<span class="pl-k">+</span>c)<span class="pl-k">+</span>j;s<span class="pl-k">=</span><span class="pl-en">t</span>(s)<span class="pl-k">+</span>j;c<span class="pl-k">-=</span>s;b<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">+=</span><span class="pl-c1">1</span>,q<span class="pl-k">-=</span><span class="pl-c1">1</span>);z<span class="pl-k">&amp;&amp;</span>(s<span class="pl-k">-=</span><span class="pl-c1">1</span>,c<span class="pl-k">+=</span><span class="pl-c1">1</span>);<span class="pl-smi">a</span>.<span class="pl-smi">shapeType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">=</span>{x<span class="pl-k">:</span>p,y<span class="pl-k">:</span>s,width<span class="pl-k">:</span>q,</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line">height<span class="pl-k">:</span>c}})},getSymbol<span class="pl-k">:</span>ta,drawLegendSymbol<span class="pl-k">:</span><span class="pl-c1">F</span>.<span class="pl-smi">drawRectangle</span>,drawGraph<span class="pl-k">:</span>ta,<span class="pl-en">drawPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">animationLimit</span><span class="pl-k">||</span><span class="pl-c1">250</span>,e;<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">plotY</span>,h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">graphic</span>;<span class="pl-k">if</span>(g<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(g)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)e<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">shapeArgs</span>,h<span class="pl-k">?</span>(<span class="pl-en">eb</span>(h),h[<span class="pl-smi">a</span>.<span class="pl-smi">points</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](<span class="pl-en">w</span>(e)))<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span>c[<span class="pl-smi">f</span>.<span class="pl-smi">shapeType</span>](e).<span class="pl-en">attr</span>(<span class="pl-smi">f</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-smi">f</span>.<span class="pl-c1">selected</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>).<span class="pl-en">shadow</span>(<span class="pl-smi">b</span>.<span class="pl-smi">shadow</span>,<span class="pl-c1">null</span>,<span class="pl-smi">b</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">borderRadius</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(h)<span class="pl-smi">f</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">destroy</span>()})},<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">inverted</span>,e<span class="pl-k">=</span>{};<span class="pl-k">if</span>($)a<span class="pl-k">?</span>(<span class="pl-smi">e</span>.<span class="pl-smi">scaleY</span><span class="pl-k">=</span><span class="pl-c1">0.001</span>,a<span class="pl-k">=</span><span class="pl-en">x</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pos</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">len</span>,<span class="pl-en">v</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pos</span>,<span class="pl-smi">b</span>.<span class="pl-en">toPixels</span>(<span class="pl-smi">c</span>.<span class="pl-smi">threshold</span>))),d<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">translateX</span><span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">len</span><span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">translateY</span><span class="pl-k">=</span>a,<span class="pl-c1">this</span>.<span class="pl-smi">group</span>.<span class="pl-en">attr</span>(e))<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-smi">scaleY</span><span class="pl-k">=</span><span class="pl-c1">1</span>,e[d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pos</span>,<span class="pl-c1">this</span>.<span class="pl-smi">group</span>.<span class="pl-c1">animate</span>(e,<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">animation</span>),<span class="pl-c1">this</span>.<span class="pl-smi">animate</span><span class="pl-k">=</span><span class="pl-c1">null</span>)},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>;<span class="pl-smi">b</span>.<span class="pl-smi">hasRendered</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>)<span class="pl-smi">b</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">remove</span>.<span class="pl-c1">apply</span>(a,<span class="pl-c1">arguments</span>)}});<span class="pl-c1">H</span>.<span class="pl-smi">column</span><span class="pl-k">=</span>ya;<span class="pl-c1">V</span>.<span class="pl-smi">bar</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">V</span>.<span class="pl-smi">column</span>);qa<span class="pl-k">=</span><span class="pl-en">ca</span>(ya,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bar<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line">inverted<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-c1">H</span>.<span class="pl-smi">bar</span><span class="pl-k">=</span>qa;<span class="pl-c1">V</span>.<span class="pl-smi">scatter</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">L</span>,{lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,tooltip<span class="pl-k">:</span>{headerFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;font-size: 10px; color:{series.color}&quot;&gt;{series.name}&lt;/span&gt;&lt;br/&gt;<span class="pl-pds">&#39;</span></span>,pointFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>x: &lt;b&gt;{point.x}&lt;/b&gt;&lt;br/&gt;y: &lt;b&gt;{point.y}&lt;/b&gt;&lt;br/&gt;<span class="pl-pds">&quot;</span></span>,followPointer<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},stickyTracking<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>});qa<span class="pl-k">=</span><span class="pl-en">ca</span>(<span class="pl-c1">M</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>scatter<span class="pl-pds">&quot;</span></span>,sorted<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,requireSorting<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,noSharedTooltip<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,trackerGroups<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>],takeOrdinalPosition<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,singularTooltips<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">drawGraph</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawGraph</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>)}});<span class="pl-c1">H</span>.<span class="pl-smi">scatter</span><span class="pl-k">=</span>qa;<span class="pl-c1">V</span>.<span class="pl-smi">pie</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">L</span>,</td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line">{borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,borderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,center<span class="pl-k">:</span>[<span class="pl-c1">null</span>,<span class="pl-c1">null</span>],clip<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,colorByPoint<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,dataLabels<span class="pl-k">:</span>{distance<span class="pl-k">:</span><span class="pl-c1">30</span>,enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">formatter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">point</span>.<span class="pl-c1">name</span>}},ignoreHiddenPoint<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,legendType<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span>,marker<span class="pl-k">:</span><span class="pl-c1">null</span>,size<span class="pl-k">:</span><span class="pl-c1">null</span>,showInLegend<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,slicedOffset<span class="pl-k">:</span><span class="pl-c1">10</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{brightness<span class="pl-k">:</span><span class="pl-c1">0.1</span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}},stickyTracking<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,tooltip<span class="pl-k">:</span>{followPointer<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}});<span class="pl-c1">L</span><span class="pl-k">=</span>{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pie<span class="pl-pds">&quot;</span></span>,isCartesian<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,pointClass<span class="pl-k">:</span><span class="pl-en">ca</span>(xa,{<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">init</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">u</span>(a,{visible<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>,name<span class="pl-k">:</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Slice<span class="pl-pds">&quot;</span></span>)});<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>)};<span class="pl-en">D</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>,b);<span class="pl-en">D</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>,b);<span class="pl-k">return</span> a},<span class="pl-en">setVisible</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">series</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>;<span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span>a<span class="pl-k">=</span>a<span class="pl-k">===</span>s<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">:</span>a;<span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>[<span class="pl-en">ua</span>(b,<span class="pl-smi">c</span>.<span class="pl-c1">data</span>)]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>;<span class="pl-en">q</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>graphic<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabel<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>connector<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>shadowGroup<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(b[c])b[c][a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>](<span class="pl-k">!</span><span class="pl-c1">0</span>)});<span class="pl-smi">b</span>.<span class="pl-smi">legendItem</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">legend</span>.<span class="pl-en">colorizeItem</span>(b,a);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">isDirty</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ignoreHiddenPoint</span>)<span class="pl-smi">c</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-en">redraw</span>()},<span class="pl-en">slice</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>;</td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line"><span class="pl-en">Za</span>(c,<span class="pl-smi">d</span>.<span class="pl-smi">chart</span>);<span class="pl-en">n</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">sliced</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">sliced</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-en">r</span>(a)<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">sliced</span>;<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>[<span class="pl-en">ua</span>(<span class="pl-c1">this</span>,<span class="pl-smi">d</span>.<span class="pl-c1">data</span>)]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>;a<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">slicedTranslation</span><span class="pl-k">:</span>{translateX<span class="pl-k">:</span><span class="pl-c1">0</span>,translateY<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-smi">graphic</span>.<span class="pl-c1">animate</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">shadowGroup</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">shadowGroup</span>.<span class="pl-c1">animate</span>(a)}}),requireSorting<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,noSharedTooltip<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,trackerGroups<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],axisTypes<span class="pl-k">:</span>[],pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>borderColor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>borderWidth<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>},singularTooltips<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,getColor<span class="pl-k">:</span>ta,<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">points</span>,d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">startAngleRad</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-en">q</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span>;c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-en">attr</span>({r<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">center</span>[<span class="pl-c1">3</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>,start<span class="pl-k">:</span>d,end<span class="pl-k">:</span>d}),<span class="pl-smi">c</span>.<span class="pl-c1">animate</span>({r<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>,start<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span>,end<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">end</span>},<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">animation</span>))}),<span class="pl-smi">b</span>.<span class="pl-smi">animate</span><span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">setData</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">setData</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,<span class="pl-k">!</span><span class="pl-c1">1</span>,c,d);<span class="pl-c1">this</span>.<span class="pl-en">processData</span>();<span class="pl-c1">this</span>.<span class="pl-en">generatePoints</span>();<span class="pl-en">n</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-en">redraw</span>(c)},<span class="pl-en">generatePoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-c1">0</span>,c,d,e,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ignoreHiddenPoint</span>;<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">generatePoints</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>;d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>)e<span class="pl-k">=</span>c[a],b<span class="pl-k">+=</span>f<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">e</span>.<span class="pl-smi">visible</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-smi">total</span><span class="pl-k">=</span>b;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>)e<span class="pl-k">=</span>c[a],<span class="pl-smi">e</span>.<span class="pl-smi">percentage</span><span class="pl-k">=</span>b<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">/</span>b<span class="pl-k">*</span><span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-smi">total</span><span class="pl-k">=</span>b},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">generatePoints</span>();<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">slicedOffset</span>,e<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">borderWidth</span>,f,g,h,i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">startAngle</span><span class="pl-k">||</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">startAngleRad</span><span class="pl-k">=</span>oa<span class="pl-k">/</span><span class="pl-c1">180</span><span class="pl-k">*</span>(i<span class="pl-k">-</span><span class="pl-c1">90</span>),i<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">endAngleRad</span><span class="pl-k">=</span>oa<span class="pl-k">/</span><span class="pl-c1">180</span><span class="pl-k">*</span>(<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">endAngle</span>,i<span class="pl-k">+</span><span class="pl-c1">360</span>)<span class="pl-k">-</span><span class="pl-c1">90</span>))<span class="pl-k">-</span>k,j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>,l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dataLabels</span>.<span class="pl-smi">distance</span>,c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">ignoreHiddenPoint</span>,m,o<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span>,p;<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-c1">this</span>.<span class="pl-smi">center</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getCenter</span>();<span class="pl-c1">this</span>.<span class="pl-en">getX</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){h<span class="pl-k">=</span><span class="pl-c1">W</span>.<span class="pl-en">asin</span>(<span class="pl-en">x</span>((b<span class="pl-k">-</span>a[<span class="pl-c1">1</span>])<span class="pl-k">/</span>(a[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>l),<span class="pl-c1">1</span>));<span class="pl-k">return</span> a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>(c<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-en">aa</span>(h)<span class="pl-k">*</span>(a[<span class="pl-c1">2</span>]<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span><span class="pl-k">+</span>l)};<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>o;m<span class="pl-k">++</span>){p<span class="pl-k">=</span>j[m];f<span class="pl-k">=</span>k<span class="pl-k">+</span>b<span class="pl-k">*</span>i;<span class="pl-k">if</span>(<span class="pl-k">!</span>c<span class="pl-k">||</span><span class="pl-smi">p</span>.<span class="pl-smi">visible</span>)b<span class="pl-k">+=</span><span class="pl-smi">p</span>.<span class="pl-smi">percentage</span><span class="pl-k">/</span><span class="pl-c1">100</span>;g<span class="pl-k">=</span>k<span class="pl-k">+</span>b<span class="pl-k">*</span>i;<span class="pl-smi">p</span>.<span class="pl-smi">shapeType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>arc<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">p</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">=</span>{x<span class="pl-k">:</span>a[<span class="pl-c1">0</span>],y<span class="pl-k">:</span>a[<span class="pl-c1">1</span>],r<span class="pl-k">:</span>a[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>,innerR<span class="pl-k">:</span>a[<span class="pl-c1">3</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>,start<span class="pl-k">:</span><span class="pl-en">t</span>(f<span class="pl-k">*</span><span class="pl-c1">1E3</span>)<span class="pl-k">/</span><span class="pl-c1">1E3</span>,end<span class="pl-k">:</span><span class="pl-en">t</span>(g<span class="pl-k">*</span><span class="pl-c1">1E3</span>)<span class="pl-k">/</span><span class="pl-c1">1E3</span>};h<span class="pl-k">=</span>(g<span class="pl-k">+</span>f)<span class="pl-k">/</span><span class="pl-c1">2</span>;h<span class="pl-k">&gt;</span><span class="pl-c1">1.5</span><span class="pl-k">*</span>oa<span class="pl-k">?</span>h<span class="pl-k">-=</span><span class="pl-c1">2</span><span class="pl-k">*</span>oa<span class="pl-k">:</span>h<span class="pl-k">&lt;</span><span class="pl-k">-</span>oa<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">+=</span><span class="pl-c1">2</span><span class="pl-k">*</span>oa);<span class="pl-smi">p</span>.<span class="pl-smi">slicedTranslation</span><span class="pl-k">=</span>{translateX<span class="pl-k">:</span><span class="pl-en">t</span>(<span class="pl-en">aa</span>(h)<span class="pl-k">*</span>d),translateY<span class="pl-k">:</span><span class="pl-en">t</span>(<span class="pl-en">fa</span>(h)<span class="pl-k">*</span>d)};f<span class="pl-k">=</span><span class="pl-en">aa</span>(h)<span class="pl-k">*</span>a[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>;g<span class="pl-k">=</span><span class="pl-en">fa</span>(h)<span class="pl-k">*</span>a[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-smi">p</span>.<span class="pl-smi">tooltipPos</span><span class="pl-k">=</span>[a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f<span class="pl-k">*</span><span class="pl-c1">0.7</span>,a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>g<span class="pl-k">*</span><span class="pl-c1">0.7</span>];<span class="pl-smi">p</span>.<span class="pl-smi">half</span><span class="pl-k">=</span>h<span class="pl-k">&lt;</span><span class="pl-k">-</span>oa<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">||</span>h<span class="pl-k">&gt;</span>oa<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-smi">p</span>.<span class="pl-smi">angle</span><span class="pl-k">=</span>h;e<span class="pl-k">=</span><span class="pl-en">x</span>(e,l<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-smi">p</span>.<span class="pl-smi">labelPos</span><span class="pl-k">=</span>[a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-en">aa</span>(h)<span class="pl-k">*</span>l,a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-en">fa</span>(h)<span class="pl-k">*</span>l,a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-en">aa</span>(h)<span class="pl-k">*</span>e,a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>g<span class="pl-k">+</span><span class="pl-en">fa</span>(h)<span class="pl-k">*</span>e,a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f,a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>g,</td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">p</span>.<span class="pl-smi">half</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,h]}},drawGraph<span class="pl-k">:</span><span class="pl-c1">null</span>,<span class="pl-en">drawPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>,c,d,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">shadow</span>,f,g;<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">shadowGroup</span>)<span class="pl-smi">a</span>.<span class="pl-smi">shadowGroup</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shadow<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>);<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">h</span>){d<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">graphic</span>;g<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">shapeArgs</span>;f<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">shadowGroup</span>;<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;!</span>f)f<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">shadowGroup</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shadow<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shadowGroup</span>);c<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">sliced</span><span class="pl-k">?</span><span class="pl-smi">h</span>.<span class="pl-smi">slicedTranslation</span><span class="pl-k">:</span>{translateX<span class="pl-k">:</span><span class="pl-c1">0</span>,translateY<span class="pl-k">:</span><span class="pl-c1">0</span>};f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">attr</span>(c);d<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">animate</span>(<span class="pl-en">u</span>(g,c))<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span>d<span class="pl-k">=</span>b[<span class="pl-smi">h</span>.<span class="pl-smi">shapeType</span>](g).<span class="pl-en">setRadialReference</span>(<span class="pl-smi">a</span>.<span class="pl-smi">center</span>).<span class="pl-en">attr</span>(<span class="pl-smi">h</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-smi">h</span>.<span class="pl-c1">selected</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]).<span class="pl-en">attr</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-linejoin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>}).<span class="pl-en">attr</span>(c).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>).<span class="pl-en">shadow</span>(e,f);<span class="pl-smi">h</span>.<span class="pl-smi">visible</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-en">setVisible</span>(<span class="pl-smi">h</span>.<span class="pl-smi">visible</span>)})},<span class="pl-en">sortByAngle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">angle</span><span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">angle</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">angle</span>)<span class="pl-k">*</span>b})},drawLegendSymbol<span class="pl-k">:</span><span class="pl-c1">F</span>.<span class="pl-smi">drawRectangle</span>,getCenter<span class="pl-k">:</span><span class="pl-smi">pa</span>.<span class="pl-smi">getCenter</span>,getSymbol<span class="pl-k">:</span>ta};<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-en">ca</span>(<span class="pl-c1">M</span>,<span class="pl-c1">L</span>);<span class="pl-c1">H</span>.<span class="pl-smi">pie</span><span class="pl-k">=</span><span class="pl-c1">L</span>;<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">drawDataLabels</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">cursor</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dataLabels</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">points</span>,e,f,g,h;<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">enabled</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">_hasPointLabels</span>)<span class="pl-smi">a</span>.<span class="pl-smi">dlProcessOptions</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">dlProcessOptions</span>(d),h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">plotGroup</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>data-labels<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-c1">zIndex</span><span class="pl-k">||</span><span class="pl-c1">6</span>),f<span class="pl-k">=</span>d,<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> k,j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dataLabel</span>,l,m,o<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">connector</span>,p<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">dataLabels</span>;k<span class="pl-k">=</span><span class="pl-en">n</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">enabled</span>,<span class="pl-smi">f</span>.<span class="pl-smi">enabled</span>);<span class="pl-k">if</span>(j<span class="pl-k">&amp;&amp;!</span>k)<span class="pl-smi">b</span>.<span class="pl-smi">dataLabel</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">destroy</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(k){d<span class="pl-k">=</span><span class="pl-en">w</span>(f,e);k<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">rotation</span>;l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getLabelConfig</span>();g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">format</span><span class="pl-k">?</span><span class="pl-en">Ja</span>(<span class="pl-smi">d</span>.<span class="pl-smi">format</span>,l)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">formatter</span>.<span class="pl-c1">call</span>(l,d);<span class="pl-smi">d</span>.<span class="pl-c1">style</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">d</span>.<span class="pl-c1">color</span>,<span class="pl-smi">d</span>.<span class="pl-c1">style</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-c1">color</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(j)<span class="pl-k">if</span>(<span class="pl-en">r</span>(g))<span class="pl-smi">j</span>.<span class="pl-en">attr</span>({text<span class="pl-k">:</span>g}),p<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dataLabel</span><span class="pl-k">=</span>j<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">destroy</span>(),o)<span class="pl-smi">b</span>.<span class="pl-smi">connector</span><span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">destroy</span>()}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">r</span>(g)){j<span class="pl-k">=</span>{fill<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">backgroundColor</span>,</td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line">stroke<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">borderColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">borderWidth</span>,r<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">borderRadius</span><span class="pl-k">||</span><span class="pl-c1">0</span>,rotation<span class="pl-k">:</span>k,padding<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">padding</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>};<span class="pl-k">for</span>(m <span class="pl-k">in</span> j)j[m]<span class="pl-k">===</span>s<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> j[m];j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dataLabel</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>[k<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>label<span class="pl-pds">&quot;</span></span>](g,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">999</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-smi">d</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">attr</span>(j).<span class="pl-en">css</span>(<span class="pl-en">u</span>(<span class="pl-smi">d</span>.<span class="pl-c1">style</span>,c<span class="pl-k">&amp;&amp;</span>{cursor<span class="pl-k">:</span>c})).<span class="pl-c1">add</span>(h).<span class="pl-en">shadow</span>(<span class="pl-smi">d</span>.<span class="pl-smi">shadow</span>)}j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">alignDataLabel</span>(b,j,d,<span class="pl-c1">null</span>,p)}})};<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">alignDataLabel</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">inverted</span>,h<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotX</span>,<span class="pl-k">-</span><span class="pl-c1">999</span>),i<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">a</span>.<span class="pl-smi">plotY</span>,<span class="pl-k">-</span><span class="pl-c1">999</span>),k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getBBox</span>();<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">series</span>.<span class="pl-smi">forceDL</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-en">isInsidePlot</span>(h,</td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line"><span class="pl-en">t</span>(i),g)<span class="pl-k">||</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">isInsidePlot</span>(h,g<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>,g)))d<span class="pl-k">=</span><span class="pl-en">u</span>({x<span class="pl-k">:</span>g<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span>i<span class="pl-k">:</span>h,y<span class="pl-k">:</span><span class="pl-en">t</span>(g<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-</span>h<span class="pl-k">:</span>i),width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>},d),<span class="pl-en">u</span>(c,{width<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">width</span>,height<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">height</span>}),<span class="pl-smi">c</span>.<span class="pl-smi">rotation</span><span class="pl-k">?</span>(g<span class="pl-k">=</span>{align<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">align</span>,x<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">2</span>,y<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">2</span>},b[e<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](g))<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-c1">align</span>(c,<span class="pl-c1">null</span>,d),g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">alignAttr</span>,<span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">overflow</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">justifyDataLabel</span>(b,c,g,k,d,e)<span class="pl-k">:</span><span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">crop</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">g</span>.<span class="pl-c1">x</span>,<span class="pl-smi">g</span>.<span class="pl-c1">y</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">isInsidePlot</span>(<span class="pl-smi">g</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">k</span>.<span class="pl-c1">width</span>,<span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">k</span>.<span class="pl-c1">height</span>)));<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-smi">b</span>.<span class="pl-en">attr</span>({y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">999</span>}),<span class="pl-smi">b</span>.<span class="pl-smi">placed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">justifyDataLabel</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">align</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">verticalAlign</span>,k,j;k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>;<span class="pl-k">if</span>(k<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">align</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-k">-</span>k,j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span>;<span class="pl-k">if</span>(k<span class="pl-k">&gt;</span><span class="pl-smi">g</span>.<span class="pl-smi">plotWidth</span>)h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">align</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span>k,j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>;<span class="pl-k">if</span>(k<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-k">-</span>k,j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span>;<span class="pl-k">if</span>(k<span class="pl-k">&gt;</span><span class="pl-smi">g</span>.<span class="pl-smi">plotHeight</span>)i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-</span>k,j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(j)<span class="pl-smi">a</span>.<span class="pl-smi">placed</span><span class="pl-k">=</span><span class="pl-k">!</span>f,<span class="pl-smi">a</span>.<span class="pl-c1">align</span>(b,<span class="pl-c1">null</span>,e)};<span class="pl-k">if</span>(<span class="pl-c1">H</span>.<span class="pl-smi">pie</span>)<span class="pl-c1">H</span>.<span class="pl-smi">pie</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">drawDataLabels</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>,c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">dataLabels</span>,f<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">e</span>.<span class="pl-smi">connectorPadding</span>,</td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">10</span>),g<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">e</span>.<span class="pl-smi">connectorWidth</span>,<span class="pl-c1">1</span>),h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotWidth</span>,d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotHeight</span>,i,k,j<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">e</span>.<span class="pl-smi">softConnector</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">distance</span>,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">center</span>,o<span class="pl-k">=</span>m[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>,p<span class="pl-k">=</span>m[<span class="pl-c1">1</span>],<span class="pl-c1">B</span><span class="pl-k">=</span>l<span class="pl-k">&gt;</span><span class="pl-c1">0</span>,s,z,r,u,w<span class="pl-k">=</span>[[],[]],x,y,<span class="pl-c1">D</span>,<span class="pl-c1">C</span>,<span class="pl-c1">E</span>,<span class="pl-c1">A</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],<span class="pl-en">H</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>};<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">enabled</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">_hasPointLabels</span>)){<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawDataLabels</span>.<span class="pl-c1">apply</span>(a);<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>w[<span class="pl-smi">a</span>.<span class="pl-smi">half</span>].<span class="pl-c1">push</span>(a)});<span class="pl-k">for</span>(<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">!</span>u<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">C</span>];)u<span class="pl-k">=</span>b[<span class="pl-c1">C</span>]<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">C</span>].<span class="pl-smi">dataLabel</span><span class="pl-k">&amp;&amp;</span>(b[<span class="pl-c1">C</span>].<span class="pl-smi">dataLabel</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-c1">21</span>),<span class="pl-c1">C</span><span class="pl-k">++</span>;<span class="pl-k">for</span>(<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-c1">C</span><span class="pl-k">--</span>;){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],<span class="pl-c1">I</span><span class="pl-k">=</span>[],<span class="pl-c1">J</span><span class="pl-k">=</span>w[<span class="pl-c1">C</span>],<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-c1">length</span>,<span class="pl-c1">F</span>;<span class="pl-smi">a</span>.<span class="pl-en">sortByAngle</span>(<span class="pl-c1">J</span>,<span class="pl-c1">C</span><span class="pl-k">-</span><span class="pl-c1">0.5</span>);<span class="pl-k">if</span>(l<span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>){<span class="pl-k">for</span>(<span class="pl-c1">E</span><span class="pl-k">=</span>p<span class="pl-k">-</span>o<span class="pl-k">-</span>l;<span class="pl-c1">E</span><span class="pl-k">&lt;=</span>p<span class="pl-k">+</span>o<span class="pl-k">+</span>l;<span class="pl-c1">E</span><span class="pl-k">+=</span>u)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-c1">E</span>);z<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">G</span><span class="pl-k">&gt;</span>z){c<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(<span class="pl-c1">J</span>);<span class="pl-smi">c</span>.<span class="pl-c1">sort</span>(<span class="pl-c1">H</span>);<span class="pl-k">for</span>(<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">G</span>;<span class="pl-c1">E</span><span class="pl-k">--</span>;)c[<span class="pl-c1">E</span>].<span class="pl-smi">rank</span><span class="pl-k">=</span><span class="pl-c1">E</span>;<span class="pl-k">for</span>(<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">G</span>;<span class="pl-c1">E</span><span class="pl-k">--</span>;)<span class="pl-c1">J</span>[<span class="pl-c1">E</span>].<span class="pl-smi">rank</span><span class="pl-k">&gt;=</span>z<span class="pl-k">&amp;&amp;</span><span class="pl-c1">J</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">E</span>,<span class="pl-c1">1</span>);<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-c1">length</span>}<span class="pl-k">for</span>(<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">E</span><span class="pl-k">&lt;</span><span class="pl-c1">G</span>;<span class="pl-c1">E</span><span class="pl-k">++</span>){c<span class="pl-k">=</span><span class="pl-c1">J</span>[<span class="pl-c1">E</span>];r<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">labelPos</span>;c<span class="pl-k">=</span><span class="pl-c1">9999</span>;<span class="pl-k">var</span> <span class="pl-c1">N</span>,<span class="pl-c1">L</span>;<span class="pl-k">for</span>(<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">L</span><span class="pl-k">&lt;</span>z;<span class="pl-c1">L</span><span class="pl-k">++</span>)<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-en">O</span>(b[<span class="pl-c1">L</span>]<span class="pl-k">-</span>r[<span class="pl-c1">1</span>]),<span class="pl-c1">N</span><span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">N</span>,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">L</span>);<span class="pl-k">if</span>(<span class="pl-c1">F</span><span class="pl-k">&lt;</span><span class="pl-c1">E</span><span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">E</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">E</span>;<span class="pl-k">else</span> <span class="pl-k">for</span>(z<span class="pl-k">&lt;</span><span class="pl-c1">G</span><span class="pl-k">-</span><span class="pl-c1">E</span><span class="pl-k">+</span><span class="pl-c1">F</span><span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">E</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span><span class="pl-k">=</span>z<span class="pl-k">-</span><span class="pl-c1">G</span><span class="pl-k">+</span><span class="pl-c1">E</span>);b[<span class="pl-c1">F</span>]<span class="pl-k">===</span><span class="pl-c1">null</span>;)<span class="pl-c1">F</span><span class="pl-k">++</span>;<span class="pl-c1">I</span>.<span class="pl-c1">push</span>({i<span class="pl-k">:</span><span class="pl-c1">F</span>,y<span class="pl-k">:</span>b[<span class="pl-c1">F</span>]});b[<span class="pl-c1">F</span>]<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-c1">I</span>.<span class="pl-c1">sort</span>(<span class="pl-c1">H</span>)}<span class="pl-k">for</span>(<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">E</span><span class="pl-k">&lt;</span><span class="pl-c1">G</span>;<span class="pl-c1">E</span><span class="pl-k">++</span>){c<span class="pl-k">=</span><span class="pl-c1">J</span>[<span class="pl-c1">E</span>];r<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">labelPos</span>;s<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dataLabel</span>;<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">visible</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span>r[<span class="pl-c1">1</span>];<span class="pl-k">if</span>(l<span class="pl-k">&gt;</span><span class="pl-c1">0</span>){<span class="pl-k">if</span>(z<span class="pl-k">=</span><span class="pl-c1">I</span>.<span class="pl-c1">pop</span>(),<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-smi">i</span>,</td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line">y<span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-c1">y</span>,c<span class="pl-k">&gt;</span>y<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">F</span><span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">||</span>c<span class="pl-k">&lt;</span>y<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">F</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span>)y<span class="pl-k">=</span>c}<span class="pl-k">else</span> y<span class="pl-k">=</span>c;x<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">justify</span><span class="pl-k">?</span>m[<span class="pl-c1">0</span>]<span class="pl-k">+</span>(<span class="pl-c1">C</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(o<span class="pl-k">+</span>l)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">getX</span>(<span class="pl-c1">F</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-c1">F</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span>c<span class="pl-k">:</span>y,<span class="pl-c1">C</span>);<span class="pl-smi">s</span>.<span class="pl-smi">_attr</span><span class="pl-k">=</span>{visibility<span class="pl-k">:</span><span class="pl-c1">D</span>,align<span class="pl-k">:</span>r[<span class="pl-c1">6</span>]};<span class="pl-smi">s</span>.<span class="pl-smi">_pos</span><span class="pl-k">=</span>{x<span class="pl-k">:</span>x<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>({left<span class="pl-k">:</span>f,right<span class="pl-k">:</span><span class="pl-k">-</span>f}[r[<span class="pl-c1">6</span>]]<span class="pl-k">||</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span>y<span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">10</span>};<span class="pl-smi">s</span>.<span class="pl-smi">connX</span><span class="pl-k">=</span>x;<span class="pl-smi">s</span>.<span class="pl-smi">connY</span><span class="pl-k">=</span>y;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">size</span><span class="pl-k">===</span><span class="pl-c1">null</span>)z<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-c1">width</span>,x<span class="pl-k">-</span>z<span class="pl-k">&lt;</span>f<span class="pl-k">?</span><span class="pl-c1">A</span>[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-en">t</span>(z<span class="pl-k">-</span>x<span class="pl-k">+</span>f),<span class="pl-c1">A</span>[<span class="pl-c1">3</span>])<span class="pl-k">:</span>x<span class="pl-k">+</span>z<span class="pl-k">&gt;</span>h<span class="pl-k">-</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">A</span>[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-en">t</span>(x<span class="pl-k">+</span>z<span class="pl-k">-</span>h<span class="pl-k">+</span>f),<span class="pl-c1">A</span>[<span class="pl-c1">1</span>])),y<span class="pl-k">-</span>u<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">A</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-en">t</span>(<span class="pl-k">-</span>y<span class="pl-k">+</span>u<span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-c1">A</span>[<span class="pl-c1">0</span>])<span class="pl-k">:</span>y<span class="pl-k">+</span>u<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">A</span>[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-en">t</span>(y<span class="pl-k">+</span>u<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>d),<span class="pl-c1">A</span>[<span class="pl-c1">2</span>]))}}<span class="pl-k">if</span>(<span class="pl-en">Aa</span>(<span class="pl-c1">A</span>)<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">verifyDataLabelOverflow</span>(<span class="pl-c1">A</span>))<span class="pl-c1">this</span>.<span class="pl-en">placeDataLabels</span>(),<span class="pl-c1">B</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){i<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">connector</span>;r<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">labelPos</span>;<span class="pl-k">if</span>((s<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dataLabel</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">s</span>.<span class="pl-smi">_pos</span>)<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-smi">_attr</span>.<span class="pl-c1">visibility</span>,x<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-smi">connX</span>,y<span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-smi">connY</span>,k<span class="pl-k">=</span>j<span class="pl-k">?</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">+</span>(r[<span class="pl-c1">6</span>]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">5</span>),y,<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,x,y,<span class="pl-c1">2</span><span class="pl-k">*</span>r[<span class="pl-c1">2</span>]<span class="pl-k">-</span>r[<span class="pl-c1">4</span>],<span class="pl-c1">2</span><span class="pl-k">*</span>r[<span class="pl-c1">3</span>]<span class="pl-k">-</span>r[<span class="pl-c1">5</span>],r[<span class="pl-c1">2</span>],r[<span class="pl-c1">3</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,r[<span class="pl-c1">4</span>],r[<span class="pl-c1">5</span>]]<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">+</span>(r[<span class="pl-c1">6</span>]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">5</span>),y,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,r[<span class="pl-c1">2</span>],r[<span class="pl-c1">3</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,r[<span class="pl-c1">4</span>],r[<span class="pl-c1">5</span>]],i<span class="pl-k">?</span>(<span class="pl-smi">i</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>k}),<span class="pl-smi">i</span>.<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">D</span>))<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">connector</span><span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">path</span>(k).<span class="pl-en">attr</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>g,stroke<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">connectorColor</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>#606060<span class="pl-pds">&quot;</span></span>,visibility<span class="pl-k">:</span><span class="pl-c1">D</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(i)<span class="pl-smi">b</span>.<span class="pl-smi">connector</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">destroy</span>()})}},<span class="pl-c1">H</span>.<span class="pl-smi">pie</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">placeDataLabels</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">points</span>,</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span>,b;<span class="pl-k">if</span>(a)(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_pos</span>)<span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-en">attr</span>(<span class="pl-smi">a</span>.<span class="pl-smi">_attr</span>),a[<span class="pl-smi">a</span>.<span class="pl-smi">moved</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](b),<span class="pl-smi">a</span>.<span class="pl-smi">moved</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">attr</span>({y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">999</span>})})},<span class="pl-c1">H</span>.<span class="pl-smi">pie</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">alignDataLabel</span><span class="pl-k">=</span>ta,<span class="pl-c1">H</span>.<span class="pl-smi">pie</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">verifyDataLabelOverflow</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">center</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">center</span>,e<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">minSize</span><span class="pl-k">||</span><span class="pl-c1">80</span>,f;d[<span class="pl-c1">0</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">?</span>e<span class="pl-k">=</span><span class="pl-en">v</span>(b[<span class="pl-c1">2</span>]<span class="pl-k">-</span><span class="pl-en">v</span>(a[<span class="pl-c1">1</span>],a[<span class="pl-c1">3</span>]),c)<span class="pl-k">:</span>(e<span class="pl-k">=</span><span class="pl-en">v</span>(b[<span class="pl-c1">2</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">3</span>],c),b[<span class="pl-c1">0</span>]<span class="pl-k">+=</span>(a[<span class="pl-c1">3</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>);d[<span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">?</span>e<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-en">x</span>(e,b[<span class="pl-c1">2</span>]<span class="pl-k">-</span><span class="pl-en">v</span>(a[<span class="pl-c1">0</span>],a[<span class="pl-c1">2</span>])),c)<span class="pl-k">:</span>(e<span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-en">x</span>(e,b[<span class="pl-c1">2</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">2</span>]),c),b[<span class="pl-c1">1</span>]<span class="pl-k">+=</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">2</span>])<span class="pl-k">/</span><span class="pl-c1">2</span>);e<span class="pl-k">&lt;</span>b[<span class="pl-c1">2</span>]<span class="pl-k">?</span>(b[<span class="pl-c1">2</span>]<span class="pl-k">=</span>e,<span class="pl-c1">this</span>.<span class="pl-en">translate</span>(b),<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span>)<span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span>.<span class="pl-smi">_pos</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>}),<span class="pl-c1">this</span>.<span class="pl-smi">drawDataLabels</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">drawDataLabels</span>())<span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> f};<span class="pl-k">if</span>(<span class="pl-c1">H</span>.<span class="pl-smi">column</span>)<span class="pl-c1">H</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">alignDataLabel</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">inverted</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dlBox</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">shapeArgs</span>,i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">below</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">plotY</span><span class="pl-k">&gt;</span><span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">translatedThreshold</span>,<span class="pl-smi">f</span>.<span class="pl-smi">plotSizeY</span>),k<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">inside</span>,<span class="pl-k">!!</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span>);<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-en">w</span>(h),g<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span>,y<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">plotHeight</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span>,width<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span>,height<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span>}),<span class="pl-k">!</span>k))g<span class="pl-k">?</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>i<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">width</span>,<span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>(<span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span>i<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-smi">c</span>.<span class="pl-c1">align</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-c1">align</span>,<span class="pl-k">!</span>g<span class="pl-k">||</span>k<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>i<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">verticalAlign</span>,g<span class="pl-k">||</span>k<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>i<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">alignDataLabel</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,b,c,d,e)};<span class="pl-k">var</span> gb<span class="pl-k">=</span><span class="pl-c1">Q</span>.<span class="pl-smi">TrackerMixin</span><span class="pl-k">=</span>{<span class="pl-en">drawTrackerPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pointer</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">cursor</span>,e<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>{cursor<span class="pl-k">:</span>d},<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">target</span>,e;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">!==</span>a)<span class="pl-smi">a</span>.<span class="pl-en">onMouseOver</span>();<span class="pl-k">for</span>(;d<span class="pl-k">&amp;&amp;!</span>e;)e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">point</span>,d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">parentNode</span>;<span class="pl-k">if</span>(e<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span>)<span class="pl-smi">e</span>.<span class="pl-en">onMouseOver</span>(c)};<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>)<span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>.<span class="pl-smi">element</span>.<span class="pl-smi">point</span><span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span>)<span class="pl-smi">a</span>.<span class="pl-smi">dataLabel</span>.<span class="pl-smi">element</span>.<span class="pl-smi">point</span><span class="pl-k">=</span>a});<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">_hasTracking</span>)<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">trackerGroups</span>,</td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(a[b]<span class="pl-k">&amp;&amp;</span>(a[b].<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,f).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">c</span>.<span class="pl-en">onTrackerMouseOut</span>(a)}).<span class="pl-en">css</span>(e),bb))a[b].<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>,f)}),<span class="pl-smi">a</span>.<span class="pl-smi">_hasTracking</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">drawTrackerGraph</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">trackByArea</span>,d<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">areaPath</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">graphPath</span>),e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">pointer</span>,h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">renderer</span>,i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tooltip</span>.<span class="pl-smi">snap</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tracker</span>,j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">cursor</span>,l<span class="pl-k">=</span>j<span class="pl-k">&amp;&amp;</span>{cursor<span class="pl-k">:</span>j},j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">singlePoints</span>,m,<span class="pl-en">o</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">!==</span>a)<span class="pl-smi">a</span>.<span class="pl-en">onMouseOver</span>()},p<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(192,192,192,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>($<span class="pl-k">?</span><span class="pl-c1">1.0E-4</span><span class="pl-k">:</span><span class="pl-c1">0.002</span>)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;!</span>c)<span class="pl-k">for</span>(m<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>;m<span class="pl-k">--</span>;)d[m]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(m<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,d[m<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>i,d[m<span class="pl-k">+</span><span class="pl-c1">2</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>),(m<span class="pl-k">&amp;&amp;</span>d[m]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>m<span class="pl-k">===</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(m,<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,d[m<span class="pl-k">-</span><span class="pl-c1">2</span>]<span class="pl-k">+</span>i,d[m<span class="pl-k">-</span><span class="pl-c1">1</span>]);<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span>;m<span class="pl-k">++</span>)e<span class="pl-k">=</span>j[m],<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">e</span>.<span class="pl-smi">plotX</span><span class="pl-k">-</span>i,<span class="pl-smi">e</span>.<span class="pl-smi">plotY</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">e</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>i,<span class="pl-smi">e</span>.<span class="pl-smi">plotY</span>);k<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-en">attr</span>({d<span class="pl-k">:</span>d})<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-smi">tracker</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">path</span>(d).<span class="pl-en">attr</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-linejoin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>,visibility<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,stroke<span class="pl-k">:</span>p,fill<span class="pl-k">:</span>c<span class="pl-k">?</span>p<span class="pl-k">:</span><span class="pl-c1">X</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">+</span>(c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>i),zIndex<span class="pl-k">:</span><span class="pl-c1">2</span>}).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>),<span class="pl-en">q</span>([<span class="pl-smi">a</span>.<span class="pl-smi">tracker</span>,<span class="pl-smi">a</span>.<span class="pl-smi">markerGroup</span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,o).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">g</span>.<span class="pl-en">onTrackerMouseOut</span>(a)}).<span class="pl-en">css</span>(l);<span class="pl-k">if</span>(bb)<span class="pl-smi">a</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>,o)}))}};<span class="pl-k">if</span>(<span class="pl-c1">H</span>.<span class="pl-smi">column</span>)<span class="pl-smi">ya</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawTracker</span><span class="pl-k">=</span><span class="pl-smi">gb</span>.<span class="pl-smi">drawTrackerPoint</span>;<span class="pl-k">if</span>(<span class="pl-c1">H</span>.<span class="pl-smi">pie</span>)<span class="pl-c1">H</span>.<span class="pl-smi">pie</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawTracker</span><span class="pl-k">=</span><span class="pl-smi">gb</span>.<span class="pl-smi">drawTrackerPoint</span>;<span class="pl-k">if</span>(<span class="pl-c1">H</span>.<span class="pl-smi">scatter</span>)<span class="pl-smi">qa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">drawTracker</span><span class="pl-k">=</span><span class="pl-smi">gb</span>.<span class="pl-smi">drawTrackerPoint</span>;<span class="pl-en">u</span>(<span class="pl-smi">pb</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">setItemEvents</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>;(c<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">legendGroup</span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-smi">f</span>.<span class="pl-c1">options</span>.<span class="pl-smi">itemHoverStyle</span>)}).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-en">css</span>(<span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">?</span>d<span class="pl-k">:</span>e);<span class="pl-smi">a</span>.<span class="pl-en">setState</span>()}).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> <span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">setVisible</span>()},</td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span>{browserEvent<span class="pl-k">:</span>b};<span class="pl-smi">a</span>.<span class="pl-smi">firePointEvent</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>legendItemClick<span class="pl-pds">&quot;</span></span>,b,c)<span class="pl-k">:</span><span class="pl-en">P</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>legendItemClick<span class="pl-pds">&quot;</span></span>,b,c)})},<span class="pl-en">createCheckboxForItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">checkbox</span><span class="pl-k">=</span><span class="pl-en">Y</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>checkbox<span class="pl-pds">&quot;</span></span>,checked<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">selected</span>,defaultChecked<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">selected</span>},<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">itemCheckboxStyle</span>,<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>);<span class="pl-en">D</span>(<span class="pl-smi">a</span>.<span class="pl-smi">checkbox</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">P</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>checkboxClick<span class="pl-pds">&quot;</span></span>,{checked<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">target</span>.<span class="pl-c1">checked</span>},<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-c1">select</span>()})})}});<span class="pl-c1">G</span>.<span class="pl-smi">legend</span>.<span class="pl-smi">itemStyle</span>.<span class="pl-smi">cursor</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>;<span class="pl-en">u</span>(<span class="pl-smi">sa</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">showResetZoom</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-c1">lang</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">resetZoomButton</span>,</td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">theme</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">states</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">relativeTo</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>chart<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>plotBox<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">resetZoomButton</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">button</span>(<span class="pl-smi">b</span>.<span class="pl-smi">resetZoom</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">zoomOut</span>()},d,e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">hover</span>).<span class="pl-en">attr</span>({align<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">position</span>.<span class="pl-c1">align</span>,title<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">resetZoomTitle</span>}).<span class="pl-c1">add</span>().<span class="pl-c1">align</span>(<span class="pl-smi">c</span>.<span class="pl-smi">position</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,f)},<span class="pl-en">zoomOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-en">P</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>selection<span class="pl-pds">&quot;</span></span>,{resetSelection<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">zoom</span>()})},<span class="pl-en">zoom</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointer</span>,d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,e;<span class="pl-k">!</span>a<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">resetSelection</span><span class="pl-k">?</span><span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">axes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">zoom</span>()})<span class="pl-k">:</span><span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">axis</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">isXAxis</span>;<span class="pl-k">if</span>(c[h<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>zoomX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>zoomY<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span>c[h<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>pinchX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pinchY<span class="pl-pds">&quot;</span></span>])b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">zoom</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>,<span class="pl-smi">a</span>.<span class="pl-smi">max</span>),<span class="pl-smi">e</span>.<span class="pl-smi">displayBtn</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)});e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">resetZoomButton</span>;<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;!</span>e)<span class="pl-c1">this</span>.<span class="pl-en">showResetZoom</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-en">ba</span>(e))<span class="pl-c1">this</span>.<span class="pl-smi">resetZoomButton</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">destroy</span>();b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">redraw</span>(<span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">animation</span>,a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">animation</span>,<span class="pl-c1">this</span>.<span class="pl-smi">pointCount</span><span class="pl-k">&lt;</span><span class="pl-c1">100</span>))},<span class="pl-en">pan</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hoverPoints</span>,e;d<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>()});<span class="pl-en">q</span>(b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>xy<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>]<span class="pl-k">:</span>[<span class="pl-c1">1</span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>chartX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>chartY<span class="pl-pds">&quot;</span></span>],h<span class="pl-k">=</span>c[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>][<span class="pl-c1">0</span>],i<span class="pl-k">=</span>c[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseDownX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseDownY<span class="pl-pds">&quot;</span></span>],k<span class="pl-k">=</span>(<span class="pl-smi">h</span>.<span class="pl-smi">pointRange</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,j<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getExtremes</span>(),</td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">toValue</span>(i<span class="pl-k">-</span>d,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>k,i<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">toValue</span>(i<span class="pl-k">+</span>c[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>plotWidth<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>plotHeight<span class="pl-pds">&quot;</span></span>]<span class="pl-k">-</span>d,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">-</span>k;<span class="pl-smi">h</span>.<span class="pl-smi">series</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&gt;</span><span class="pl-en">x</span>(<span class="pl-smi">j</span>.<span class="pl-smi">dataMin</span>,<span class="pl-smi">j</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&lt;</span><span class="pl-en">v</span>(<span class="pl-smi">j</span>.<span class="pl-smi">dataMax</span>,<span class="pl-smi">j</span>.<span class="pl-smi">max</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-en">setExtremes</span>(l,i,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,{trigger<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pan<span class="pl-pds">&quot;</span></span>}),e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);c[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseDownX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>mouseDownY<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>d});e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">redraw</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">J</span>(<span class="pl-smi">c</span>.<span class="pl-smi">container</span>,{cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>move<span class="pl-pds">&quot;</span></span>})}});<span class="pl-en">u</span>(<span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">select</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">series</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chart</span>,a<span class="pl-k">=</span><span class="pl-en">n</span>(a,<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">selected</span>);<span class="pl-smi">c</span>.<span class="pl-en">firePointEvent</span>(a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>,{accumulate<span class="pl-k">:</span>b},<span class="pl-k">function</span>(){<span class="pl-smi">c</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span>a;<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>[<span class="pl-en">ua</span>(c,<span class="pl-smi">d</span>.<span class="pl-c1">data</span>)]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>;<span class="pl-smi">c</span>.<span class="pl-en">setState</span>(a<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>);b<span class="pl-k">||</span><span class="pl-en">q</span>(<span class="pl-smi">e</span>.<span class="pl-en">getSelectedPoints</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">selected</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span>c)<span class="pl-smi">a</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>[<span class="pl-en">ua</span>(a,<span class="pl-smi">d</span>.<span class="pl-c1">data</span>)]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>,<span class="pl-smi">a</span>.<span class="pl-en">setState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>)})})},<span class="pl-en">onMouseOver</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">tooltip</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hoverPoint</span>;<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span><span class="pl-c1">this</span>)<span class="pl-smi">e</span>.<span class="pl-en">onMouseOut</span>();<span class="pl-c1">this</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseOver<span class="pl-pds">&quot;</span></span>);d<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-smi">shared</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">noSharedTooltip</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">refresh</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-en">setState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-smi">hoverPoint</span><span class="pl-k">=</span><span class="pl-c1">this</span>},<span class="pl-en">onMouseOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hoverPoints</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">||</span><span class="pl-en">ua</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line">b)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-c1">this</span>.<span class="pl-en">firePointEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseOut<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">setState</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">hoverPoint</span><span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">firePointEvent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>.<span class="pl-c1">options</span>;(<span class="pl-smi">e</span>.<span class="pl-smi">point</span>.<span class="pl-smi">events</span>[a]<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">events</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">events</span>[a])<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">importEvents</span>();a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">allowPointSelect</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-c1">select</span>(<span class="pl-c1">null</span>,<span class="pl-smi">a</span>.<span class="pl-smi">ctrlKey</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">metaKey</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">shiftKey</span>)});<span class="pl-en">P</span>(<span class="pl-c1">this</span>,a,b,c)},<span class="pl-en">importEvents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">hasImportedEvents</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>.<span class="pl-c1">options</span>.<span class="pl-smi">point</span>,<span class="pl-c1">this</span>.<span class="pl-c1">options</span>).<span class="pl-smi">events</span>,b;<span class="pl-c1">this</span>.<span class="pl-smi">events</span><span class="pl-k">=</span>a;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-en">D</span>(<span class="pl-c1">this</span>,b,a[b]);<span class="pl-c1">this</span>.<span class="pl-smi">hasImportedEvents</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>}},<span class="pl-en">setState</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotX</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">plotY</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-smi">states</span>,g<span class="pl-k">=</span><span class="pl-c1">V</span>[<span class="pl-smi">e</span>.<span class="pl-c1">type</span>].<span class="pl-smi">marker</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-smi">marker</span>,h<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">g</span>.<span class="pl-smi">enabled</span>,i<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">states</span>[a],k<span class="pl-k">=</span>i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>,j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">stateMarkerGraphic</span>,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">marker</span><span class="pl-k">||</span>{},m<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">chart</span>,o<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointAttr</span>,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span>j;<span class="pl-k">if</span>(<span class="pl-k">!</span>(a<span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">state</span><span class="pl-k">&amp;&amp;!</span>b<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">selected</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>f[a]<span class="pl-k">&amp;&amp;</span>f[a].<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">||</span>a<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">||</span>h<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">i</span>.<span class="pl-smi">enabled</span>)<span class="pl-k">||</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">states</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">states</span>[a]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">states</span>[a].<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">graphic</span>)f<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">graphic</span>.<span class="pl-smi">symbolName</span><span class="pl-k">&amp;&amp;</span>o[a].<span class="pl-smi">r</span>,<span class="pl-c1">this</span>.<span class="pl-smi">graphic</span>.<span class="pl-en">attr</span>(<span class="pl-en">w</span>(o[a],f<span class="pl-k">?</span>{x<span class="pl-k">:</span>c<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line">f,y<span class="pl-k">:</span>d<span class="pl-k">-</span>f,width<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>f,height<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>f}<span class="pl-k">:</span>{}));<span class="pl-k">else</span>{<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span>i)<span class="pl-k">if</span>(f<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">radius</span>,l<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">symbol</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">symbol</span>,j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">currentSymbol</span><span class="pl-k">!==</span>l<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">destroy</span>()),j)j[b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({x<span class="pl-k">:</span>c<span class="pl-k">-</span>f,y<span class="pl-k">:</span>d<span class="pl-k">-</span>f});<span class="pl-k">else</span> <span class="pl-smi">e</span>.<span class="pl-smi">stateMarkerGraphic</span><span class="pl-k">=</span>j<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">symbol</span>(l,c<span class="pl-k">-</span>f,d<span class="pl-k">-</span>f,<span class="pl-c1">2</span><span class="pl-k">*</span>f,<span class="pl-c1">2</span><span class="pl-k">*</span>f).<span class="pl-en">attr</span>(o[a]).<span class="pl-c1">add</span>(<span class="pl-smi">e</span>.<span class="pl-smi">markerGroup</span>),<span class="pl-smi">j</span>.<span class="pl-smi">currentSymbol</span><span class="pl-k">=</span>l;<span class="pl-k">if</span>(j)j[a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">isInsidePlot</span>(c,d,<span class="pl-smi">m</span>.<span class="pl-smi">inverted</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>]()}<span class="pl-c1">this</span>.<span class="pl-smi">state</span><span class="pl-k">=</span>a}}});<span class="pl-en">u</span>(<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">onMouseOver</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hoverSeries</span>;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">!==</span><span class="pl-c1">this</span>)<span class="pl-smi">b</span>.<span class="pl-en">onMouseOut</span>();<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">events</span>.<span class="pl-smi">mouseOver</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">P</span>(<span class="pl-c1">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseOver<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">setState</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">=</span><span class="pl-c1">this</span>},<span class="pl-en">onMouseOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltip</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hoverPoint</span>;<span class="pl-k">if</span>(d)<span class="pl-smi">d</span>.<span class="pl-en">onMouseOut</span>();<span class="pl-c1">this</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">events</span>.<span class="pl-smi">mouseOut</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">P</span>(<span class="pl-c1">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseOut<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">stickyTracking</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">shared</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">noSharedTooltip</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">hide</span>();<span class="pl-c1">this</span>.<span class="pl-en">setState</span>();<span class="pl-smi">b</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">setState</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">graph</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">graphNeg</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">states</span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">lineWidth</span>,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">state</span><span class="pl-k">!==</span>a)<span class="pl-c1">this</span>.<span class="pl-smi">state</span><span class="pl-k">=</span>a,e[a]<span class="pl-k">&amp;&amp;</span>e[a].<span class="pl-smi">enabled</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">||</span>(a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>e[a].<span class="pl-smi">lineWidth</span><span class="pl-k">||</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>),c<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">dashstyle</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b},</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-en">attr</span>(a),d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">attr</span>(a)))},<span class="pl-en">setVisible</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">legendItem</span>,f,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">ignoreHiddenSeries</span>,h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">visible</span>;f<span class="pl-k">=</span>(<span class="pl-smi">c</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">userOptions</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span>a<span class="pl-k">===</span>s<span class="pl-k">?</span><span class="pl-k">!</span>h<span class="pl-k">:</span>a)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>;<span class="pl-en">q</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tracker<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(c[a])c[a][f]()});<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">hoverSeries</span><span class="pl-k">===</span>c)<span class="pl-smi">c</span>.<span class="pl-en">onMouseOut</span>();e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">legend</span>.<span class="pl-en">colorizeItem</span>(c,a);<span class="pl-smi">c</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(<span class="pl-smi">d</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">stacking</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span>)<span class="pl-smi">a</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-en">q</span>(<span class="pl-smi">c</span>.<span class="pl-smi">linkedSeries</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-en">setVisible</span>(a,</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>)});<span class="pl-k">if</span>(g)<span class="pl-smi">d</span>.<span class="pl-smi">isDirtyBox</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;b<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">redraw</span>();<span class="pl-en">P</span>(c,f)},<span class="pl-en">setTooltipPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c,d,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>,f<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">getExtremes</span>(),g<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">tooltipLen</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">len</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">plotSizeX</span>,h,i,k<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">enableMouseTracking</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">singularTooltips</span>)){<span class="pl-k">if</span>(a)<span class="pl-c1">this</span>.<span class="pl-smi">tooltipPoints</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">segments</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(a)});e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">reversed</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">reverse</span>());<span class="pl-c1">this</span>.<span class="pl-smi">orderTooltipPoints</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">orderTooltipPoints</span>(b);a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>a;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(e<span class="pl-k">=</span>b[i],c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>,c<span class="pl-k">&gt;=</span><span class="pl-smi">f</span>.<span class="pl-smi">min</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;=</span><span class="pl-smi">f</span>.<span class="pl-smi">max</span>){h<span class="pl-k">=</span>b[i<span class="pl-k">+</span><span class="pl-c1">1</span>];c<span class="pl-k">=</span>d<span class="pl-k">===</span>s<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span><span class="pl-k">:</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>b[i<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">?</span><span class="pl-en">x</span>(<span class="pl-en">v</span>(<span class="pl-c1">0</span>,<span class="pl-en">T</span>((<span class="pl-smi">e</span>.<span class="pl-smi">clientX</span><span class="pl-k">+</span>(h<span class="pl-k">?</span><span class="pl-smi">h</span>.<span class="pl-smi">wrappedClientX</span><span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-smi">clientX</span><span class="pl-k">:</span>g))<span class="pl-k">/</span><span class="pl-c1">2</span>)),g)<span class="pl-k">:</span>g;c<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;=</span>d;)k[c<span class="pl-k">++</span>]<span class="pl-k">=</span>e}<span class="pl-c1">this</span>.<span class="pl-smi">tooltipPoints</span><span class="pl-k">=</span>k}},<span class="pl-en">show</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">setVisible</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">hide</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">setVisible</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>)},<span class="pl-en">select</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span>a<span class="pl-k">=</span>a<span class="pl-k">===</span>s<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-c1">selected</span><span class="pl-k">:</span>a;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">checkbox</span>)<span class="pl-c1">this</span>.<span class="pl-smi">checkbox</span>.<span class="pl-c1">checked</span><span class="pl-k">=</span>a;<span class="pl-en">P</span>(<span class="pl-c1">this</span>,a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>)},drawTracker<span class="pl-k">:</span><span class="pl-smi">gb</span>.<span class="pl-smi">drawTrackerGraph</span>});<span class="pl-en">R</span>(<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;<span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>));(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ordinal</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">D</span>(<span class="pl-c1">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>updatedData<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-smi">ordinalIndex</span>})});<span class="pl-en">R</span>(<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getTimeTicks<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>,j,l<span class="pl-k">=</span>{},m,o,p,n<span class="pl-k">=</span>[],q<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,z<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tickPixelInterval</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ordinal</span><span class="pl-k">||!</span>f<span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-c1">3</span><span class="pl-k">||</span>c<span class="pl-k">===</span>s)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,c,d,e);<span class="pl-k">for</span>(o<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>o;k<span class="pl-k">++</span>){p<span class="pl-k">=</span>k<span class="pl-k">&amp;&amp;</span>f[k<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>d;f[k]<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span>k);<span class="pl-k">if</span>(k<span class="pl-k">===</span>o<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span>f[k<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>f[k]<span class="pl-k">&gt;</span>g<span class="pl-k">*</span><span class="pl-c1">5</span><span class="pl-k">||</span>p){<span class="pl-k">if</span>(f[k]<span class="pl-k">&gt;</span>q){<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,f[i],f[k],e);<span class="pl-smi">j</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>j[<span class="pl-c1">0</span>]<span class="pl-k">&lt;=</span>q;)<span class="pl-smi">j</span>.<span class="pl-c1">shift</span>();<span class="pl-smi">j</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span>j[<span class="pl-smi">j</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]);n<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">concat</span>(j)}i<span class="pl-k">=</span>k<span class="pl-k">+</span><span class="pl-c1">1</span>}<span class="pl-k">if</span>(p)<span class="pl-k">break</span>}a<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">info</span>;<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">unitRange</span><span class="pl-k">&lt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">hour</span>){k<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">n</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">1</span>;i<span class="pl-k">&lt;</span>k;i<span class="pl-k">++</span>)(<span class="pl-k">new</span> <span class="pl-en">Date</span>(n[i]<span class="pl-k">-</span>La))[Va]()<span class="pl-k">!==</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>(n[i<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>La))[Va]()<span class="pl-k">&amp;&amp;</span>(l[n[i]]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>day<span class="pl-pds">&quot;</span></span>,m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);m<span class="pl-k">&amp;&amp;</span>(l[n[<span class="pl-c1">0</span>]]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>day<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-smi">higherRanks</span><span class="pl-k">=</span>l}<span class="pl-smi">n</span>.<span class="pl-smi">info</span><span class="pl-k">=</span>a;<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(z)){<span class="pl-k">var</span> h<span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span>,k<span class="pl-k">=</span>[],t;<span class="pl-k">for</span>(m<span class="pl-k">=</span>[];h<span class="pl-k">--</span>;)i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">translate</span>(n[h]),t<span class="pl-k">&amp;&amp;</span>(m[h]<span class="pl-k">=</span>t<span class="pl-k">-</span>i),k[h]<span class="pl-k">=</span>t<span class="pl-k">=</span>i;<span class="pl-smi">m</span>.<span class="pl-c1">sort</span>();m<span class="pl-k">=</span>m[<span class="pl-en">T</span>(<span class="pl-smi">m</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">2</span>)];m<span class="pl-k">&lt;</span>z<span class="pl-k">*</span><span class="pl-c1">0.6</span><span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-c1">null</span>);h<span class="pl-k">=</span>n[a<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>d<span class="pl-k">?</span>a<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>a;<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;h<span class="pl-k">--</span>;)i<span class="pl-k">=</span>k[h],d<span class="pl-k">=</span>t<span class="pl-k">-</span>i,t<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;</span>z<span class="pl-k">*</span><span class="pl-c1">0.8</span><span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">||</span>d<span class="pl-k">&lt;</span>m<span class="pl-k">*</span><span class="pl-c1">0.8</span>)<span class="pl-k">?</span>(l[n[h]]<span class="pl-k">&amp;&amp;!</span>l[n[h<span class="pl-k">+</span><span class="pl-c1">1</span>]]<span class="pl-k">?</span>(d<span class="pl-k">=</span>h<span class="pl-k">+</span><span class="pl-c1">1</span>,t<span class="pl-k">=</span>i)<span class="pl-k">:</span>d<span class="pl-k">=</span>h,<span class="pl-smi">n</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">1</span>))<span class="pl-k">:</span>t<span class="pl-k">=</span>i}<span class="pl-k">return</span> n});<span class="pl-en">u</span>(<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">beforeSetTickPositions</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line">d,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getExtremes</span>(),f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>,e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span>,g;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ordinal</span>){<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">visible</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">takeOrdinalPosition</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">c</span>.<span class="pl-smi">processedXData</span>),a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,<span class="pl-smi">b</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a<span class="pl-k">-</span>b}),a))<span class="pl-k">for</span>(d<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">1</span>;d<span class="pl-k">--</span>;)b[d]<span class="pl-k">===</span>b[d<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">1</span>)});a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(a<span class="pl-k">&gt;</span><span class="pl-c1">2</span>){d<span class="pl-k">=</span>b[<span class="pl-c1">1</span>]<span class="pl-k">-</span>b[<span class="pl-c1">0</span>];<span class="pl-k">for</span>(g<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">1</span>;g<span class="pl-k">--</span><span class="pl-k">&amp;&amp;!</span>c;)b[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>b[g]<span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">keepOrdinalPadding</span><span class="pl-k">&amp;&amp;</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">-</span>f<span class="pl-k">&gt;</span>d<span class="pl-k">||</span>e<span class="pl-k">-</span>b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>d))c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}c<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ordinalPositions</span><span class="pl-k">=</span>b,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">val2lin</span>(<span class="pl-en">v</span>(f,b[<span class="pl-c1">0</span>]),<span class="pl-k">!</span><span class="pl-c1">0</span>),d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">val2lin</span>(<span class="pl-en">x</span>(e,b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]),</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-c1">this</span>.<span class="pl-smi">ordinalSlope</span><span class="pl-k">=</span>e<span class="pl-k">=</span>(e<span class="pl-k">-</span>f)<span class="pl-k">/</span>(d<span class="pl-k">-</span>c),<span class="pl-c1">this</span>.<span class="pl-smi">ordinalOffset</span><span class="pl-k">=</span>f<span class="pl-k">-</span>c<span class="pl-k">*</span>e)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalPositions</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalSlope</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalOffset</span><span class="pl-k">=</span>s}<span class="pl-c1">this</span>.<span class="pl-smi">groupIntervalFactor</span><span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">val2lin</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalPositions</span>;<span class="pl-k">if</span>(c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,e,f;<span class="pl-k">for</span>(e<span class="pl-k">=</span>d;e<span class="pl-k">--</span>;)<span class="pl-k">if</span>(c[e]<span class="pl-k">===</span>a){f<span class="pl-k">=</span>e;<span class="pl-k">break</span>}<span class="pl-k">for</span>(e<span class="pl-k">=</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>;e<span class="pl-k">--</span>;)<span class="pl-k">if</span>(a<span class="pl-k">&gt;</span>c[e]<span class="pl-k">||</span>e<span class="pl-k">===</span><span class="pl-c1">0</span>){c<span class="pl-k">=</span>(a<span class="pl-k">-</span>c[e])<span class="pl-k">/</span>(c[e<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>c[e]);f<span class="pl-k">=</span>e<span class="pl-k">+</span>c;<span class="pl-k">break</span>}<span class="pl-k">return</span> b<span class="pl-k">?</span>f<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalSlope</span><span class="pl-k">*</span>(f<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalOffset</span>}<span class="pl-k">else</span> <span class="pl-k">return</span> a},<span class="pl-en">lin2val</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalPositions</span>;<span class="pl-k">if</span>(c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalSlope</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalOffset</span>,</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,g,h;<span class="pl-k">if</span>(b)a<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>a<span class="pl-k">=</span>c[<span class="pl-c1">0</span>]<span class="pl-k">:</span>a<span class="pl-k">&gt;</span>f<span class="pl-k">?</span>a<span class="pl-k">=</span>c[f]<span class="pl-k">:</span>(f<span class="pl-k">=</span><span class="pl-en">T</span>(a),h<span class="pl-k">=</span>a<span class="pl-k">-</span>f);<span class="pl-k">else</span> <span class="pl-k">for</span>(;f<span class="pl-k">--</span>;)<span class="pl-k">if</span>(g<span class="pl-k">=</span>d<span class="pl-k">*</span>f<span class="pl-k">+</span>e,a<span class="pl-k">&gt;=</span>g){d<span class="pl-k">=</span>d<span class="pl-k">*</span>(f<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>e;h<span class="pl-k">=</span>(a<span class="pl-k">-</span>g)<span class="pl-k">/</span>(d<span class="pl-k">-</span>g);<span class="pl-k">break</span>}<span class="pl-k">return</span> h<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>c[f]<span class="pl-k">!==</span>s<span class="pl-k">?</span>c[f]<span class="pl-k">+</span>(h<span class="pl-k">?</span>h<span class="pl-k">*</span>(c[f<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>c[f])<span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>a}<span class="pl-k">else</span> <span class="pl-k">return</span> a},<span class="pl-en">getExtendedPositions</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>[<span class="pl-c1">0</span>].<span class="pl-smi">currentDataGrouping</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalIndex</span>,d<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">count</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">unitName</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>raw<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getExtremes</span>(),f,g;<span class="pl-k">if</span>(<span class="pl-k">!</span>c)c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalIndex</span><span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-k">!</span>c[d])f<span class="pl-k">=</span>{series<span class="pl-k">:</span>[],<span class="pl-en">getExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{min<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">dataMin</span>,max<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">dataMax</span>}},options<span class="pl-k">:</span>{ordinal<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},val2lin<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">val2lin</span>},</td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line"><span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){g<span class="pl-k">=</span>{xAxis<span class="pl-k">:</span>f,xData<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">xData</span>,chart<span class="pl-k">:</span>a,destroyGroupedData<span class="pl-k">:</span>ta};<span class="pl-smi">g</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>{dataGrouping<span class="pl-k">:</span>b<span class="pl-k">?</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,forced<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,approximation<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>open<span class="pl-pds">&quot;</span></span>,units<span class="pl-k">:</span>[[<span class="pl-smi">b</span>.<span class="pl-smi">unitName</span>,[<span class="pl-smi">b</span>.<span class="pl-smi">count</span>]]]}<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}};<span class="pl-smi">c</span>.<span class="pl-smi">processData</span>.<span class="pl-c1">apply</span>(g);<span class="pl-smi">f</span>.<span class="pl-smi">series</span>.<span class="pl-c1">push</span>(g)}),<span class="pl-c1">this</span>.<span class="pl-smi">beforeSetTickPositions</span>.<span class="pl-c1">apply</span>(f),c[d]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">ordinalPositions</span>;<span class="pl-k">return</span> c[d]},<span class="pl-en">getGroupIntervalFactor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">processedXData</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">groupIntervalFactor</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>g){<span class="pl-k">for</span>(;d<span class="pl-k">&lt;</span>e<span class="pl-k">-</span><span class="pl-c1">1</span>;d<span class="pl-k">++</span>)f[d]<span class="pl-k">=</span>c[d<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>c[d];<span class="pl-smi">f</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a<span class="pl-k">-</span>b});d<span class="pl-k">=</span>f[<span class="pl-en">T</span>(e<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span>)];a<span class="pl-k">=</span><span class="pl-en">v</span>(a,c[<span class="pl-c1">0</span>]);b<span class="pl-k">=</span><span class="pl-en">x</span>(b,c[e<span class="pl-k">-</span><span class="pl-c1">1</span>]);<span class="pl-c1">this</span>.<span class="pl-smi">groupIntervalFactor</span><span class="pl-k">=</span>g<span class="pl-k">=</span>e<span class="pl-k">*</span>d<span class="pl-k">/</span>(b<span class="pl-k">-</span>a)}<span class="pl-k">return</span> g},<span class="pl-en">postProcessTickInterval</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ordinalSlope</span>;<span class="pl-k">return</span> b<span class="pl-k">?</span>a<span class="pl-k">/</span>(b<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">closestPointRange</span>)<span class="pl-k">:</span>a}});<span class="pl-en">R</span>(<span class="pl-smi">sa</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pan<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>],d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chartX</span>,e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ordinal</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">series</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mouseDownX</span>,g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getExtremes</span>(),h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">dataMax</span>,i<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">min</span>,k<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">max</span>,j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">hoverPoints</span>,l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">closestPointRange</span>,f<span class="pl-k">=</span>(f<span class="pl-k">-</span>d)<span class="pl-k">/</span>(<span class="pl-smi">c</span>.<span class="pl-smi">translationSlope</span><span class="pl-k">*</span>(<span class="pl-smi">c</span>.<span class="pl-smi">ordinalSlope</span><span class="pl-k">||</span>l)),m<span class="pl-k">=</span>{ordinalPositions<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-en">getExtendedPositions</span>()},l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">lin2val</span>,</td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line">o<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">val2lin</span>,p;<span class="pl-k">if</span>(<span class="pl-smi">m</span>.<span class="pl-smi">ordinalPositions</span>){<span class="pl-k">if</span>(<span class="pl-en">O</span>(f)<span class="pl-k">&gt;</span><span class="pl-c1">1</span>)j<span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">setState</span>()}),f<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>(j<span class="pl-k">=</span>m,p<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">ordinalPositions</span><span class="pl-k">?</span>c<span class="pl-k">:</span>m)<span class="pl-k">:</span>(j<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">ordinalPositions</span><span class="pl-k">?</span>c<span class="pl-k">:</span>m,p<span class="pl-k">=</span>m),m<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">ordinalPositions</span>,h<span class="pl-k">&gt;</span>m[<span class="pl-smi">m</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-c1">push</span>(h),<span class="pl-c1">this</span>.<span class="pl-smi">fixedRange</span><span class="pl-k">=</span>k<span class="pl-k">-</span>i,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">toFixedRange</span>(<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-smi">l</span>.<span class="pl-c1">apply</span>(j,[<span class="pl-smi">o</span>.<span class="pl-c1">apply</span>(j,[i,<span class="pl-k">!</span><span class="pl-c1">0</span>])<span class="pl-k">+</span>f,<span class="pl-k">!</span><span class="pl-c1">0</span>]),<span class="pl-smi">l</span>.<span class="pl-c1">apply</span>(p,[<span class="pl-smi">o</span>.<span class="pl-c1">apply</span>(p,[k,<span class="pl-k">!</span><span class="pl-c1">0</span>])<span class="pl-k">+</span>f,<span class="pl-k">!</span><span class="pl-c1">0</span>])),<span class="pl-smi">f</span>.<span class="pl-smi">min</span><span class="pl-k">&gt;=</span><span class="pl-en">x</span>(<span class="pl-smi">g</span>.<span class="pl-smi">dataMin</span>,i)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">max</span><span class="pl-k">&lt;=</span><span class="pl-en">v</span>(h,k)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">setExtremes</span>(<span class="pl-smi">f</span>.<span class="pl-smi">min</span>,<span class="pl-smi">f</span>.<span class="pl-smi">max</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,{trigger<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pan<span class="pl-pds">&quot;</span></span>}),<span class="pl-c1">this</span>.<span class="pl-smi">mouseDownX</span><span class="pl-k">=</span>d,<span class="pl-en">J</span>(<span class="pl-c1">this</span>.<span class="pl-smi">container</span>,{cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>move<span class="pl-pds">&quot;</span></span>})}<span class="pl-k">else</span> e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>))});<span class="pl-en">R</span>(<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getSegments<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">gapSize</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>;<span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>));<span class="pl-k">if</span>(c)b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">segments</span>,<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">f</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;g<span class="pl-k">--</span>;)a[g<span class="pl-k">+</span><span class="pl-c1">1</span>].<span class="pl-c1">x</span><span class="pl-k">-</span>a[g].<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-smi">d</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">*</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(f<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">splice</span>(g<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span>g))})});<span class="pl-k">var</span> <span class="pl-c1">Z</span><span class="pl-k">=</span><span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>,<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-smi">Gb</span>.<span class="pl-c1">prototype</span>,gc<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-smi">processData</span>,hc<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-smi">generatePoints</span>,ic<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-smi">destroy</span>,jc<span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-smi">tooltipHeaderFormatter</span>,kc<span class="pl-k">=</span>{approximation<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>average<span class="pl-pds">&quot;</span></span>,groupPixelWidth<span class="pl-k">:</span><span class="pl-c1">2</span>,dateTimeLabelFormats<span class="pl-k">:</span><span class="pl-en">Jb</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>millisecond<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M:%S.%L<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M:%S.%L<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-%H:%M:%S.%L<span class="pl-pds">&quot;</span></span>],<span class="pl-s"><span class="pl-pds">&quot;</span>second<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M:%S<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M:%S<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-%H:%M:%S<span class="pl-pds">&quot;</span></span>],<span class="pl-s"><span class="pl-pds">&quot;</span>minute<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-%H:%M<span class="pl-pds">&quot;</span></span>],<span class="pl-s"><span class="pl-pds">&quot;</span>hour<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-%H:%M<span class="pl-pds">&quot;</span></span>],<span class="pl-s"><span class="pl-pds">&quot;</span>day<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e, %Y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-%A, %b %e, %Y<span class="pl-pds">&quot;</span></span>],<span class="pl-s"><span class="pl-pds">&quot;</span>week<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>Week from %A, %b %e, %Y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>%A, %b %e<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-%A, %b %e, %Y<span class="pl-pds">&quot;</span></span>],<span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>%B %Y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>%B<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-%B %Y<span class="pl-pds">&quot;</span></span>],<span class="pl-s"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-%Y<span class="pl-pds">&quot;</span></span>])},Wb<span class="pl-k">=</span>{line<span class="pl-k">:</span>{},spline<span class="pl-k">:</span>{},area<span class="pl-k">:</span>{},areaspline<span class="pl-k">:</span>{},column<span class="pl-k">:</span>{approximation<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sum<span class="pl-pds">&quot;</span></span>,groupPixelWidth<span class="pl-k">:</span><span class="pl-c1">10</span>},arearange<span class="pl-k">:</span>{approximation<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>},</td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line">areasplinerange<span class="pl-k">:</span>{approximation<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>},columnrange<span class="pl-k">:</span>{approximation<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>,groupPixelWidth<span class="pl-k">:</span><span class="pl-c1">10</span>},candlestick<span class="pl-k">:</span>{approximation<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ohlc<span class="pl-pds">&quot;</span></span>,groupPixelWidth<span class="pl-k">:</span><span class="pl-c1">10</span>},ohlc<span class="pl-k">:</span>{approximation<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ohlc<span class="pl-pds">&quot;</span></span>,groupPixelWidth<span class="pl-k">:</span><span class="pl-c1">5</span>}},Xb<span class="pl-k">=</span>[[<span class="pl-s"><span class="pl-pds">&quot;</span>millisecond<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>,<span class="pl-c1">20</span>,<span class="pl-c1">25</span>,<span class="pl-c1">50</span>,<span class="pl-c1">100</span>,<span class="pl-c1">200</span>,<span class="pl-c1">500</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>second<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>,<span class="pl-c1">15</span>,<span class="pl-c1">30</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>minute<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>,<span class="pl-c1">15</span>,<span class="pl-c1">30</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>hour<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>,<span class="pl-c1">8</span>,<span class="pl-c1">12</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>day<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>week<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">3</span>,<span class="pl-c1">6</span>]],[<span class="pl-s"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>]],Pa<span class="pl-k">=</span>{<span class="pl-en">sum</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c;<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">hasNulls</span>)c<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(b)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">--</span>;)c<span class="pl-k">+=</span>a[b];<span class="pl-k">return</span> c},<span class="pl-en">average</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,a<span class="pl-k">=</span><span class="pl-smi">Pa</span>.<span class="pl-en">sum</span>(a);<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">/=</span>b);<span class="pl-k">return</span> a},<span class="pl-en">open</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>a[<span class="pl-c1">0</span>]<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">hasNulls</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span>s},<span class="pl-en">high</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-en">Aa</span>(a)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">hasNulls</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span>s},<span class="pl-en">low</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-en">Sa</span>(a)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">hasNulls</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span>s},<span class="pl-en">close</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">hasNulls</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span>s},<span class="pl-en">ohlc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){a<span class="pl-k">=</span><span class="pl-smi">Pa</span>.<span class="pl-c1">open</span>(a);b<span class="pl-k">=</span><span class="pl-smi">Pa</span>.<span class="pl-en">high</span>(b);c<span class="pl-k">=</span><span class="pl-smi">Pa</span>.<span class="pl-en">low</span>(c);d<span class="pl-k">=</span><span class="pl-smi">Pa</span>.<span class="pl-c1">close</span>(d);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-k">typeof</span> b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-k">typeof</span> c<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-k">typeof</span> d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span>[a,b,c,d]},<span class="pl-en">range</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Pa</span>.<span class="pl-en">low</span>(a);b<span class="pl-k">=</span><span class="pl-smi">Pa</span>.<span class="pl-en">high</span>(b);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-k">typeof</span> b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span>[a,b]}};<span class="pl-c1">Z</span>.<span class="pl-en">groupData</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>,g<span class="pl-k">=</span>[],h<span class="pl-k">=</span>[],i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,k,j,l<span class="pl-k">=</span><span class="pl-k">!!</span>b,m<span class="pl-k">=</span>[[],[],[],[]],d<span class="pl-k">=</span><span class="pl-k">typeof</span> d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>d<span class="pl-k">:</span>Pa[d],o<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointArrayMap</span>,p<span class="pl-k">=</span>o<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-c1">length</span>,n;<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;=</span>i;n<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[n]<span class="pl-k">&gt;=</span>c[<span class="pl-c1">0</span>])<span class="pl-k">break</span>;<span class="pl-k">for</span>(;n<span class="pl-k">&lt;=</span>i;n<span class="pl-k">++</span>){<span class="pl-k">for</span>(;c[<span class="pl-c1">1</span>]<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>a[n]<span class="pl-k">&gt;=</span>c[<span class="pl-c1">1</span>]<span class="pl-k">||</span>n<span class="pl-k">===</span>i;)<span class="pl-k">if</span>(k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">shift</span>(),j<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">0</span>,m),j<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(k),<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(j)),m[<span class="pl-c1">0</span>]<span class="pl-k">=</span>[],m[<span class="pl-c1">1</span>]<span class="pl-k">=</span>[],m[<span class="pl-c1">2</span>]<span class="pl-k">=</span>[],m[<span class="pl-c1">3</span>]<span class="pl-k">=</span>[],n<span class="pl-k">===</span>i)<span class="pl-k">break</span>;<span class="pl-k">if</span>(n<span class="pl-k">===</span>i)<span class="pl-k">break</span>;<span class="pl-k">if</span>(o){k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">cropStart</span><span class="pl-k">+</span>n;k<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span>e[k]<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">pointClass</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">applyOptions</span>.<span class="pl-c1">apply</span>({series<span class="pl-k">:</span><span class="pl-c1">this</span>},[f[k]]);<span class="pl-k">var</span> q;<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>p;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(q<span class="pl-k">=</span>k[o[j]],<span class="pl-k">typeof</span> q<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>)m[j].<span class="pl-c1">push</span>(q);<span class="pl-k">else</span> <span class="pl-k">if</span>(q<span class="pl-k">===</span><span class="pl-c1">null</span>)m[j].<span class="pl-smi">hasNulls</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(k<span class="pl-k">=</span>l<span class="pl-k">?</span>b[n]<span class="pl-k">:</span><span class="pl-c1">null</span>,<span class="pl-k">typeof</span> k<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>)m[<span class="pl-c1">0</span>].<span class="pl-c1">push</span>(k);<span class="pl-k">else</span> <span class="pl-k">if</span>(k<span class="pl-k">===</span><span class="pl-c1">null</span>)m[<span class="pl-c1">0</span>].<span class="pl-smi">hasNulls</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span>[g,h]};<span class="pl-c1">Z</span>.<span class="pl-en">processData</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">dataGrouping</span>,d<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(<span class="pl-smi">c</span>.<span class="pl-smi">enabled</span>,<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">_stock</span>),e;<span class="pl-c1">this</span>.<span class="pl-smi">forceCrop</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">groupPixelWidth</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">hasProcessed</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">gc</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>d){<span class="pl-c1">this</span>.<span class="pl-en">destroyGroupedData</span>();</td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">processedXData</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">processedYData</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">plotSizeX</span>,a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>,i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ordinal</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">groupPixelWidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">getGroupPixelWidth</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">getGroupPixelWidth</span>(),d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointRange</span>;<span class="pl-k">if</span>(k){e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">points</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getExtremes</span>(),d<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">min</span>,j<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">max</span>,i<span class="pl-k">=</span>i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">getGroupIntervalFactor</span>(d,j,<span class="pl-c1">this</span>)<span class="pl-k">||</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span>k<span class="pl-k">*</span>(j<span class="pl-k">-</span>d)<span class="pl-k">/</span>h<span class="pl-k">*</span>i,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getTimeTicks</span>(<span class="pl-smi">a</span>.<span class="pl-en">normalizeTimeTickInterval</span>(h,<span class="pl-smi">c</span>.<span class="pl-smi">units</span><span class="pl-k">||</span>Xb),d,j,<span class="pl-c1">null</span>,f,<span class="pl-c1">this</span>.<span class="pl-smi">closestPointRange</span>),g<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-smi">groupData</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,[f,g,k,<span class="pl-smi">c</span>.<span class="pl-smi">approximation</span>]),f<span class="pl-k">=</span>g[<span class="pl-c1">0</span>],g<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">smoothed</span>){c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(f[c]<span class="pl-k">=</span>j;c<span class="pl-k">--</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">&gt;</span><span class="pl-c1">0</span>;)f[c]<span class="pl-k">+=</span>h<span class="pl-k">/</span><span class="pl-c1">2</span>;f[<span class="pl-c1">0</span>]<span class="pl-k">=</span>d}<span class="pl-c1">this</span>.<span class="pl-smi">currentDataGrouping</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">info</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pointRange</span><span class="pl-k">===</span><span class="pl-c1">null</span>)<span class="pl-c1">this</span>.<span class="pl-smi">pointRange</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">info</span>.<span class="pl-smi">totalRange</span>;<span class="pl-c1">this</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">info</span>.<span class="pl-smi">totalRange</span>;<span class="pl-k">if</span>(<span class="pl-en">r</span>(f[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span>)<span class="pl-smi">a</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span>f[<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-smi">processedXData</span><span class="pl-k">=</span>f;<span class="pl-c1">this</span>.<span class="pl-smi">processedYData</span><span class="pl-k">=</span>g}<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-smi">currentDataGrouping</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">this</span>.<span class="pl-smi">pointRange</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">hasGroupedData</span><span class="pl-k">=</span>e}};<span class="pl-c1">Z</span>.<span class="pl-en">destroyGroupedData</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">groupedData</span>;<span class="pl-en">q</span>(a<span class="pl-k">||</span>[],<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){b<span class="pl-k">&amp;&amp;</span>(a[c]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">destroy</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">destroy</span>()<span class="pl-k">:</span><span class="pl-c1">null</span>)});<span class="pl-c1">this</span>.<span class="pl-smi">groupedData</span><span class="pl-k">=</span><span class="pl-c1">null</span>};<span class="pl-c1">Z</span>.<span class="pl-en">generatePoints</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">hc</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-en">destroyGroupedData</span>();</td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">groupedData</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">hasGroupedData</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span><span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-c1">L</span>.<span class="pl-en">tooltipHeaderFormatter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">tooltipOptions</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">dataGrouping</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">xDateFormat</span>,f,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>,h;<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">options</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>datetime<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-en">za</span>(<span class="pl-smi">a</span>.<span class="pl-smi">key</span>)){b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">currentDataGrouping</span>;d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">dateTimeLabelFormats</span>;<span class="pl-k">if</span>(b)g<span class="pl-k">=</span>d[<span class="pl-smi">b</span>.<span class="pl-smi">unitName</span>],<span class="pl-smi">b</span>.<span class="pl-smi">count</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>e<span class="pl-k">=</span>g[<span class="pl-c1">0</span>]<span class="pl-k">:</span>(e<span class="pl-k">=</span>g[<span class="pl-c1">1</span>],f<span class="pl-k">=</span>g[<span class="pl-c1">2</span>]);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;</span>d)<span class="pl-k">for</span>(h <span class="pl-k">in</span> <span class="pl-c1">A</span>)<span class="pl-k">if</span>(<span class="pl-c1">A</span>[h]<span class="pl-k">&gt;=</span><span class="pl-smi">g</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">||</span><span class="pl-c1">A</span>[h]<span class="pl-k">&lt;=</span><span class="pl-c1">A</span>.<span class="pl-smi">day</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">key</span><span class="pl-k">%</span><span class="pl-c1">A</span>[h]<span class="pl-k">&gt;</span><span class="pl-c1">0</span>){e<span class="pl-k">=</span>d[h][<span class="pl-c1">0</span>];<span class="pl-k">break</span>}e<span class="pl-k">=</span><span class="pl-en">ra</span>(e,<span class="pl-smi">a</span>.<span class="pl-smi">key</span>);f<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">+=</span><span class="pl-en">ra</span>(f,<span class="pl-smi">a</span>.<span class="pl-smi">key</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">totalRange</span><span class="pl-k">-</span><span class="pl-c1">1</span>));a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">headerFormat</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>{point.key}<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line">e)}<span class="pl-k">else</span> a<span class="pl-k">=</span><span class="pl-smi">jc</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-k">return</span> a};<span class="pl-c1">Z</span>.<span class="pl-en">destroy</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">groupedData</span><span class="pl-k">||</span>[],b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">--</span>;)a[b]<span class="pl-k">&amp;&amp;</span>a[b].<span class="pl-en">destroy</span>();<span class="pl-smi">ic</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>)};<span class="pl-en">R</span>(<span class="pl-c1">Z</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>setOptions<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b),d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">plotOptions</span>,f<span class="pl-k">=</span><span class="pl-c1">V</span>[d].<span class="pl-smi">dataGrouping</span>;<span class="pl-k">if</span>(Wb[d])f<span class="pl-k">||</span>(f<span class="pl-k">=</span><span class="pl-en">w</span>(kc,Wb[d])),<span class="pl-smi">c</span>.<span class="pl-smi">dataGrouping</span><span class="pl-k">=</span><span class="pl-en">w</span>(f,<span class="pl-smi">e</span>.<span class="pl-smi">series</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">series</span>.<span class="pl-smi">dataGrouping</span>,e[d].<span class="pl-smi">dataGrouping</span>,<span class="pl-smi">b</span>.<span class="pl-smi">dataGrouping</span>);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">_stock</span>)<span class="pl-c1">this</span>.<span class="pl-smi">requireSorting</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> c});<span class="pl-en">R</span>(<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>setScale<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">hasProcessed</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>})});<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getGroupPixelWidth</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,f;<span class="pl-k">for</span>(c<span class="pl-k">=</span>b;c<span class="pl-k">--</span>;)(f<span class="pl-k">=</span>a[c].<span class="pl-c1">options</span>.<span class="pl-smi">dataGrouping</span>)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-en">v</span>(d,<span class="pl-smi">f</span>.<span class="pl-smi">groupPixelWidth</span>));<span class="pl-k">for</span>(c<span class="pl-k">=</span>b;c<span class="pl-k">--</span>;)<span class="pl-k">if</span>((f<span class="pl-k">=</span>a[c].<span class="pl-c1">options</span>.<span class="pl-smi">dataGrouping</span>)<span class="pl-k">&amp;&amp;</span>a[c].<span class="pl-smi">hasProcessed</span>)<span class="pl-k">if</span>(b<span class="pl-k">=</span>(a[c].<span class="pl-smi">processedXData</span><span class="pl-k">||</span>a[c].<span class="pl-c1">data</span>).<span class="pl-c1">length</span>,a[c].<span class="pl-smi">groupPixelWidth</span><span class="pl-k">||</span>b<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">plotSizeX</span><span class="pl-k">/</span>d<span class="pl-k">||</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">forced</span>)e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> e<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-c1">V</span>.<span class="pl-smi">ohlc</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">V</span>.<span class="pl-smi">column</span>,{lineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,tooltip<span class="pl-k">:</span>{pointFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span style=&quot;color:{series.color};font-weight:bold&quot;&gt;{series.name}&lt;/span&gt;&lt;br/&gt;Open: {point.open}&lt;br/&gt;High: {point.high}&lt;br/&gt;Low: {point.low}&lt;br/&gt;Close: {point.close}&lt;br/&gt;<span class="pl-pds">&#39;</span></span>},</td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line">states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{lineWidth<span class="pl-k">:</span><span class="pl-c1">3</span>}},threshold<span class="pl-k">:</span><span class="pl-c1">null</span>});<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-en">ca</span>(<span class="pl-c1">H</span>.<span class="pl-smi">column</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ohlc<span class="pl-pds">&quot;</span></span>,pointArrayMap<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>open<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>high<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>low<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>close<span class="pl-pds">&quot;</span></span>],<span class="pl-en">toYData</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[<span class="pl-smi">a</span>.<span class="pl-smi">open</span>,<span class="pl-smi">a</span>.<span class="pl-smi">high</span>,<span class="pl-smi">a</span>.<span class="pl-smi">low</span>,<span class="pl-smi">a</span>.<span class="pl-smi">close</span>]},pointValKey<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>high<span class="pl-pds">&quot;</span></span>,pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineWidth<span class="pl-pds">&quot;</span></span>},upColorProp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>,<span class="pl-en">getAttribs</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">H</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getAttribs</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">states</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">upColor</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span>,c<span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pointAttr</span>),d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">upColorProp</span>;c[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>][d]<span class="pl-k">=</span>a;<span class="pl-smi">c</span>.<span class="pl-smi">hover</span>[d]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hover</span>.<span class="pl-smi">upColor</span><span class="pl-k">||</span>a;<span class="pl-smi">c</span>.<span class="pl-smi">select</span>[d]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">select</span>.<span class="pl-smi">upColor</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line">a;<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">open</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">close</span>)<span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span><span class="pl-k">=</span>c})},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>;<span class="pl-c1">H</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">translate</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>);<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">open</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-smi">b</span>.<span class="pl-smi">plotOpen</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">translate</span>(<span class="pl-smi">b</span>.<span class="pl-smi">open</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">close</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-smi">b</span>.<span class="pl-smi">plotClose</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">translate</span>(<span class="pl-smi">b</span>.<span class="pl-smi">close</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)})},<span class="pl-en">drawPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c,d,e,f,g,h,i,k;<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">j</span>){<span class="pl-k">if</span>(<span class="pl-smi">j</span>.<span class="pl-smi">plotY</span><span class="pl-k">!==</span>s)i<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">graphic</span>,c<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-smi">j</span>.<span class="pl-c1">selected</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>selected<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>],f<span class="pl-k">=</span>c[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>,k<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">j</span>.<span class="pl-smi">plotX</span>)<span class="pl-k">-</span>f,g<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">j</span>.<span class="pl-smi">shapeArgs</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">2</span>),h<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line">[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,k,<span class="pl-en">t</span>(<span class="pl-smi">j</span>.<span class="pl-smi">yBottom</span>),<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,k,<span class="pl-en">t</span>(<span class="pl-smi">j</span>.<span class="pl-smi">plotY</span>)],<span class="pl-smi">j</span>.<span class="pl-smi">open</span><span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">j</span>.<span class="pl-smi">plotOpen</span>)<span class="pl-k">+</span>f,<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,k,d,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,k<span class="pl-k">-</span>g,d)),<span class="pl-smi">j</span>.<span class="pl-smi">close</span><span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">j</span>.<span class="pl-smi">plotClose</span>)<span class="pl-k">+</span>f,<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,k,e,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,k<span class="pl-k">+</span>g,e)),i<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>h})<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">path</span>(h).<span class="pl-en">attr</span>(c).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>)})},animate<span class="pl-k">:</span><span class="pl-c1">null</span>});<span class="pl-c1">H</span>.<span class="pl-smi">ohlc</span><span class="pl-k">=</span><span class="pl-c1">L</span>;<span class="pl-c1">V</span>.<span class="pl-smi">candlestick</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">V</span>.<span class="pl-smi">column</span>,{lineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{lineWidth<span class="pl-k">:</span><span class="pl-c1">2</span>}},tooltip<span class="pl-k">:</span><span class="pl-c1">V</span>.<span class="pl-smi">ohlc</span>.<span class="pl-smi">tooltip</span>,threshold<span class="pl-k">:</span><span class="pl-c1">null</span>,upColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white<span class="pl-pds">&quot;</span></span>});<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-en">ca</span>(<span class="pl-c1">L</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>candlestick<span class="pl-pds">&quot;</span></span>,pointAttrToOptions<span class="pl-k">:</span>{fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineColor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineWidth<span class="pl-pds">&quot;</span></span>},</td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line">upColorProp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>,<span class="pl-en">getAttribs</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">H</span>.<span class="pl-smi">ohlc</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getAttribs</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">states</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">upLineColor</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">lineColor</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">hover</span>.<span class="pl-smi">upLineColor</span><span class="pl-k">||</span>c,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">select</span>.<span class="pl-smi">upLineColor</span><span class="pl-k">||</span>c;<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">open</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">close</span>)<span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>].<span class="pl-smi">stroke</span><span class="pl-k">=</span>c,<span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>.<span class="pl-smi">hover</span>.<span class="pl-smi">stroke</span><span class="pl-k">=</span>d,<span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>.<span class="pl-smi">select</span>.<span class="pl-smi">stroke</span><span class="pl-k">=</span>e})},<span class="pl-en">drawPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>],e,f,g,h,i,k,j,l,m,o,p;<span class="pl-en">q</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>,<span class="pl-k">function</span>(<span class="pl-smi">n</span>){m<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">graphic</span>;<span class="pl-k">if</span>(<span class="pl-smi">n</span>.<span class="pl-smi">plotY</span><span class="pl-k">!==</span>s)c<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-smi">n</span>.<span class="pl-c1">selected</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>selected<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line">d,j<span class="pl-k">=</span>c[<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>,l<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">n</span>.<span class="pl-smi">plotX</span>)<span class="pl-k">-</span>j,e<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">plotOpen</span>,f<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">plotClose</span>,g<span class="pl-k">=</span><span class="pl-c1">W</span>.<span class="pl-en">min</span>(e,f),h<span class="pl-k">=</span><span class="pl-c1">W</span>.<span class="pl-en">max</span>(e,f),p<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-smi">n</span>.<span class="pl-smi">shapeArgs</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">2</span>),i<span class="pl-k">=</span><span class="pl-en">t</span>(g)<span class="pl-k">!==</span><span class="pl-en">t</span>(<span class="pl-smi">n</span>.<span class="pl-smi">plotY</span>),k<span class="pl-k">=</span>h<span class="pl-k">!==</span><span class="pl-smi">n</span>.<span class="pl-smi">yBottom</span>,g<span class="pl-k">=</span><span class="pl-en">t</span>(g)<span class="pl-k">+</span>j,h<span class="pl-k">=</span><span class="pl-en">t</span>(h)<span class="pl-k">+</span>j,o<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,l<span class="pl-k">-</span>p,h,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,l<span class="pl-k">-</span>p,g,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,l<span class="pl-k">+</span>p,g,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,l<span class="pl-k">+</span>p,h,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,l,g,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,l,i<span class="pl-k">?</span><span class="pl-en">t</span>(<span class="pl-smi">n</span>.<span class="pl-smi">plotY</span>)<span class="pl-k">:</span>g,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,l,h,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,l,k<span class="pl-k">?</span><span class="pl-en">t</span>(<span class="pl-smi">n</span>.<span class="pl-smi">yBottom</span>)<span class="pl-k">:</span>h,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>],m<span class="pl-k">?</span><span class="pl-smi">m</span>.<span class="pl-c1">animate</span>({d<span class="pl-k">:</span>o})<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>.<span class="pl-en">path</span>(o).<span class="pl-en">attr</span>(c).<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>).<span class="pl-en">shadow</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">shadow</span>)})}});<span class="pl-c1">H</span>.<span class="pl-smi">candlestick</span><span class="pl-k">=</span><span class="pl-c1">L</span>;<span class="pl-k">var</span> qb<span class="pl-k">=</span><span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">symbols</span>;<span class="pl-c1">V</span>.<span class="pl-smi">flags</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">V</span>.<span class="pl-smi">column</span>,{dataGrouping<span class="pl-k">:</span><span class="pl-c1">null</span>,fillColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white<span class="pl-pds">&quot;</span></span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,pointRange<span class="pl-k">:</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line">shape<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>flag<span class="pl-pds">&quot;</span></span>,stackDistance<span class="pl-k">:</span><span class="pl-c1">12</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{lineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>,fillColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FCFFC5<span class="pl-pds">&quot;</span></span>}},style<span class="pl-k">:</span>{fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>11px<span class="pl-pds">&quot;</span></span>,fontWeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>,textAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>},tooltip<span class="pl-k">:</span>{pointFormat<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>{point.text}&lt;br/&gt;<span class="pl-pds">&quot;</span></span>},threshold<span class="pl-k">:</span><span class="pl-c1">null</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">30</span>});<span class="pl-c1">H</span>.<span class="pl-smi">flags</span><span class="pl-k">=</span><span class="pl-en">ca</span>(<span class="pl-c1">H</span>.<span class="pl-smi">column</span>,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>flags<span class="pl-pds">&quot;</span></span>,sorted<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,noSharedTooltip<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,takeOrdinalPosition<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,trackerGroups<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>],forceCrop<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,init<span class="pl-k">:</span><span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">init</span>,pointAttrToOptions<span class="pl-k">:</span>{fill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fillColor<span class="pl-pds">&quot;</span></span>,stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineWidth<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>radius<span class="pl-pds">&quot;</span></span>},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">H</span>.<span class="pl-smi">column</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">translate</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>);</td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,d,e,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">onSeries</span>,f<span class="pl-k">=</span>(d<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">get</span>(f))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-smi">step</span>,g<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">points</span>,h<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>,k<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">getExtremes</span>(),j,l,m;<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>h){d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">currentDataGrouping</span>;l<span class="pl-k">=</span>g[h<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">x</span><span class="pl-k">+</span>(d<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">totalRange</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">for</span>(<span class="pl-smi">b</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>});h<span class="pl-k">--</span><span class="pl-k">&amp;&amp;</span>b[c];)<span class="pl-k">if</span>(d<span class="pl-k">=</span>b[c],j<span class="pl-k">=</span>g[h],<span class="pl-smi">j</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">j</span>.<span class="pl-smi">plotY</span><span class="pl-k">!==</span>s){<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span>l)<span class="pl-smi">d</span>.<span class="pl-smi">plotY</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">plotY</span>,<span class="pl-smi">j</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;!</span>f<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span>g[h<span class="pl-k">+</span><span class="pl-c1">1</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-smi">plotY</span><span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">plotY</span><span class="pl-k">+=</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">j</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span>(<span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">j</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span>(<span class="pl-smi">m</span>.<span class="pl-smi">plotY</span><span class="pl-k">-</span><span class="pl-smi">j</span>.<span class="pl-smi">plotY</span>));c<span class="pl-k">--</span>;h<span class="pl-k">++</span>;<span class="pl-k">if</span>(c<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)<span class="pl-k">break</span>}}<span class="pl-en">q</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">plotY</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line">s)<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;=</span><span class="pl-smi">k</span>.<span class="pl-smi">min</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-smi">k</span>.<span class="pl-smi">max</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">plotY</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">-</span><span class="pl-smi">i</span>.<span class="pl-c1">bottom</span><span class="pl-k">-</span>(<span class="pl-smi">i</span>.<span class="pl-smi">opposite</span><span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-c1">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-smi">offset</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">plotTop</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">shapeArgs</span><span class="pl-k">=</span>{};<span class="pl-k">if</span>((e<span class="pl-k">=</span>b[d<span class="pl-k">-</span><span class="pl-c1">1</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">plotX</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">plotX</span>){<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">stackIndex</span><span class="pl-k">===</span>s)<span class="pl-smi">e</span>.<span class="pl-smi">stackIndex</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-smi">stackIndex</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">stackIndex</span><span class="pl-k">+</span><span class="pl-c1">1</span>}})},<span class="pl-en">drawPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>],c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>,e,f,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span>,i,k,j,l,m<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">lineWidth</span><span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>,o,n;<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;k<span class="pl-k">--</span>;)<span class="pl-k">if</span>(j<span class="pl-k">=</span>c[k],a<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">plotX</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">len</span>,e<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>(a<span class="pl-k">?</span>m<span class="pl-k">:</span><span class="pl-k">-</span>m),l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">stackIndex</span>,i<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">options</span>.<span class="pl-c1">shape</span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-c1">shape</span>,f<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">plotY</span>,f<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">plotY</span><span class="pl-k">+</span>h<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">-</span>(l<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">*</span><span class="pl-smi">g</span>.<span class="pl-smi">stackDistance</span>)),o<span class="pl-k">=</span>l<span class="pl-k">?</span>s<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>m,n<span class="pl-k">=</span>l<span class="pl-k">?</span>s<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">plotY</span>,l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">graphic</span>,f<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;!</span>a)a<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">pointAttr</span>[<span class="pl-smi">j</span>.<span class="pl-c1">selected</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span>b,l<span class="pl-k">?</span><span class="pl-smi">l</span>.<span class="pl-en">attr</span>({x<span class="pl-k">:</span>e,y<span class="pl-k">:</span>f,r<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>,anchorX<span class="pl-k">:</span>o,anchorY<span class="pl-k">:</span>n})<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">label</span>(<span class="pl-smi">j</span>.<span class="pl-c1">options</span>.<span class="pl-c1">title</span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-c1">title</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,e,f,i,o,n,<span class="pl-smi">g</span>.<span class="pl-smi">useHTML</span>).<span class="pl-en">css</span>(<span class="pl-en">w</span>(<span class="pl-smi">g</span>.<span class="pl-c1">style</span>,<span class="pl-smi">j</span>.<span class="pl-c1">style</span>)).<span class="pl-en">attr</span>(a).<span class="pl-en">attr</span>({align<span class="pl-k">:</span>i<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>flag<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">width</span>,height<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">height</span>}).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">markerGroup</span>).<span class="pl-en">shadow</span>(<span class="pl-smi">g</span>.<span class="pl-smi">shadow</span>),<span class="pl-smi">j</span>.<span class="pl-smi">tooltipPos</span><span class="pl-k">=</span>[e,f];<span class="pl-k">else</span> <span class="pl-k">if</span>(l)<span class="pl-smi">j</span>.<span class="pl-smi">graphic</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">destroy</span>()},<span class="pl-en">drawTracker</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>;<span class="pl-smi">gb</span>.<span class="pl-smi">drawTrackerPoint</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>);</td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line"><span class="pl-en">q</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">graphic</span>;c<span class="pl-k">&amp;&amp;</span><span class="pl-en">D</span>(<span class="pl-smi">c</span>.<span class="pl-smi">element</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">stackIndex</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">raised</span>)<span class="pl-smi">b</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>,<span class="pl-smi">c</span>.<span class="pl-en">attr</span>({y<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">_y</span><span class="pl-k">-</span><span class="pl-c1">8</span>}),<span class="pl-smi">b</span>.<span class="pl-smi">raised</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-en">q</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">raised</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>)<span class="pl-smi">a</span>.<span class="pl-smi">graphic</span>.<span class="pl-en">attr</span>({y<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">_y</span>}),<span class="pl-smi">a</span>.<span class="pl-smi">raised</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>})})})},animate<span class="pl-k">:</span>ta});<span class="pl-smi">qb</span>.<span class="pl-en">flag</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">anchorX</span><span class="pl-k">||</span>a,e<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">anchorY</span><span class="pl-k">||</span>b;<span class="pl-k">return</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,f,e,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a,b<span class="pl-k">+</span>d,a,b,a<span class="pl-k">+</span>c,b,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,f,e,<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]};<span class="pl-en">q</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>square<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){qb[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>pin<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">anchorX</span>,f<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">anchorY</span>,b<span class="pl-k">=</span>qb[a](b,c,d,e);g<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line">g,c<span class="pl-k">&gt;</span>f<span class="pl-k">?</span>c<span class="pl-k">:</span>c<span class="pl-k">+</span>e,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,g,f);<span class="pl-k">return</span> b}});Xa<span class="pl-k">===</span><span class="pl-c1">Q</span>.<span class="pl-smi">VMLRenderer</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">q</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>flag<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>circlepin<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>squarepin<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">fb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">symbols</span>[a]<span class="pl-k">=</span>qb[a]});<span class="pl-c1">L</span><span class="pl-k">=</span>{linearGradient<span class="pl-k">:</span>{x1<span class="pl-k">:</span><span class="pl-c1">0</span>,y1<span class="pl-k">:</span><span class="pl-c1">0</span>,x2<span class="pl-k">:</span><span class="pl-c1">0</span>,y2<span class="pl-k">:</span><span class="pl-c1">1</span>},stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#FFF<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>]]};<span class="pl-c1">F</span><span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(Xb);<span class="pl-c1">F</span>[<span class="pl-c1">4</span>]<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>day<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>]];<span class="pl-c1">F</span>[<span class="pl-c1">5</span>]<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>week<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]];<span class="pl-en">u</span>(<span class="pl-c1">G</span>,{<span class="pl-c1">navigator</span><span class="pl-k">:</span>{handles<span class="pl-k">:</span>{backgroundColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#FFF<span class="pl-pds">&quot;</span></span>,borderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#666<span class="pl-pds">&quot;</span></span>},height<span class="pl-k">:</span><span class="pl-c1">40</span>,margin<span class="pl-k">:</span><span class="pl-c1">10</span>,maskFill<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgba(255, 255, 255, 0.75)<span class="pl-pds">&quot;</span></span>,outlineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#444<span class="pl-pds">&quot;</span></span>,outlineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,series<span class="pl-k">:</span>{type<span class="pl-k">:</span><span class="pl-c1">H</span>.<span class="pl-smi">areaspline</span><span class="pl-k">===</span>s<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>areaspline<span class="pl-pds">&quot;</span></span>,color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#4572A7<span class="pl-pds">&quot;</span></span>,compare<span class="pl-k">:</span><span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line">fillOpacity<span class="pl-k">:</span><span class="pl-c1">0.4</span>,dataGrouping<span class="pl-k">:</span>{approximation<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>average<span class="pl-pds">&quot;</span></span>,enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,groupPixelWidth<span class="pl-k">:</span><span class="pl-c1">2</span>,smoothed<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,units<span class="pl-k">:</span><span class="pl-c1">F</span>},dataLabels<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">2</span>},id<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-navigator-series<span class="pl-pds">&quot;</span></span>,lineColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#4572A7<span class="pl-pds">&quot;</span></span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,marker<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},pointRange<span class="pl-k">:</span><span class="pl-c1">0</span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,threshold<span class="pl-k">:</span><span class="pl-c1">null</span>},xAxis<span class="pl-k">:</span>{tickWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,gridLineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,tickPixelInterval<span class="pl-k">:</span><span class="pl-c1">200</span>,labels<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span><span class="pl-c1">3</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">4</span>},crosshair<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},yAxis<span class="pl-k">:</span>{gridLineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,startOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,endOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,minPadding<span class="pl-k">:</span><span class="pl-c1">0.1</span>,maxPadding<span class="pl-k">:</span><span class="pl-c1">0.1</span>,labels<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},crosshair<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,title<span class="pl-k">:</span>{text<span class="pl-k">:</span><span class="pl-c1">null</span>},</td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line">tickWidth<span class="pl-k">:</span><span class="pl-c1">0</span>}},scrollbar<span class="pl-k">:</span>{height<span class="pl-k">:</span>db<span class="pl-k">?</span><span class="pl-c1">20</span><span class="pl-k">:</span><span class="pl-c1">14</span>,barBackgroundColor<span class="pl-k">:</span><span class="pl-c1">L</span>,barBorderRadius<span class="pl-k">:</span><span class="pl-c1">2</span>,barBorderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,barBorderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#666<span class="pl-pds">&quot;</span></span>,buttonArrowColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#666<span class="pl-pds">&quot;</span></span>,buttonBackgroundColor<span class="pl-k">:</span><span class="pl-c1">L</span>,buttonBorderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#666<span class="pl-pds">&quot;</span></span>,buttonBorderRadius<span class="pl-k">:</span><span class="pl-c1">2</span>,buttonBorderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,minWidth<span class="pl-k">:</span><span class="pl-c1">6</span>,rifleColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#666<span class="pl-pds">&quot;</span></span>,trackBackgroundColor<span class="pl-k">:</span>{linearGradient<span class="pl-k">:</span>{x1<span class="pl-k">:</span><span class="pl-c1">0</span>,y1<span class="pl-k">:</span><span class="pl-c1">0</span>,x2<span class="pl-k">:</span><span class="pl-c1">0</span>,y2<span class="pl-k">:</span><span class="pl-c1">1</span>},stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#EEE<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#FFF<span class="pl-pds">&quot;</span></span>]]},trackBorderColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>,trackBorderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,liveRedraw<span class="pl-k">:</span>$<span class="pl-k">&amp;&amp;!</span>db}});<span class="pl-smi">yb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">drawHandle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">elementsToDestroy</span>,</td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">handles</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">navigatorOptions</span>.<span class="pl-smi">handles</span>,g<span class="pl-k">=</span>{fill<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">backgroundColor</span>,stroke<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">borderColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>},h;<span class="pl-c1">this</span>.<span class="pl-smi">rendered</span><span class="pl-k">||</span>(f[b]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>navigator-handle-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>][b]).<span class="pl-en">css</span>({cursor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>e-resize<span class="pl-pds">&quot;</span></span>}).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">4</span><span class="pl-k">-</span>b}).<span class="pl-c1">add</span>(),h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">rect</span>(<span class="pl-k">-</span><span class="pl-c1">4.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">9</span>,<span class="pl-c1">16</span>,<span class="pl-c1">3</span>,<span class="pl-c1">1</span>).<span class="pl-en">attr</span>(g).<span class="pl-c1">add</span>(f[b]),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(h),h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">path</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1.5</span>,<span class="pl-c1">4</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1.5</span>,<span class="pl-c1">12</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0.5</span>,<span class="pl-c1">4</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0.5</span>,<span class="pl-c1">12</span>]).<span class="pl-en">attr</span>(g).<span class="pl-c1">add</span>(f[b]),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(h));f[b][<span class="pl-smi">c</span>.<span class="pl-smi">isResizing</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({translateX<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollerLeft</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarHeight</span><span class="pl-k">+</span><span class="pl-c1">parseInt</span>(a,<span class="pl-c1">10</span>),translateY<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-c1">8</span>})},<span class="pl-en">drawScrollbarButton</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">elementsToDestroy</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarButtons</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarHeight</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarOptions</span>,g;<span class="pl-c1">this</span>.<span class="pl-smi">rendered</span><span class="pl-k">||</span>(d[a]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">g</span>().<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarGroup</span>),g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">rect</span>(<span class="pl-k">-</span><span class="pl-c1">0.5</span>,<span class="pl-k">-</span><span class="pl-c1">0.5</span>,e<span class="pl-k">+</span><span class="pl-c1">1</span>,e<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">f</span>.<span class="pl-smi">buttonBorderRadius</span>,<span class="pl-smi">f</span>.<span class="pl-smi">buttonBorderWidth</span>).<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">buttonBorderColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">buttonBorderWidth</span>,fill<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">buttonBackgroundColor</span>}).<span class="pl-c1">add</span>(d[a]),<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(g),g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">path</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>),e<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-c1">3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>),e<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">3</span>,e<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">2</span>),e<span class="pl-k">/</span><span class="pl-c1">2</span>]).<span class="pl-en">attr</span>({fill<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">buttonArrowColor</span>}).<span class="pl-c1">add</span>(d[a]),</td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(g));a<span class="pl-k">&amp;&amp;</span>d[a].<span class="pl-en">attr</span>({translateX<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollerWidth</span><span class="pl-k">-</span>e})},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">renderer</span>,g,h,i,k,j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarGroup</span>,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">navigatorGroup</span>,m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbar</span>,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>,o<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarTrack</span>,p<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarHeight</span>,q<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarEnabled</span>,s<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">navigatorOptions</span>,r<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarOptions</span>,u<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">minWidth</span>,w<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span>,y<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">top</span>,<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">navigatorEnabled</span>,<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">s</span>.<span class="pl-smi">outlineWidth</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">D</span><span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">outlineHeight</span>,<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">barBorderRadius</span>,<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">barBorderWidth</span>,<span class="pl-c1">G</span><span class="pl-k">=</span>y<span class="pl-k">+</span><span class="pl-c1">A</span>,<span class="pl-c1">I</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(a)){<span class="pl-c1">this</span>.<span class="pl-smi">navigatorLeft</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">l</span>.<span class="pl-c1">left</span>,<span class="pl-smi">e</span>.<span class="pl-smi">plotLeft</span><span class="pl-k">+</span>p);<span class="pl-c1">this</span>.<span class="pl-smi">navigatorWidth</span><span class="pl-k">=</span>h<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-smi">l</span>.<span class="pl-smi">len</span>,<span class="pl-smi">e</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>p);<span class="pl-c1">this</span>.<span class="pl-smi">scrollerLeft</span><span class="pl-k">=</span>i<span class="pl-k">=</span>g<span class="pl-k">-</span>p;<span class="pl-c1">this</span>.<span class="pl-smi">scrollerWidth</span><span class="pl-k">=</span>k<span class="pl-k">=</span>k<span class="pl-k">=</span>h<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>p;<span class="pl-smi">l</span>.<span class="pl-smi">getExtremes</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getUnionExtremes</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>))<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">I</span>.<span class="pl-smi">dataMin</span><span class="pl-k">!==</span><span class="pl-smi">l</span>.<span class="pl-smi">min</span><span class="pl-k">||</span><span class="pl-c1">I</span>.<span class="pl-smi">dataMax</span><span class="pl-k">!==</span><span class="pl-smi">l</span>.<span class="pl-smi">max</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-en">setExtremes</span>(<span class="pl-c1">I</span>.<span class="pl-smi">dataMin</span>,<span class="pl-c1">I</span>.<span class="pl-smi">dataMax</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);c<span class="pl-k">=</span><span class="pl-en">n</span>(c,<span class="pl-smi">l</span>.<span class="pl-en">translate</span>(a));d<span class="pl-k">=</span><span class="pl-en">n</span>(d,<span class="pl-smi">l</span>.<span class="pl-en">translate</span>(b));<span class="pl-k">if</span>(<span class="pl-c1">isNaN</span>(c)<span class="pl-k">||</span><span class="pl-en">O</span>(c)<span class="pl-k">===</span><span class="pl-c1">Infinity</span>)c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span>k;<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-smi">l</span>.<span class="pl-en">translate</span>(d,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">-</span><span class="pl-smi">l</span>.<span class="pl-en">translate</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>].<span class="pl-smi">minRange</span>)){<span class="pl-c1">this</span>.<span class="pl-smi">zoomedMax</span><span class="pl-k">=</span><span class="pl-en">x</span>(<span class="pl-en">v</span>(c,d),h);<span class="pl-c1">this</span>.<span class="pl-smi">zoomedMin</span><span class="pl-k">=</span><span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">fixedWidth</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">zoomedMax</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">fixedWidth</span><span class="pl-k">:</span><span class="pl-en">x</span>(c,d),<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">range</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">zoomedMax</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">zoomedMin</span>;c<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">this</span>.<span class="pl-smi">zoomedMax</span>);b<span class="pl-k">=</span><span class="pl-en">t</span>(<span class="pl-c1">this</span>.<span class="pl-smi">zoomedMin</span>);a<span class="pl-k">=</span>c<span class="pl-k">-</span>b;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">rendered</span>){<span class="pl-k">if</span>(<span class="pl-c1">C</span>)<span class="pl-c1">this</span>.<span class="pl-smi">navigatorGroup</span><span class="pl-k">=</span>l<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>navigator<span class="pl-pds">&quot;</span></span>).<span class="pl-en">attr</span>({zIndex<span class="pl-k">:</span><span class="pl-c1">3</span>}).<span class="pl-c1">add</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">leftShade</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">rect</span>().<span class="pl-en">attr</span>({fill<span class="pl-k">:</span><span class="pl-smi">s</span>.<span class="pl-smi">maskFill</span>}).<span class="pl-c1">add</span>(l),<span class="pl-c1">this</span>.<span class="pl-smi">rightShade</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">rect</span>().<span class="pl-en">attr</span>({fill<span class="pl-k">:</span><span class="pl-smi">s</span>.<span class="pl-smi">maskFill</span>}).<span class="pl-c1">add</span>(l),<span class="pl-c1">this</span>.<span class="pl-smi">outline</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">path</span>().<span class="pl-en">attr</span>({<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">D</span>,stroke<span class="pl-k">:</span><span class="pl-smi">s</span>.<span class="pl-smi">outlineColor</span>}).<span class="pl-c1">add</span>(l);<span class="pl-k">if</span>(q)<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarGroup</span><span class="pl-k">=</span>j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>scrollbar<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(),m<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">trackBorderWidth</span>,<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarTrack</span><span class="pl-k">=</span>o<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">rect</span>().<span class="pl-en">attr</span>({x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-k">-</span>m<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>,fill<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">trackBackgroundColor</span>,stroke<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">trackBorderColor</span>,</td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>m,r<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">trackBorderRadius</span><span class="pl-k">||</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span>p}).<span class="pl-c1">add</span>(j),<span class="pl-c1">this</span>.<span class="pl-smi">scrollbar</span><span class="pl-k">=</span>m<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">rect</span>().<span class="pl-en">attr</span>({y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">H</span><span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>,height<span class="pl-k">:</span>p,fill<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">barBackgroundColor</span>,stroke<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">barBorderColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">H</span>,r<span class="pl-k">:</span><span class="pl-c1">J</span>}).<span class="pl-c1">add</span>(j),<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarRifles</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">path</span>().<span class="pl-en">attr</span>({stroke<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">rifleColor</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-c1">add</span>(j)}e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">isResizing</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">C</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">leftShade</span>[e]({x<span class="pl-k">:</span>g,y<span class="pl-k">:</span>y,width<span class="pl-k">:</span>b,height<span class="pl-k">:</span>w}),<span class="pl-c1">this</span>.<span class="pl-smi">rightShade</span>[e]({x<span class="pl-k">:</span>g<span class="pl-k">+</span>c,y<span class="pl-k">:</span>y,width<span class="pl-k">:</span>h<span class="pl-k">-</span>c,height<span class="pl-k">:</span>w}),<span class="pl-c1">this</span>.<span class="pl-smi">outline</span>[e]({d<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,i,<span class="pl-c1">G</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-c1">A</span>,<span class="pl-c1">G</span>,g<span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-c1">A</span>,<span class="pl-c1">G</span><span class="pl-k">+</span><span class="pl-c1">E</span><span class="pl-k">-</span>p,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">+</span>c<span class="pl-k">-</span><span class="pl-c1">A</span>,<span class="pl-c1">G</span><span class="pl-k">+</span><span class="pl-c1">E</span><span class="pl-k">-</span>p,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">+</span>c<span class="pl-k">-</span><span class="pl-c1">A</span>,<span class="pl-c1">G</span>,i<span class="pl-k">+</span>k,<span class="pl-c1">G</span>]}),<span class="pl-c1">this</span>.<span class="pl-en">drawHandle</span>(b<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">A</span>,<span class="pl-c1">0</span>),<span class="pl-c1">this</span>.<span class="pl-en">drawHandle</span>(c<span class="pl-k">+</span><span class="pl-c1">A</span>,<span class="pl-c1">1</span>));<span class="pl-k">if</span>(q<span class="pl-k">&amp;&amp;</span>j)<span class="pl-c1">this</span>.<span class="pl-en">drawScrollbarButton</span>(<span class="pl-c1">0</span>),<span class="pl-c1">this</span>.<span class="pl-en">drawScrollbarButton</span>(<span class="pl-c1">1</span>),j[e]({translateX<span class="pl-k">:</span>i,translateY<span class="pl-k">:</span><span class="pl-en">t</span>(<span class="pl-c1">G</span><span class="pl-k">+</span>w)}),o[e]({width<span class="pl-k">:</span>k}),g<span class="pl-k">=</span>p<span class="pl-k">+</span>b,h<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">H</span>,h<span class="pl-k">&lt;</span>u<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span><span class="pl-k">=</span>(u<span class="pl-k">-</span>h)<span class="pl-k">/</span><span class="pl-c1">2</span>,h<span class="pl-k">=</span>u,g<span class="pl-k">-=</span><span class="pl-c1">F</span>),<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarPad</span><span class="pl-k">=</span><span class="pl-c1">F</span>,m[e]({x<span class="pl-k">:</span><span class="pl-en">T</span>(g)<span class="pl-k">+</span><span class="pl-c1">H</span><span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>,width<span class="pl-k">:</span>h}),u<span class="pl-k">=</span>p<span class="pl-k">+</span>b<span class="pl-k">+</span>a<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-c1">0.5</span>,<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarRifles</span>.<span class="pl-en">attr</span>({visibility<span class="pl-k">:</span>a<span class="pl-k">&gt;</span><span class="pl-c1">12</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>})[e]({d<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,u<span class="pl-k">-</span><span class="pl-c1">3</span>,p<span class="pl-k">/</span><span class="pl-c1">4</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,u<span class="pl-k">-</span><span class="pl-c1">3</span>,<span class="pl-c1">2</span><span class="pl-k">*</span>p<span class="pl-k">/</span><span class="pl-c1">3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,u,p<span class="pl-k">/</span><span class="pl-c1">4</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,u,<span class="pl-c1">2</span><span class="pl-k">*</span>p<span class="pl-k">/</span><span class="pl-c1">3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,u<span class="pl-k">+</span><span class="pl-c1">3</span>,p<span class="pl-k">/</span><span class="pl-c1">4</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,u<span class="pl-k">+</span><span class="pl-c1">3</span>,<span class="pl-c1">2</span><span class="pl-k">*</span>p<span class="pl-k">/</span><span class="pl-c1">3</span>]});<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarPad</span><span class="pl-k">=</span><span class="pl-c1">F</span>;<span class="pl-c1">this</span>.<span class="pl-smi">rendered</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}},<span class="pl-en">addEvents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">container</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mouseDownHandler</span>,</td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mouseMoveHandler</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mouseUpHandler</span>,e;e<span class="pl-k">=</span>[[a,<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,b],[a,<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,c],[<span class="pl-c1">document</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,d]];bb<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">push</span>([a,<span class="pl-s"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>,b],[a,<span class="pl-s"><span class="pl-pds">&quot;</span>touchmove<span class="pl-pds">&quot;</span></span>,c],[<span class="pl-c1">document</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>,d]);<span class="pl-en">q</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">D</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,a)});<span class="pl-c1">this</span>.<span class="pl-smi">_events</span><span class="pl-k">=</span>e},<span class="pl-en">removeEvents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_events</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">S</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,a)});<span class="pl-c1">this</span>.<span class="pl-smi">_events</span><span class="pl-k">=</span>s;<span class="pl-c1">this</span>.<span class="pl-smi">navigatorEnabled</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">baseSeries</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">S</span>(<span class="pl-c1">this</span>.<span class="pl-smi">baseSeries</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>updatedData<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">updatedDataHandler</span>)},<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">chart</span>,c,d,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollbarHeight</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">navigatorOptions</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>,</td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">top</span>,i,k,j<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">body</span>.<span class="pl-c1">style</span>,l,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">baseSeries</span>;<span class="pl-smi">a</span>.<span class="pl-en">mouseDownHandler</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pointer</span>.<span class="pl-c1">normalize</span>(d),e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">zoomedMin</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">zoomedMax</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">top</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollbarHeight</span>,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollerLeft</span>,o<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollerWidth</span>,n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">navigatorLeft</span>,p<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">navigatorWidth</span>,q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollbarPad</span>,s<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">range</span>,r<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chartX</span>,t<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">chartY</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>],u,v<span class="pl-k">=</span>db<span class="pl-k">?</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">7</span>;<span class="pl-k">if</span>(t<span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;</span>t<span class="pl-k">&lt;</span>h<span class="pl-k">+</span>g<span class="pl-k">+</span>k)<span class="pl-k">if</span>((h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollbarEnabled</span><span class="pl-k">||</span>t<span class="pl-k">&lt;</span>h<span class="pl-k">+</span>g)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">W</span>.<span class="pl-en">abs</span>(r<span class="pl-k">-</span>e<span class="pl-k">-</span>n)<span class="pl-k">&lt;</span>v)<span class="pl-smi">a</span>.<span class="pl-smi">grabbedLeft</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">otherHandlePos</span><span class="pl-k">=</span>f,<span class="pl-smi">a</span>.<span class="pl-smi">fixedExtreme</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">max</span>,<span class="pl-smi">b</span>.<span class="pl-smi">fixedRange</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span><span class="pl-c1">W</span>.<span class="pl-en">abs</span>(r<span class="pl-k">-</span>f<span class="pl-k">-</span>n)<span class="pl-k">&lt;</span>v)<span class="pl-smi">a</span>.<span class="pl-smi">grabbedRight</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">otherHandlePos</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code blob-code-inner js-file-line">e,<span class="pl-smi">a</span>.<span class="pl-smi">fixedExtreme</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">min</span>,<span class="pl-smi">b</span>.<span class="pl-smi">fixedRange</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(r<span class="pl-k">&gt;</span>n<span class="pl-k">+</span>e<span class="pl-k">-</span>q<span class="pl-k">&amp;&amp;</span>r<span class="pl-k">&lt;</span>n<span class="pl-k">+</span>f<span class="pl-k">+</span>q){<span class="pl-smi">a</span>.<span class="pl-smi">grabbedCenter</span><span class="pl-k">=</span>r;<span class="pl-smi">a</span>.<span class="pl-smi">fixedWidth</span><span class="pl-k">=</span>s;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">renderer</span>.<span class="pl-smi">isSVG</span>)l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">cursor</span>,<span class="pl-smi">j</span>.<span class="pl-smi">cursor</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ew-resize<span class="pl-pds">&quot;</span></span>;i<span class="pl-k">=</span>r<span class="pl-k">-</span>e}<span class="pl-k">else</span> <span class="pl-k">if</span>(r<span class="pl-k">&gt;</span>m<span class="pl-k">&amp;&amp;</span>r<span class="pl-k">&lt;</span>m<span class="pl-k">+</span>o){f<span class="pl-k">=</span>h<span class="pl-k">?</span>r<span class="pl-k">-</span>n<span class="pl-k">-</span>s<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span>r<span class="pl-k">&lt;</span>n<span class="pl-k">?</span>e<span class="pl-k">-</span>s<span class="pl-k">*</span><span class="pl-c1">0.2</span><span class="pl-k">:</span>r<span class="pl-k">&gt;</span>m<span class="pl-k">+</span>o<span class="pl-k">-</span>k<span class="pl-k">?</span>e<span class="pl-k">+</span>s<span class="pl-k">*</span><span class="pl-c1">0.2</span><span class="pl-k">:</span>r<span class="pl-k">&lt;</span>n<span class="pl-k">+</span>e<span class="pl-k">?</span>e<span class="pl-k">-</span>s<span class="pl-k">:</span>f;<span class="pl-k">if</span>(f<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(f<span class="pl-k">+</span>s<span class="pl-k">&gt;=</span>p)f<span class="pl-k">=</span>p<span class="pl-k">-</span>s,u<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dataMax</span>;<span class="pl-k">if</span>(f<span class="pl-k">!==</span>e)<span class="pl-smi">a</span>.<span class="pl-smi">fixedWidth</span><span class="pl-k">=</span>s,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">toFixedRange</span>(f,f<span class="pl-k">+</span>s,<span class="pl-c1">null</span>,u),<span class="pl-smi">d</span>.<span class="pl-en">setExtremes</span>(<span class="pl-smi">e</span>.<span class="pl-smi">min</span>,<span class="pl-smi">e</span>.<span class="pl-smi">max</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,{trigger<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>navigator<span class="pl-pds">&quot;</span></span>})}};<span class="pl-smi">a</span>.<span class="pl-en">mouseMoveHandler</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollbarHeight</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">navigatorLeft</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">navigatorWidth</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollerLeft</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollerWidth</span>,</td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">range</span>,l;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">pageX</span><span class="pl-k">!==</span><span class="pl-c1">0</span>)c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pointer</span>.<span class="pl-c1">normalize</span>(c),l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chartX</span>,l<span class="pl-k">&lt;</span>e<span class="pl-k">?</span>l<span class="pl-k">=</span>e<span class="pl-k">:</span>l<span class="pl-k">&gt;</span>g<span class="pl-k">+</span>h<span class="pl-k">-</span>d<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>g<span class="pl-k">+</span>h<span class="pl-k">-</span>d),<span class="pl-smi">a</span>.<span class="pl-smi">grabbedLeft</span><span class="pl-k">?</span>(k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-en">render</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,l<span class="pl-k">-</span>e,<span class="pl-smi">a</span>.<span class="pl-smi">otherHandlePos</span>))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">grabbedRight</span><span class="pl-k">?</span>(k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-en">render</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">otherHandlePos</span>,l<span class="pl-k">-</span>e))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">grabbedCenter</span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,l<span class="pl-k">&lt;</span>i<span class="pl-k">?</span>l<span class="pl-k">=</span>i<span class="pl-k">:</span>l<span class="pl-k">&gt;</span>f<span class="pl-k">+</span>i<span class="pl-k">-</span>j<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>f<span class="pl-k">+</span>i<span class="pl-k">-</span>j),<span class="pl-smi">a</span>.<span class="pl-en">render</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,l<span class="pl-k">-</span>i,l<span class="pl-k">-</span>i<span class="pl-k">+</span>j)),k<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollbarOptions</span>.<span class="pl-smi">liveRedraw</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">mouseUpHandler</span>(c)},<span class="pl-c1">0</span>)};<span class="pl-smi">a</span>.<span class="pl-en">mouseUpHandler</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> e,f;<span class="pl-k">if</span>(k){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">zoomedMin</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">otherHandlePos</span>)e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fixedExtreme</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">zoomedMax</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">otherHandlePos</span>)f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fixedExtreme</span>;</td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">toFixedRange</span>(<span class="pl-smi">a</span>.<span class="pl-smi">zoomedMin</span>,<span class="pl-smi">a</span>.<span class="pl-smi">zoomedMax</span>,e,f);<span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>].<span class="pl-en">setExtremes</span>(<span class="pl-smi">e</span>.<span class="pl-smi">min</span>,<span class="pl-smi">e</span>.<span class="pl-smi">max</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,{trigger<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>navigator<span class="pl-pds">&quot;</span></span>,triggerOp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>navigator-drag<span class="pl-pds">&quot;</span></span>,DOMEvent<span class="pl-k">:</span>d})}<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">type</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">a</span>.<span class="pl-smi">grabbedLeft</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">grabbedRight</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">grabbedCenter</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fixedWidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fixedExtreme</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">otherHandlePos</span><span class="pl-k">=</span>k<span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-smi">j</span>.<span class="pl-smi">cursor</span><span class="pl-k">=</span>l<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>};<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>.<span class="pl-c1">length</span>,p<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">yAxis</span>.<span class="pl-c1">length</span>;<span class="pl-smi">b</span>.<span class="pl-smi">extraBottomMargin</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">outlineHeight</span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">margin</span>;<span class="pl-smi">a</span>.<span class="pl-smi">navigatorEnabled</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span><span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">N</span>(b,<span class="pl-en">w</span>({ordinal<span class="pl-k">:</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-smi">xAxis</span>.<span class="pl-c1">options</span>.<span class="pl-smi">ordinal</span>},<span class="pl-smi">f</span>.<span class="pl-smi">xAxis</span>,{id<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>navigator-x-axis<span class="pl-pds">&quot;</span></span>,isX<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>datetime<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code blob-code-inner js-file-line">index<span class="pl-k">:</span>o,height<span class="pl-k">:</span>g,offset<span class="pl-k">:</span><span class="pl-c1">0</span>,offsetLeft<span class="pl-k">:</span>e,offsetRight<span class="pl-k">:</span><span class="pl-k">-</span>e,keepOrdinalPadding<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,startOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,endOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,minPadding<span class="pl-k">:</span><span class="pl-c1">0</span>,maxPadding<span class="pl-k">:</span><span class="pl-c1">0</span>,zoomEnabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>})),<span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">N</span>(b,<span class="pl-en">w</span>(<span class="pl-smi">f</span>.<span class="pl-smi">yAxis</span>,{id<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>navigator-y-axis<span class="pl-pds">&quot;</span></span>,alignTicks<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,height<span class="pl-k">:</span>g,offset<span class="pl-k">:</span><span class="pl-c1">0</span>,index<span class="pl-k">:</span>p,zoomEnabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>})),m<span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">series</span>.<span class="pl-c1">data</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">addBaseSeries</span>()<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">series</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">R</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>redraw<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">series</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>)<span class="pl-smi">a</span>.<span class="pl-en">setBaseSeries</span>(),<span class="pl-smi">b</span>.<span class="pl-smi">redraw</span><span class="pl-k">=</span>c;<span class="pl-smi">c</span>.<span class="pl-c1">call</span>(b,d)}))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span><span class="pl-k">=</span>c<span class="pl-k">=</span>{<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>].<span class="pl-en">getExtremes</span>(),f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">plotWidth</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>e,g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">dataMin</span>,d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">dataMax</span><span class="pl-k">-</span>g;<span class="pl-k">return</span> c<span class="pl-k">?</span>a<span class="pl-k">*</span>d<span class="pl-k">/</span>f<span class="pl-k">+</span>g<span class="pl-k">:</span>f<span class="pl-k">*</span>(a<span class="pl-k">-</span>g)<span class="pl-k">/</span>d},toFixedRange<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toFixedRange</span>};<span class="pl-en">R</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>getMargins<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">legend</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>;<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-c1">top</span><span class="pl-k">=</span>h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">navigatorOptions</span>.<span class="pl-c1">top</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">chartHeight</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollbarHeight</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">spacing</span>[<span class="pl-c1">2</span>]<span class="pl-k">-</span>(<span class="pl-smi">f</span>.<span class="pl-smi">verticalAlign</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">f</span>.<span class="pl-smi">floating</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">legendHeight</span><span class="pl-k">+</span><span class="pl-en">n</span>(<span class="pl-smi">f</span>.<span class="pl-smi">margin</span>,<span class="pl-c1">10</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span>d)<span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-c1">top</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>.<span class="pl-c1">top</span><span class="pl-k">=</span>h,<span class="pl-smi">c</span>.<span class="pl-en">setAxisSize</span>(),<span class="pl-smi">d</span>.<span class="pl-en">setAxisSize</span>()});<span class="pl-smi">a</span>.<span class="pl-en">addEvents</span>()},<span class="pl-en">getUnionExtremes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>],c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>;</td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span>{dataMin<span class="pl-k">:</span><span class="pl-en">n</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">min</span>,(<span class="pl-en">r</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(<span class="pl-smi">c</span>.<span class="pl-smi">dataMin</span>)<span class="pl-k">?</span>x<span class="pl-k">:</span>n)(<span class="pl-smi">b</span>.<span class="pl-smi">dataMin</span>,<span class="pl-smi">c</span>.<span class="pl-smi">dataMin</span>)),dataMax<span class="pl-k">:</span><span class="pl-en">n</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">max</span>,(<span class="pl-en">r</span>(<span class="pl-smi">b</span>.<span class="pl-smi">dataMax</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(<span class="pl-smi">c</span>.<span class="pl-smi">dataMax</span>)<span class="pl-k">?</span>v<span class="pl-k">:</span>n)(<span class="pl-smi">b</span>.<span class="pl-smi">dataMax</span>,<span class="pl-smi">c</span>.<span class="pl-smi">dataMax</span>))}},<span class="pl-en">setBaseSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">navigator</span>.<span class="pl-smi">baseSeries</span>;<span class="pl-c1">this</span>.<span class="pl-smi">series</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>.<span class="pl-c1">remove</span>();<span class="pl-c1">this</span>.<span class="pl-smi">baseSeries</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">series</span>[a]<span class="pl-k">||</span><span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(a)<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">series</span>[<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">addBaseSeries</span>()},<span class="pl-en">addBaseSeries</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">baseSeries</span>,b<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span><span class="pl-k">:</span>{},c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">data</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">navigatorOptions</span>.<span class="pl-smi">series</span>,</td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code blob-code-inner js-file-line">e;e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">data</span>;<span class="pl-c1">this</span>.<span class="pl-smi">hasNavigatorData</span><span class="pl-k">=</span><span class="pl-k">!!</span>e;b<span class="pl-k">=</span><span class="pl-en">w</span>(b,d,{clip<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,enableMouseTracking<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,group<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>nav<span class="pl-pds">&quot;</span></span>,padXAxis<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,xAxis<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>navigator-x-axis<span class="pl-pds">&quot;</span></span>,yAxis<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>navigator-y-axis<span class="pl-pds">&quot;</span></span>,name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Navigator<span class="pl-pds">&quot;</span></span>,showInLegend<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,isInternal<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,visible<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-smi">b</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>e<span class="pl-k">||</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">series</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-en">initSeries</span>(b);<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">navigatorOptions</span>.<span class="pl-smi">adaptToUpdatedData</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-en">D</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>updatedData<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">updatedDataHandler</span>),<span class="pl-smi">a</span>.<span class="pl-smi">userOptions</span>.<span class="pl-smi">events</span><span class="pl-k">=</span><span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-smi">userOptions</span>.<span class="pl-c1">event</span>,{updatedData<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">updatedDataHandler</span>})},<span class="pl-en">updatedDataHandler</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">scroller</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">baseSeries</span>,</td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">xAxis</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getExtremes</span>(),e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">min</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">max</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">dataMin</span>,d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">dataMax</span>,h<span class="pl-k">=</span>f<span class="pl-k">-</span>e,i,k,j,l,m,o<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">series</span>;i<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-smi">xData</span>;<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-smi">c</span>.<span class="pl-smi">setExtremes</span>;k<span class="pl-k">=</span>f<span class="pl-k">&gt;=</span>i[<span class="pl-smi">i</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>(<span class="pl-c1">this</span>.<span class="pl-smi">closestPointRange</span><span class="pl-k">||</span><span class="pl-c1">0</span>);i<span class="pl-k">=</span>e<span class="pl-k">&lt;=</span>g;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">hasNavigatorData</span>)<span class="pl-smi">o</span>.<span class="pl-c1">options</span>.<span class="pl-smi">pointStart</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">xData</span>[<span class="pl-c1">0</span>],<span class="pl-smi">o</span>.<span class="pl-en">setData</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-c1">data</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;i<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>g,j<span class="pl-k">=</span>l<span class="pl-k">+</span>h);k<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>d,i<span class="pl-k">||</span>(l<span class="pl-k">=</span><span class="pl-en">v</span>(j<span class="pl-k">-</span>h,<span class="pl-smi">o</span>.<span class="pl-smi">xData</span>[<span class="pl-c1">0</span>])));n<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">||</span>k)<span class="pl-k">?</span><span class="pl-c1">isNaN</span>(l)<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-en">setExtremes</span>(l,j,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,{trigger<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>updatedData<span class="pl-pds">&quot;</span></span>})<span class="pl-k">:</span>(m<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-en">redraw</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-en">render</span>(<span class="pl-en">v</span>(e,g),<span class="pl-en">x</span>(f,d)))},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">removeEvents</span>();<span class="pl-en">q</span>([<span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>,<span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span>,</td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">leftShade</span>,<span class="pl-c1">this</span>.<span class="pl-smi">rightShade</span>,<span class="pl-c1">this</span>.<span class="pl-smi">outline</span>,<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarTrack</span>,<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarRifles</span>,<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarGroup</span>,<span class="pl-c1">this</span>.<span class="pl-smi">scrollbar</span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">destroy</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">destroy</span>()});<span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yAxis</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">leftShade</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rightShade</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">outline</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarTrack</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarRifles</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbarGroup</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scrollbar</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">q</span>([<span class="pl-c1">this</span>.<span class="pl-smi">scrollbarButtons</span>,<span class="pl-c1">this</span>.<span class="pl-smi">handles</span>,<span class="pl-c1">this</span>.<span class="pl-smi">elementsToDestroy</span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">Ka</span>(a)})}};<span class="pl-c1">Q</span>.<span class="pl-smi">Scroller</span><span class="pl-k">=</span>yb;<span class="pl-en">R</span>(<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>zoom<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">zoomType</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">navigator</span>,</td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">rangeSelector</span>,h;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">enabled</span><span class="pl-k">||</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">enabled</span>))<span class="pl-k">if</span>(f<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">d</span>.<span class="pl-smi">resetZoomButton</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>blocked<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(f<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>)h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(f<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>xy<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">previousZoom</span>,<span class="pl-en">r</span>(b)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">previousZoom</span><span class="pl-k">=</span>[<span class="pl-c1">this</span>.<span class="pl-smi">min</span>,<span class="pl-c1">this</span>.<span class="pl-smi">max</span>]<span class="pl-k">:</span>d<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],c<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">previousZoom</span>);<span class="pl-k">return</span> h<span class="pl-k">!==</span>s<span class="pl-k">?</span>h<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,c)});<span class="pl-en">R</span>(<span class="pl-smi">sa</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">D</span>(<span class="pl-c1">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>beforeRender<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">navigator</span>.<span class="pl-smi">enabled</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">scrollbar</span>.<span class="pl-smi">enabled</span>)<span class="pl-c1">this</span>.<span class="pl-smi">scroller</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">yb</span>(<span class="pl-c1">this</span>)});<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,c)});<span class="pl-en">R</span>(<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>addPoint<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">turboThreshold</span>;f<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">xData</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-en">ba</span>(b)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">Qa</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">scroller</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">na</span>(<span class="pl-c1">20</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,c,d,e)});<span class="pl-en">u</span>(<span class="pl-c1">G</span>,{rangeSelector<span class="pl-k">:</span>{buttonTheme<span class="pl-k">:</span>{width<span class="pl-k">:</span><span class="pl-c1">28</span>,height<span class="pl-k">:</span><span class="pl-c1">16</span>,padding<span class="pl-k">:</span><span class="pl-c1">1</span>,r<span class="pl-k">:</span><span class="pl-c1">0</span>,stroke<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#68A<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>},inputPosition<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>},labelStyle<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#666<span class="pl-pds">&quot;</span></span>}}});<span class="pl-c1">G</span>.<span class="pl-c1">lang</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-c1">G</span>.<span class="pl-c1">lang</span>,{rangeSelectorZoom<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Zoom<span class="pl-pds">&quot;</span></span>,rangeSelectorFrom<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>From<span class="pl-pds">&quot;</span></span>,rangeSelectorTo<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>To<span class="pl-pds">&quot;</span></span>});<span class="pl-smi">zb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">clickButton</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">selected</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">buttons</span>,g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">buttonOptions</span>[a],h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>],i<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">scroller</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">scroller</span>.<span class="pl-en">getUnionExtremes</span>()<span class="pl-k">||</span>h<span class="pl-k">||</span>{},k<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">dataMin</span>,j<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">dataMax</span>,l,m<span class="pl-k">=</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-en">t</span>(<span class="pl-en">x</span>(<span class="pl-smi">h</span>.<span class="pl-smi">max</span>,<span class="pl-en">n</span>(j,<span class="pl-smi">h</span>.<span class="pl-smi">max</span>))),o<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(m),p<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">type</span>,r<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">count</span>,i<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">_range</span>,u;<span class="pl-k">if</span>(<span class="pl-k">!</span>(k<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">||</span>j<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">selected</span>)){<span class="pl-k">if</span>(p<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>p<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span>)l<span class="pl-k">=</span>{month<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Month<span class="pl-pds">&quot;</span></span>,year<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>FullYear<span class="pl-pds">&quot;</span></span>}[p],o[<span class="pl-s"><span class="pl-pds">&quot;</span>set<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>l](o[<span class="pl-s"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>l]()<span class="pl-k">-</span>r),l<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-c1">getTime</span>(),k<span class="pl-k">=</span><span class="pl-en">n</span>(k,<span class="pl-c1">Number</span>.<span class="pl-c1">MIN_VALUE</span>),<span class="pl-c1">isNaN</span>(l)<span class="pl-k">||</span>l<span class="pl-k">&lt;</span>k<span class="pl-k">?</span>(l<span class="pl-k">=</span>k,m<span class="pl-k">=</span><span class="pl-en">x</span>(l<span class="pl-k">+</span>i,j))<span class="pl-k">:</span>i<span class="pl-k">=</span>m<span class="pl-k">-</span>l;<span class="pl-k">else</span> <span class="pl-k">if</span>(i)l<span class="pl-k">=</span><span class="pl-en">v</span>(m<span class="pl-k">-</span>i,k),m<span class="pl-k">=</span><span class="pl-en">x</span>(l<span class="pl-k">+</span>i,j);<span class="pl-k">else</span> <span class="pl-k">if</span>(p<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>ytd<span class="pl-pds">&quot;</span></span>)<span class="pl-k">if</span>(h){<span class="pl-k">if</span>(j<span class="pl-k">===</span>s)k<span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,j<span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">MIN_VALUE</span>,<span class="pl-en">q</span>(<span class="pl-smi">e</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xData</span>;k<span class="pl-k">=</span><span class="pl-en">x</span>(a[<span class="pl-c1">0</span>],k);j<span class="pl-k">=</span><span class="pl-en">v</span>(a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>],j)}),b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(j);u<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">getFullYear</span>();l<span class="pl-k">=</span>u<span class="pl-k">=</span><span class="pl-en">v</span>(k<span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-c1">Date</span>.<span class="pl-c1">UTC</span>(u,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>));m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">getTime</span>();m<span class="pl-k">=</span><span class="pl-en">x</span>(j<span class="pl-k">||</span>m,m)}<span class="pl-k">else</span>{<span class="pl-en">D</span>(e,<span class="pl-s"><span class="pl-pds">&quot;</span>beforeRender<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">c</span>.<span class="pl-en">clickButton</span>(a)});<span class="pl-k">return</span>}<span class="pl-k">else</span> p<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>k,m<span class="pl-k">=</span>j);f[d]<span class="pl-k">&amp;&amp;</span>f[d].<span class="pl-en">setState</span>(<span class="pl-c1">0</span>);f[a]<span class="pl-k">&amp;&amp;</span>f[a].<span class="pl-en">setState</span>(<span class="pl-c1">2</span>);<span class="pl-smi">e</span>.<span class="pl-smi">fixedRange</span><span class="pl-k">=</span>i;h<span class="pl-k">?</span><span class="pl-smi">h</span>.<span class="pl-en">setExtremes</span>(l,m,<span class="pl-en">n</span>(b,<span class="pl-c1">1</span>),<span class="pl-c1">0</span>,{trigger<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rangeSelectorButton<span class="pl-pds">&quot;</span></span>,rangeSelectorButton<span class="pl-k">:</span>g})<span class="pl-k">:</span>(d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">options</span>.<span class="pl-smi">xAxis</span>,d[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-en">w</span>(d[<span class="pl-c1">0</span>],{range<span class="pl-k">:</span>i,min<span class="pl-k">:</span>u}));<span class="pl-smi">c</span>.<span class="pl-en">setSelected</span>(a)}},<span class="pl-en">setSelected</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-c1">selected</span><span class="pl-k">=</span>a},defaultButtons<span class="pl-k">:</span>[{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span>,count<span class="pl-k">:</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code blob-code-inner js-file-line">text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1m<span class="pl-pds">&quot;</span></span>},{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span>,count<span class="pl-k">:</span><span class="pl-c1">3</span>,text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>3m<span class="pl-pds">&quot;</span></span>},{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span>,count<span class="pl-k">:</span><span class="pl-c1">6</span>,text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>6m<span class="pl-pds">&quot;</span></span>},{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ytd<span class="pl-pds">&quot;</span></span>,text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>YTD<span class="pl-pds">&quot;</span></span>},{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span>,count<span class="pl-k">:</span><span class="pl-c1">1</span>,text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1y<span class="pl-pds">&quot;</span></span>},{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span>,text<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>All<span class="pl-pds">&quot;</span></span>}],<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">rangeSelector</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">buttons</span><span class="pl-k">||</span>[].<span class="pl-c1">concat</span>(<span class="pl-smi">b</span>.<span class="pl-smi">defaultButtons</span>),e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">selected</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">blurInputs</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">minInput</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">maxInput</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">blur</span>();c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">blur</span>()};<span class="pl-smi">b</span>.<span class="pl-smi">chart</span><span class="pl-k">=</span>a;<span class="pl-smi">b</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>c;<span class="pl-smi">b</span>.<span class="pl-smi">buttons</span><span class="pl-k">=</span>[];<span class="pl-smi">a</span>.<span class="pl-smi">extraTopMargin</span><span class="pl-k">=</span><span class="pl-c1">25</span>;<span class="pl-smi">b</span>.<span class="pl-smi">buttonOptions</span><span class="pl-k">=</span>d;<span class="pl-en">D</span>(<span class="pl-smi">a</span>.<span class="pl-smi">container</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,f);<span class="pl-en">D</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,f);<span class="pl-en">q</span>(d,<span class="pl-smi">b</span>.<span class="pl-smi">computeButtonRange</span>);e<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>d[e]<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">clickButton</span>(e,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">D</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-en">D</span>(<span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>],<span class="pl-s"><span class="pl-pds">&quot;</span>afterSetExtremes<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-en">updateButtonStates</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)})})},<span class="pl-en">updateButtonStates</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>],e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">scroller</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">scroller</span>.<span class="pl-en">getUnionExtremes</span>()<span class="pl-k">||</span>d,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">dataMin</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">dataMax</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">selected</span>,i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">buttons</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">fixedRange</span><span class="pl-k">!==</span><span class="pl-en">t</span>(<span class="pl-smi">d</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;</span>(i[h]<span class="pl-k">&amp;&amp;</span>i[h].<span class="pl-en">setState</span>(<span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-en">setSelected</span>(<span class="pl-c1">null</span>));<span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">buttonOptions</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_range</span>,m<span class="pl-k">=</span>e<span class="pl-k">&gt;</span>g<span class="pl-k">-</span>f,o<span class="pl-k">=</span>e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">minRange</span>,n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">min</span><span class="pl-k">&gt;=</span>g<span class="pl-k">-</span>f<span class="pl-k">&amp;&amp;</span>i[c].<span class="pl-smi">state</span><span class="pl-k">!==</span><span class="pl-c1">2</span>,q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>ytd<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">ra</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code blob-code-inner js-file-line">f)<span class="pl-k">===</span><span class="pl-en">ra</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>,g);e<span class="pl-k">===</span><span class="pl-en">t</span>(<span class="pl-smi">d</span>.<span class="pl-smi">max</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span>h<span class="pl-k">?</span>(<span class="pl-smi">b</span>.<span class="pl-en">setSelected</span>(c),i[c].<span class="pl-en">setState</span>(<span class="pl-c1">2</span>))<span class="pl-k">:</span>m<span class="pl-k">||</span>o<span class="pl-k">||</span>n<span class="pl-k">||</span>q<span class="pl-k">?</span>i[c].<span class="pl-en">setState</span>(<span class="pl-c1">3</span>)<span class="pl-k">:</span>i[c].<span class="pl-smi">state</span><span class="pl-k">===</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>i[c].<span class="pl-en">setState</span>(<span class="pl-c1">0</span>)})},<span class="pl-en">computeButtonRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">count</span><span class="pl-k">||</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span>{millisecond<span class="pl-k">:</span><span class="pl-c1">1</span>,second<span class="pl-k">:</span><span class="pl-c1">1E3</span>,minute<span class="pl-k">:</span><span class="pl-c1">6E4</span>,hour<span class="pl-k">:</span><span class="pl-c1">36E5</span>,day<span class="pl-k">:</span><span class="pl-c1">864E5</span>,week<span class="pl-k">:</span><span class="pl-c1">6048E5</span>};<span class="pl-k">if</span>(d[b])<span class="pl-smi">a</span>.<span class="pl-smi">_range</span><span class="pl-k">=</span>d[b]<span class="pl-k">*</span>c;<span class="pl-k">else</span> <span class="pl-k">if</span>(b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">a</span>.<span class="pl-smi">_range</span><span class="pl-k">=</span>{month<span class="pl-k">:</span><span class="pl-c1">30</span>,year<span class="pl-k">:</span><span class="pl-c1">365</span>}[b]<span class="pl-k">*</span><span class="pl-c1">864E5</span><span class="pl-k">*</span>c},<span class="pl-en">setInputValue</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-c1">options</span>.<span class="pl-smi">rangeSelector</span>;<span class="pl-k">if</span>(<span class="pl-en">r</span>(b))<span class="pl-c1">this</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Input<span class="pl-pds">&quot;</span></span>].<span class="pl-smi">HCTime</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Input<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-en">ra</span>(<span class="pl-smi">c</span>.<span class="pl-smi">inputEditDateFormat</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>%Y-%m-%d<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Input<span class="pl-pds">&quot;</span></span>].<span class="pl-smi">HCTime</span>);<span class="pl-c1">this</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>DateBox<span class="pl-pds">&quot;</span></span>].<span class="pl-en">attr</span>({text<span class="pl-k">:</span><span class="pl-en">ra</span>(<span class="pl-smi">c</span>.<span class="pl-smi">inputDateFormat</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>%b %e, %Y<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Input<span class="pl-pds">&quot;</span></span>].<span class="pl-smi">HCTime</span>)})},<span class="pl-en">drawInput</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">style</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">renderer</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">options</span>.<span class="pl-smi">rangeSelector</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">div</span>,h<span class="pl-k">=</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>min<span class="pl-pds">&quot;</span></span>,i,k,j,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">inputGroup</span>;<span class="pl-c1">this</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Label<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">label</span>(<span class="pl-c1">G</span>.<span class="pl-c1">lang</span>[h<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>rangeSelectorFrom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rangeSelectorTo<span class="pl-pds">&quot;</span></span>],<span class="pl-c1">this</span>.<span class="pl-smi">inputGroup</span>.<span class="pl-smi">offset</span>).<span class="pl-en">attr</span>({padding<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-en">css</span>(<span class="pl-en">w</span>(d,<span class="pl-smi">f</span>.<span class="pl-smi">labelStyle</span>)).<span class="pl-c1">add</span>(l);<span class="pl-smi">l</span>.<span class="pl-smi">offset</span><span class="pl-k">+=</span><span class="pl-smi">k</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-c1">5</span>;<span class="pl-c1">this</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>DateBox<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">label</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">l</span>.<span class="pl-smi">offset</span>).<span class="pl-en">attr</span>({padding<span class="pl-k">:</span><span class="pl-c1">1</span>,width<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">inputBoxWidth</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">90</span>,height<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">inputBoxHeight</span><span class="pl-k">||</span><span class="pl-c1">16</span>,stroke<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">inputBoxBorderColor</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>silver<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-en">css</span>(<span class="pl-en">w</span>({textAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>},d,<span class="pl-smi">f</span>.<span class="pl-smi">inputStyle</span>)).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){b[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Input<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">focus</span>()}).<span class="pl-c1">add</span>(l);<span class="pl-smi">l</span>.<span class="pl-smi">offset</span><span class="pl-k">+=</span><span class="pl-smi">j</span>.<span class="pl-c1">width</span><span class="pl-k">+</span>(h<span class="pl-k">?</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Input<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>i<span class="pl-k">=</span><span class="pl-en">Y</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span>,{name<span class="pl-k">:</span>a,className<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highcharts-range-selector<span class="pl-pds">&quot;</span></span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>},<span class="pl-en">u</span>({position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,border<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1px<span class="pl-pds">&quot;</span></span>,padding<span class="pl-k">:</span><span class="pl-c1">0</span>,textAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">fontSize</span>,fontFamily<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">fontFamily</span>,top<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">plotTop</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},<span class="pl-smi">f</span>.<span class="pl-smi">inputStyle</span>),g);<span class="pl-smi">i</span>.<span class="pl-en">onfocus</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">J</span>(<span class="pl-c1">this</span>,{left<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-smi">translateX</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">j</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-smi">translateY</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,border<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>2px solid silver<span class="pl-pds">&quot;</span></span>})};<span class="pl-smi">i</span>.<span class="pl-en">onblur</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">J</span>(<span class="pl-c1">this</span>,{border<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1px<span class="pl-pds">&quot;</span></span>});<span class="pl-smi">b</span>.<span class="pl-en">setInputValue</span>(a)};<span class="pl-smi">i</span>.<span class="pl-en">onchange</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">value</span>,d<span class="pl-k">=</span>(<span class="pl-smi">f</span>.<span class="pl-smi">inputDateParser</span><span class="pl-k">||</span><span class="pl-c1">Date</span>.<span class="pl-smi">parse</span>)(a),e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>],g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">dataMin</span>,j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">dataMax</span>;<span class="pl-c1">isNaN</span>(d)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-c1">UTC</span>(<span class="pl-en">y</span>(d[<span class="pl-c1">0</span>]),<span class="pl-en">y</span>(d[<span class="pl-c1">1</span>])<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-en">y</span>(d[<span class="pl-c1">2</span>])));<span class="pl-c1">isNaN</span>(d)<span class="pl-k">||</span>(<span class="pl-c1">G</span>.<span class="pl-smi">global</span>.<span class="pl-smi">useUTC</span><span class="pl-k">||</span>(d<span class="pl-k">+=</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-c1">getTimezoneOffset</span>()<span class="pl-k">*</span><span class="pl-c1">6E4</span>),h<span class="pl-k">?</span>d<span class="pl-k">&gt;</span><span class="pl-smi">b</span>.<span class="pl-smi">maxInput</span>.<span class="pl-smi">HCTime</span><span class="pl-k">?</span>d<span class="pl-k">=</span>s<span class="pl-k">:</span>d<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>g)<span class="pl-k">:</span>d<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">minInput</span>.<span class="pl-smi">HCTime</span><span class="pl-k">?</span>d<span class="pl-k">=</span>s<span class="pl-k">:</span>d<span class="pl-k">&gt;</span>j<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>j),</td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>].<span class="pl-en">setExtremes</span>(h<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">min</span>,h<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">max</span><span class="pl-k">:</span>d,s,s,{trigger<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rangeSelectorInput<span class="pl-pds">&quot;</span></span>}))}},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">renderer</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">container</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">options</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">exporting</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">navigation</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">navigation</span>.<span class="pl-smi">buttonOptions</span>,i<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">rangeSelector</span>,k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">buttons</span>,g<span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-c1">lang</span>,j<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">div</span>,j<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">inputGroup</span>,l<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">buttonTheme</span>,m<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">inputEnabled</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>,n<span class="pl-k">=</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">states</span>,p<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotLeft</span>,r;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">rendered</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">zoomText</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">text</span>(<span class="pl-smi">g</span>.<span class="pl-smi">rangeSelectorZoom</span>,p,<span class="pl-smi">d</span>.<span class="pl-smi">plotTop</span><span class="pl-k">-</span><span class="pl-c1">10</span>).<span class="pl-en">css</span>(<span class="pl-smi">i</span>.<span class="pl-smi">labelStyle</span>).<span class="pl-c1">add</span>(),r<span class="pl-k">=</span>p<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">zoomText</span>.<span class="pl-en">getBBox</span>().<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-c1">5</span>,<span class="pl-en">q</span>(<span class="pl-smi">c</span>.<span class="pl-smi">buttonOptions</span>,</td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){k[b]<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">button</span>(<span class="pl-smi">a</span>.<span class="pl-c1">text</span>,r,<span class="pl-smi">d</span>.<span class="pl-smi">plotTop</span><span class="pl-k">-</span><span class="pl-c1">25</span>,<span class="pl-k">function</span>(){<span class="pl-smi">c</span>.<span class="pl-en">clickButton</span>(b);<span class="pl-smi">c</span>.<span class="pl-smi">isActive</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},l,n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-smi">hover</span>,n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-smi">select</span>).<span class="pl-en">css</span>({textAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">add</span>();r<span class="pl-k">+=</span>k[b].<span class="pl-c1">width</span><span class="pl-k">+</span>(<span class="pl-smi">i</span>.<span class="pl-smi">buttonSpacing</span><span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-smi">c</span>.<span class="pl-c1">selected</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>k[b].<span class="pl-en">setState</span>(<span class="pl-c1">2</span>)}),<span class="pl-smi">c</span>.<span class="pl-en">updateButtonStates</span>(),m))<span class="pl-smi">c</span>.<span class="pl-smi">div</span><span class="pl-k">=</span>j<span class="pl-k">=</span><span class="pl-en">Y</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,{position<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}),<span class="pl-smi">f</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(j,f),<span class="pl-smi">c</span>.<span class="pl-smi">inputGroup</span><span class="pl-k">=</span>j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input-group<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(),<span class="pl-smi">j</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-en">drawInput</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>min<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">c</span>.<span class="pl-en">drawInput</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>max<span class="pl-pds">&quot;</span></span>);m<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">plotTop</span><span class="pl-k">-</span><span class="pl-c1">35</span>,<span class="pl-smi">j</span>.<span class="pl-c1">align</span>(<span class="pl-en">u</span>({y<span class="pl-k">:</span>f,width<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">offset</span>,x<span class="pl-k">:</span>h<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&lt;</span>(<span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-c1">height</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">spacing</span>[<span class="pl-c1">0</span>]<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">40</span><span class="pl-k">:</span><span class="pl-c1">0</span>},<span class="pl-smi">i</span>.<span class="pl-smi">inputPosition</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-smi">spacingBox</span>),<span class="pl-smi">c</span>.<span class="pl-en">setInputValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>min<span class="pl-pds">&quot;</span></span>,a),<span class="pl-smi">c</span>.<span class="pl-en">setInputValue</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>max<span class="pl-pds">&quot;</span></span>,b));<span class="pl-smi">c</span>.<span class="pl-smi">rendered</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">destroy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">minInput</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">maxInput</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">blurInputs</span>,e;<span class="pl-en">S</span>(<span class="pl-smi">c</span>.<span class="pl-smi">container</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,d);<span class="pl-en">S</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,d);<span class="pl-en">Ka</span>(<span class="pl-c1">this</span>.<span class="pl-smi">buttons</span>);<span class="pl-k">if</span>(a)<span class="pl-smi">a</span>.<span class="pl-smi">onfocus</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">onblur</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">onchange</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(b)<span class="pl-smi">b</span>.<span class="pl-smi">onfocus</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">onblur</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">onchange</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">for</span>(e <span class="pl-k">in</span> <span class="pl-c1">this</span>)<span class="pl-c1">this</span>[e]<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>chart<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>[e].<span class="pl-smi">destroy</span><span class="pl-k">?</span><span class="pl-c1">this</span>[e].<span class="pl-en">destroy</span>()<span class="pl-k">:</span><span class="pl-c1">this</span>[e].<span class="pl-c1">nodeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">Ta</span>(<span class="pl-c1">this</span>[e])),<span class="pl-c1">this</span>[e]<span class="pl-k">=</span><span class="pl-c1">null</span>}};<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toFixedRange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">fixedRange</span>,a<span class="pl-k">=</span><span class="pl-en">n</span>(c,<span class="pl-c1">this</span>.<span class="pl-en">translate</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>)),b<span class="pl-k">=</span><span class="pl-en">n</span>(d,<span class="pl-c1">this</span>.<span class="pl-en">translate</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)),c<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">-</span>a)<span class="pl-k">/</span>e;c<span class="pl-k">&gt;</span><span class="pl-c1">0.7</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span><span class="pl-c1">1.3</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">?</span>a<span class="pl-k">=</span>b<span class="pl-k">-</span>e<span class="pl-k">:</span>b<span class="pl-k">=</span>a<span class="pl-k">+</span>e);<span class="pl-k">return</span>{min<span class="pl-k">:</span>a,max<span class="pl-k">:</span>b}};<span class="pl-en">R</span>(<span class="pl-smi">sa</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">D</span>(<span class="pl-c1">this</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">rangeSelector</span>.<span class="pl-smi">enabled</span>)<span class="pl-c1">this</span>.<span class="pl-smi">rangeSelector</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">zb</span>(<span class="pl-c1">this</span>)});<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,c)});<span class="pl-c1">Q</span>.<span class="pl-smi">RangeSelector</span><span class="pl-k">=</span>zb;<span class="pl-smi">sa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">callbacks</span>.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(){f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">0</span>].<span class="pl-en">getExtremes</span>();<span class="pl-smi">g</span>.<span class="pl-en">render</span>(<span class="pl-smi">f</span>.<span class="pl-smi">min</span>,<span class="pl-smi">f</span>.<span class="pl-smi">max</span>)}function c(){f=a.xAxis[0].getExtremes();isNaN(f.min)||h.render(f.min,</td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-smi">max</span>)}function d(a){a.triggerOp!==&quot;navigator-drag&quot;&amp;&amp;g.render(a.min,a.max)}function e(a){h.render(a.min,a.max)}var f,g=a.scroller,h=a.rangeSelector;g&amp;&amp;(D(a.xAxis[0],&quot;afterSetExtremes&quot;,d),R(a,&quot;drawChartBox&quot;,function(a){var c=this.isDirtyBox;a.call(this);c&amp;&amp;b()}),b());h&amp;&amp;(D(a.xAxis[0],&quot;afterSetExtremes&quot;,e),D(a,&quot;resize&quot;,c),c());D(a,&quot;destroy&quot;,function(){g&amp;&amp;S(a.xAxis[0],&quot;afterSetExtremes&quot;,d);h&amp;&amp;(S(a,&quot;resize&quot;,c),S(a.xAxis[0],&quot;afterSetExtremes&quot;,e))})});Q.StockChart=function(a,b){var c=a.series,d,e=n(a.navigator&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">navigator</span>.<span class="pl-smi">enabled</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">?</span>{startOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,endOnTick<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">:</span><span class="pl-c1">null</span>,f<span class="pl-k">=</span>{marker<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{radius<span class="pl-k">:</span><span class="pl-c1">5</span>}}},states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{lineWidth<span class="pl-k">:</span><span class="pl-c1">2</span>}}},g<span class="pl-k">=</span>{shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,borderWidth<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span><span class="pl-k">=</span><span class="pl-en">va</span>(<span class="pl-en">ia</span>(<span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span><span class="pl-k">||</span>{}),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">w</span>({minPadding<span class="pl-k">:</span><span class="pl-c1">0</span>,maxPadding<span class="pl-k">:</span><span class="pl-c1">0</span>,ordinal<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,title<span class="pl-k">:</span>{text<span class="pl-k">:</span><span class="pl-c1">null</span>},labels<span class="pl-k">:</span>{overflow<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span>},showLastLabel<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},a,{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>datetime<span class="pl-pds">&quot;</span></span>,categories<span class="pl-k">:</span><span class="pl-c1">null</span>},e)});<span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span><span class="pl-k">=</span><span class="pl-en">va</span>(<span class="pl-en">ia</span>(<span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span><span class="pl-k">||</span>{}),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">opposite</span>;<span class="pl-k">return</span> <span class="pl-en">w</span>({labels<span class="pl-k">:</span>{align<span class="pl-k">:</span>d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span>d<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">2</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">2</span>},showLastLabel<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,title<span class="pl-k">:</span>{text<span class="pl-k">:</span><span class="pl-c1">null</span>}},</td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code blob-code-inner js-file-line">a)});<span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">=</span><span class="pl-en">w</span>({chart<span class="pl-k">:</span>{panning<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,pinchType<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>},<span class="pl-c1">navigator</span><span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},scrollbar<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},rangeSelector<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},title<span class="pl-k">:</span>{text<span class="pl-k">:</span><span class="pl-c1">null</span>},tooltip<span class="pl-k">:</span>{shared<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,crosshairs<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},legend<span class="pl-k">:</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},plotOptions<span class="pl-k">:</span>{line<span class="pl-k">:</span>f,spline<span class="pl-k">:</span>f,area<span class="pl-k">:</span>f,areaspline<span class="pl-k">:</span>f,arearange<span class="pl-k">:</span>f,areasplinerange<span class="pl-k">:</span>f,column<span class="pl-k">:</span>g,columnrange<span class="pl-k">:</span>g,candlestick<span class="pl-k">:</span>g,ohlc<span class="pl-k">:</span>g}},a,{_stock<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,chart<span class="pl-k">:</span>{inverted<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}});<span class="pl-smi">a</span>.<span class="pl-smi">series</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">sa</span>(a,b)};<span class="pl-en">R</span>(<span class="pl-smi">Ya</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">pinchType</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,c);<span class="pl-c1">this</span>.<span class="pl-smi">pinchX</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pinchHor</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">pinchY</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pinchVert</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>});<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPlotLinePath</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isLinked</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">linkedParent</span>.<span class="pl-smi">series</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>,h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">renderer</span>,i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">left</span>,k<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">top</span>,j,l,m,o,p<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span><span class="pl-en">r</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">yAxis</span>)<span class="pl-k">?</span>[<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">yAxis</span>[<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">yAxis</span>]]<span class="pl-k">:</span><span class="pl-en">va</span>(g,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">yAxis</span>})<span class="pl-k">:</span><span class="pl-en">r</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">xAxis</span>)<span class="pl-k">?</span>[<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">xAxis</span>[<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">xAxis</span>]]<span class="pl-k">:</span><span class="pl-en">va</span>(g,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">xAxis</span>}),s<span class="pl-k">=</span>[];<span class="pl-en">q</span>(g,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">ua</span>(a,s)<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">s</span>.<span class="pl-c1">push</span>(a)});e<span class="pl-k">=</span><span class="pl-en">n</span>(e,<span class="pl-smi">f</span>.<span class="pl-en">translate</span>(a,</td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>,<span class="pl-c1">null</span>,c));<span class="pl-c1">isNaN</span>(e)<span class="pl-k">||</span>(<span class="pl-smi">f</span>.<span class="pl-smi">horiz</span><span class="pl-k">?</span><span class="pl-en">q</span>(s,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">top</span>;o<span class="pl-k">=</span>l<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">len</span>;j<span class="pl-k">=</span>m<span class="pl-k">=</span><span class="pl-en">t</span>(e<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">transB</span>);(j<span class="pl-k">&gt;=</span>i<span class="pl-k">&amp;&amp;</span>j<span class="pl-k">&lt;=</span>i<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">width</span><span class="pl-k">||</span>d)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,j,l,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,m,o)})<span class="pl-k">:</span><span class="pl-en">q</span>(s,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">left</span>;m<span class="pl-k">=</span>j<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>;l<span class="pl-k">=</span>o<span class="pl-k">=</span><span class="pl-en">t</span>(k<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>e);(l<span class="pl-k">&gt;=</span>k<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&lt;=</span>k<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span><span class="pl-k">||</span>d)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,j,l,<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,m,o)}));<span class="pl-k">return</span> <span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">h</span>.<span class="pl-en">crispPolyLine</span>(p,b<span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">crispPolyLine</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">+=</span><span class="pl-c1">6</span>)a[c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">===</span>a[c<span class="pl-k">+</span><span class="pl-c1">4</span>]<span class="pl-k">&amp;&amp;</span>(a[c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>a[c<span class="pl-k">+</span><span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-en">t</span>(a[c<span class="pl-k">+</span><span class="pl-c1">1</span>])<span class="pl-k">-</span>b<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>),a[c<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">===</span>a[c<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">&amp;&amp;</span>(a[c<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>a[c<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">=</span><span class="pl-en">t</span>(a[c<span class="pl-k">+</span><span class="pl-c1">2</span>])<span class="pl-k">+</span>b<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">return</span> a};<span class="pl-k">if</span>(Xa<span class="pl-k">===</span><span class="pl-c1">Q</span>.<span class="pl-smi">VMLRenderer</span>)<span class="pl-smi">fb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">crispPolyLine</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">ha</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">crispPolyLine</span>;<span class="pl-en">R</span>(<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>hideCrosshair<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b);<span class="pl-en">r</span>(<span class="pl-c1">this</span>.<span class="pl-smi">crossLabelArray</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">r</span>(b)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">crossLabelArray</span>[b]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">crossLabelArray</span>[b].<span class="pl-en">hide</span>()<span class="pl-k">:</span><span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">crossLabelArray</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-en">hide</span>()}))});<span class="pl-en">R</span>(<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>drawCrosshair<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e;<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,c);<span class="pl-k">if</span>(<span class="pl-en">r</span>(<span class="pl-c1">this</span>.<span class="pl-smi">crosshair</span>.<span class="pl-c1">label</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">crosshair</span>.<span class="pl-c1">label</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(c)){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">crosshair</span>.<span class="pl-c1">label</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">horiz</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">opposite</span>,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">left</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">top</span>,j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">crossLabel</span>,l,m,</td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code blob-code-inner js-file-line">o<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">format</span>,p<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>j)j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">crossLabel</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderer</span>.<span class="pl-c1">label</span>().<span class="pl-en">attr</span>({align<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">align</span><span class="pl-k">||</span>(b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>h<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">labelAlign</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">labelAlign</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>),zIndex<span class="pl-k">:</span><span class="pl-c1">12</span>,height<span class="pl-k">:</span>b<span class="pl-k">?</span><span class="pl-c1">16</span><span class="pl-k">:</span>s,fill<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">backgroundColor</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">series</span>[<span class="pl-c1">0</span>].<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>gray<span class="pl-pds">&quot;</span></span>,padding<span class="pl-k">:</span><span class="pl-en">n</span>(<span class="pl-smi">f</span>.<span class="pl-smi">padding</span>,<span class="pl-c1">2</span>),stroke<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">borderColor</span><span class="pl-k">||</span><span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">borderWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span>}).<span class="pl-en">css</span>(<span class="pl-en">u</span>({color<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white<span class="pl-pds">&quot;</span></span>,fontWeight<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>11px<span class="pl-pds">&quot;</span></span>,textAlign<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>},<span class="pl-smi">f</span>.<span class="pl-c1">style</span>)).<span class="pl-c1">add</span>();b<span class="pl-k">?</span>(l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">plotX</span><span class="pl-k">+</span>i,m<span class="pl-k">=</span>k<span class="pl-k">+</span>(h<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span>))<span class="pl-k">:</span>(l<span class="pl-k">=</span>h<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">:</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">plotY</span><span class="pl-k">+</span>k);<span class="pl-k">if</span>(m<span class="pl-k">&lt;</span>k<span class="pl-k">||</span>m<span class="pl-k">&gt;</span>k<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span>)<span class="pl-c1">this</span>.<span class="pl-en">hideCrosshair</span>();<span class="pl-k">else</span>{<span class="pl-k">!</span>o<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">f</span>.<span class="pl-smi">formatter</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">isDatetimeAxis</span><span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>%b %d, %Y<span class="pl-pds">&quot;</span></span>),o<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>{value<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(p<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">j</span>.<span class="pl-en">attr</span>({x<span class="pl-k">:</span>l,y<span class="pl-k">:</span>m,text<span class="pl-k">:</span>o<span class="pl-k">?</span><span class="pl-en">Ja</span>(o,{value<span class="pl-k">:</span>c[g]})<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">formatter</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,c[g]),visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>});c<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">box</span>;<span class="pl-k">if</span>(b){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tickPosition</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>inside<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tickPosition</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>inside<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>h)m<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">height</span>}<span class="pl-k">else</span> m<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">2</span>;b<span class="pl-k">?</span>(d<span class="pl-k">=</span>i<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>,e<span class="pl-k">=</span>i<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>)<span class="pl-k">:</span>(d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">labelAlign</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>i<span class="pl-k">:</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">labelAlign</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>i<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">chartWidth</span>);<span class="pl-smi">j</span>.<span class="pl-smi">translateX</span><span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">+=</span>d<span class="pl-k">-</span><span class="pl-smi">j</span>.<span class="pl-smi">translateX</span>);<span class="pl-smi">j</span>.<span class="pl-smi">translateX</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">&gt;=</span>e<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">-=</span><span class="pl-smi">j</span>.<span class="pl-smi">translateX</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>e);<span class="pl-smi">j</span>.<span class="pl-en">attr</span>({x<span class="pl-k">:</span>l,y<span class="pl-k">:</span>m,visibility<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>})}}});<span class="pl-k">var</span> lc<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-smi">init</span>,mc<span class="pl-k">=</span><span class="pl-c1">Z</span>.<span class="pl-smi">processData</span>,nc<span class="pl-k">=</span><span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">tooltipFormatter</span>;<span class="pl-c1">Z</span>.<span class="pl-en">init</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">lc</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>);<span class="pl-c1">this</span>.<span class="pl-en">setCompare</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">compare</span>)};<span class="pl-c1">Z</span>.<span class="pl-en">setCompare</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">modifyValue</span><span class="pl-k">=</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>percent<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">compareValue</span>;<span class="pl-k">if</span>(b<span class="pl-k">!==</span>s<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b<span class="pl-k">-</span>d<span class="pl-k">:</span>b<span class="pl-k">=</span><span class="pl-c1">100</span><span class="pl-k">*</span>(b<span class="pl-k">/</span>d)<span class="pl-k">-</span><span class="pl-c1">100</span>,c))<span class="pl-smi">c</span>.<span class="pl-smi">change</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> b}<span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-smi">hasRendered</span>)<span class="pl-c1">this</span>.<span class="pl-smi">isDirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-c1">Z</span>.<span class="pl-smi">processData</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,b,c,d;<span class="pl-smi">mc</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">processedYData</span>){b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">processedXData</span>;c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">processedYData</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-k">typeof</span> c[a]<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>b[a]<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">xAxis</span>.<span class="pl-smi">min</span>){<span class="pl-c1">this</span>.<span class="pl-smi">compareValue</span><span class="pl-k">=</span>c[a];<span class="pl-k">break</span>}}};<span class="pl-en">R</span>(<span class="pl-c1">Z</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>getExtremes<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">modifyValue</span>)<span class="pl-c1">this</span>.<span class="pl-smi">dataMax</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">modifyValue</span>(<span class="pl-c1">this</span>.<span class="pl-smi">dataMax</span>),<span class="pl-c1">this</span>.<span class="pl-smi">dataMin</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">modifyValue</span>(<span class="pl-c1">this</span>.<span class="pl-smi">dataMin</span>)});<span class="pl-c1">N</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setCompare</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">isXAxis</span><span class="pl-k">||</span>(<span class="pl-en">q</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-en">setCompare</span>(a)}),<span class="pl-en">n</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">chart</span>.<span class="pl-en">redraw</span>())};</td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">tooltipFormatter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>{point.change}<span class="pl-pds">&quot;</span></span>,(<span class="pl-c1">this</span>.<span class="pl-smi">change</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-en">Ia</span>(<span class="pl-c1">this</span>.<span class="pl-smi">change</span>,<span class="pl-en">n</span>(<span class="pl-c1">this</span>.<span class="pl-smi">series</span>.<span class="pl-smi">tooltipOptions</span>.<span class="pl-smi">changeDecimals</span>,<span class="pl-c1">2</span>)));<span class="pl-k">return</span> <span class="pl-smi">nc</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,[a])};<span class="pl-en">u</span>(<span class="pl-c1">Q</span>,{Axis<span class="pl-k">:</span><span class="pl-c1">N</span>,Chart<span class="pl-k">:</span>sa,Color<span class="pl-k">:</span>Ea,<span class="pl-c1">Point</span><span class="pl-k">:</span>xa,Tick<span class="pl-k">:</span>$a,Renderer<span class="pl-k">:</span>Xa,Series<span class="pl-k">:</span><span class="pl-c1">M</span>,<span class="pl-c1">SVGElement</span><span class="pl-k">:</span>Ca,SVGRenderer<span class="pl-k">:</span>ha,arrayMin<span class="pl-k">:</span>Sa,arrayMax<span class="pl-k">:</span>Aa,charts<span class="pl-k">:</span>da,dateFormat<span class="pl-k">:</span>ra,format<span class="pl-k">:</span>Ja,pathAnim<span class="pl-k">:</span>Bb,<span class="pl-en">getOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">G</span>},hasBidiBug<span class="pl-k">:</span>Yb,isTouchDevice<span class="pl-k">:</span>db,numberFormat<span class="pl-k">:</span>Ia,seriesTypes<span class="pl-k">:</span><span class="pl-c1">H</span>,<span class="pl-en">setOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-en">w</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">G</span>,a);<span class="pl-en">Lb</span>();<span class="pl-k">return</span> <span class="pl-c1">G</span>},addEvent<span class="pl-k">:</span><span class="pl-c1">D</span>,</td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code blob-code-inner js-file-line">removeEvent<span class="pl-k">:</span><span class="pl-c1">S</span>,createElement<span class="pl-k">:</span><span class="pl-c1">Y</span>,discardElement<span class="pl-k">:</span>Ta,css<span class="pl-k">:</span><span class="pl-c1">J</span>,each<span class="pl-k">:</span>q,extend<span class="pl-k">:</span>u,map<span class="pl-k">:</span>va,merge<span class="pl-k">:</span>w,pick<span class="pl-k">:</span>n,splat<span class="pl-k">:</span>ia,extendClass<span class="pl-k">:</span>ca,pInt<span class="pl-k">:</span>y,wrap<span class="pl-k">:</span><span class="pl-c1">R</span>,svg<span class="pl-k">:</span>$,canvas<span class="pl-k">:</span>ga,vml<span class="pl-k">:</span><span class="pl-k">!</span>$<span class="pl-k">&amp;&amp;!</span>ga,product<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Highstock<span class="pl-pds">&quot;</span></span>,version<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>1.3.10<span class="pl-pds">&quot;</span></span>})})();</td>
      </tr>
</table>

  <div class="BlobToolbar position-absolute js-file-line-actions dropdown js-menu-container js-select-menu d-none" aria-hidden="true">
    <button class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1 dropdown-toggle js-menu-target" id="js-file-line-action-button" type="button" aria-expanded="false" aria-haspopup="true" aria-label="Inline file action toolbar" aria-controls="inline-file-actions">
      <svg class="octicon octicon-kebab-horizontal" viewBox="0 0 13 16" version="1.1" width="13" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M1.5 9a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"/></svg>
    </button>
    <div class="dropdown-menu-content js-menu-content" id="inline-file-actions">
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2">
        <li><clipboard-copy class="dropdown-item" style="cursor:pointer;" id="js-copy-lines" data-original-text="Copy lines">Copy lines</clipboard-copy></li>
        <li><clipboard-copy class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</clipboard-copy></li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" href="/nesbert/highstock/blame/10835f6172383c28553f1a1527b0b4da13489985/highstock.js">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" href="/nesbert/highstock/issues/new">Open new issue</a></li>
      </ul>
    </div>
  </div>

  </div>

  </div>

  <button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
  <div id="jump-to-line" style="display:none">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form" action="" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
      <button type="submit" class="btn">Go</button>
</form>  </div>


  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between py-6 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2018 <span title="0.33286s from unicorn-1423158533-m7ds4">GitHub</span>, Inc.</li>
        <li class="mr-3"><a data-ga-click="Footer, go to terms, text:terms" href="https://github.com/site/terms">Terms</a></li>
        <li class="mr-3"><a data-ga-click="Footer, go to privacy, text:privacy" href="https://github.com/site/privacy">Privacy</a></li>
        <li class="mr-3"><a href="https://help.github.com/articles/github-security/" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li class="mr-3"><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:help" href="https://help.github.com">Help</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon" href="https://github.com">
      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a data-ga-click="Footer, go to contact, text:contact" href="https://github.com/contact">Contact GitHub</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li class="mr-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li class="mr-3"><a data-ga-click="Footer, go to blog, text:blog" href="https://github.com/blog">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>

    </ul>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha512-WlBEk80l93BoQ/cYoq3SHKUFE78wapSGqDnigzxAavJ6Ljv0/aCq1TVhOgxGRyPj/PwL8hV68gMJuVPojOaYVw==" type="application/javascript" src="https://assets-cdn.github.com/assets/frameworks-c7cbfac9c99b15bacb6a766972353d4d.js"></script>
    
    <script crossorigin="anonymous" async="async" integrity="sha512-Ivsf/DzuU9MhsqnW4zjAfAYKMxUd/JIkiuJQuGUsXrdrYxKl2BvdAhe6mJAEpGa3AK0pMgbV+lpfk4RsdC/k9A==" type="application/javascript" src="https://assets-cdn.github.com/assets/github-ec2e4b83531ae4863282954cdefcc7b3.js"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>

  <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large px-3 pb-3 my-3" style="width:360px;">
  </div>
</div>

<div id="hovercard-aria-description" class="sr-only">
  Press h to open a hovercard with more details.
</div>


  </body>
</html>

